{
    "id": "6adb387e-26df-4e8f-8ae8-a5ce233ed308",
    "name": "Airbnb",
    "description": "",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "isSampleApp": false,
    "thumbnailPath": "img/mix.png",
    "widgetList": [
        {
            "id": "vis55a44820-f5e8-4a0e-a21a-bd603f05f4dd",
            "layout": {
                "w": 6,
                "h": 6,
                "x": 6,
                "y": 44,
                "i": "vis55a44820-f5e8-4a0e-a21a-bd603f05f4dd1",
                "moved": false,
                "static": false
            },
            "title": "most popular neighborhoods",
            "visualization": "Tree Map",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"neighbourhood\")",
                "    .label(\"neighbourhood\")",
                "    .operation(\"NOT IN\")",
                "    .value([\"null\"]);",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"neighbourhood\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Tree Map\")",
                "    .set(\"color\", color)",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "visb25d9a87-275a-4adb-ba08-822272131d18",
            "layout": {
                "w": 4,
                "h": 6,
                "x": 8,
                "y": 6,
                "i": "visb25d9a87-275a-4adb-ba08-822272131d181",
                "moved": false,
                "static": false
            },
            "title": "price-property",
            "visualization": "Histogram",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"price\")",
                "    .label(\"price\")",
                "    .operation(\"GT\")",
                "    .value([0]);",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"price\", \"histogram\").fixedBars(100)",
                "    .offset(0)",
                "    .showEmptyIntervals(false);",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0)",
                "    .limit(100);",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(20)",
                "    .right(20)",
                "    .bottom(20)",
                "    .left(40);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\"]);",
                "myData.staticFilters(staticFilter1);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Histogram\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"xAxis\", { \"position\": \"bottom\" })",
                "    .set(\"yAxis\", { \"type\": \"log\" })",
                "    .set(\"serieLabel\", {",
                "    \"show\": false",
                "})",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis3a626fff-e50d-452b-b4cc-58379dc8ab64",
            "layout": {
                "w": 6,
                "h": 5,
                "x": 0,
                "y": 50,
                "i": "vis3a626fff-e50d-452b-b4cc-58379dc8ab641",
                "moved": false,
                "static": false
            },
            "title": "amenities price",
            "visualization": "Tree Map",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"amenities_categorized\")",
                "    .limit(9)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Tree Map\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": true,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis0b21efba-2d7f-432a-89d9-092b421e8b1d",
            "layout": {
                "w": 6,
                "h": 6,
                "x": 0,
                "y": 44,
                "i": "vis0b21efba-2d7f-432a-89d9-092b421e8b1d1",
                "moved": false,
                "static": false
            },
            "title": "beds",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"beds\")",
                "    .label(\"beds\")",
                "    .operation(\"GT\")",
                "    .value([0]);",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"beds\")",
                "    .limit(13)",
                "    .sort(\"asc\", \"beds\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"yAxis\", { \"type\": \"log\" })",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis66bda0af-3404-4432-80a7-44632ac238c0",
            "layout": {
                "w": 8,
                "h": 12,
                "x": 0,
                "y": 0,
                "i": "vis66bda0af-3404-4432-80a7-44632ac238c01",
                "moved": false,
                "static": false
            },
            "title": "abnb_listings (1)",
            "visualization": "Geo Map GL",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),\r",
                "// and clientFilters() to manage filters. To apply additional\r",
                "// filters, use staticFilters() or your code could be overwritten.\r",
                "//\r",
                "/* Configuration code for this widget */\r",
                "let myChart = cf.create().graph(\"Geo Map GL\")\r",
                "    .set(\"layers\", [\r",
                "        {\r",
                "            \"name\": \"heatmap\",\r",
                "            \"priority\": 2,\r",
                "            \"type\": \"heatmap\",\r",
                "            \"provider\": \"local\",\r",
                "            \"source\": \"abnb_listings\",\r",
                "            \"properties\": {\r",
                "                \"limit\": 20000,\r",
                "                \"location\": \"location\",\r",
                "                \"visibilityZoomRange\": [0, 24],\r",
                "                \"options\": {\r",
                "                    \"heatmap-weight\": [\"interpolate\", [\"linear\"], [\"get\", \"__cf_cluster_count_percent__\"], 1, 0.2, 80, 85],\r",
                "                    \"heatmap-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"__cf_cluster_count_percent__\"], 1, 3, 20, 5, 80, 10],\r",
                "                    \"heatmap-intensity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 5, 1, 18, 6],\r",
                "                    \"heatmap-color\": [\"interpolate\", [\"linear\"], [\"heatmap-density\"], 0, \"rgba(0, 0, 255, 0)\", 0.1, \"royalblue\", 0.3, \"cyan\", 0.5, \"lime\", 0.7, \"yellow\", 1, \"red\"],\r",
                "                    \"switchToMarkersAtRaw\": true,\r",
                "                },\r",
                "                \"precisionLevels\": { \"raw\": { \"zoom\": 13, \"fields\": [\"location\"] }, \"levels\": [{ \"zoom\": 2, \"precision\": 3 }, { \"zoom\": 4, \"precision\": 5 }, { \"zoom\": 6, \"precision\": 6 }, { \"zoom\": 9, \"precision\": 7 }, { \"zoom\": 12, \"precision\": 8 }] },\r",
                "                \"color\": cf.Color()\r",
                "                    .palette([\"#08519c\", \"#3182bd\", \"#6baed6\", \"#bdd7e7\", \"#eff3ff\"])\r",
                "                    .metric(cf.Metric()),\r",
                "            },\r",
                "        },\r",
                "        {\r",
                "            \"type\": \"tile\",\r",
                "            \"name\": \"Tile\",\r",
                "            \"priority\": 1,\r",
                "            \"properties\": {\r",
                "                \"source\": { \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"], \"scheme\": \"xyz\", \"attribution\": \"Map data &copy; <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>\" },\r",
                "            },\r",
                "        },\r",
                "    ])\r",
                "    .set(\"zoom\", 11.03971939722416)\r",
                "    .set(\"center\", [-74.05242077848425, 40.73314079101007])\r",
                "    .set(\"layersControl\", {\r",
                "        \"collapsed\": true,\r",
                "        \"position\": \"bottom-left\"\r",
                "    })\r",
                "    .set(\"drawControl\", true)\r",
                "    .set(\"enableZoomInfo\", true)\r",
                "    .execute();\r",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layersProviders": [
                "local"
            ],
            "layerSources": [
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis497e3f9a-bcc6-4244-92f2-4bd554e09202",
            "layout": {
                "w": 12,
                "h": 9,
                "x": 0,
                "y": 35,
                "i": "vis497e3f9a-bcc6-4244-92f2-4bd554e092021",
                "moved": false,
                "static": false
            },
            "title": "Listing records",
            "visualization": "Raw Data Table",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Declare your fields (do not remove this comment line)",
                "const fields = [",
                "    cf.Field(\"host_name\", \"Host name\").group(\" \"),",
                "    cf.Field(\"neighbourhood\", \"Neighbourhood\").group(\"Location\"),",
                "    cf.Field(\"neighbourhood_cleansed\", \"Neighbourhood cleansed\").group(\"Location\"),",
                "    cf.Field(\"neighbourhood_group_cleansed\", \"Neighbourhood group cleansed\").group(\"Location\"),",
                "    cf.Field(\"neighborhood_overview\", \"Neighborhood overview\").group(\"Location\"),",
                "    cf.Field(\"name\", \"Name\").group(\"Property info\"),",
                "    cf.Field(\"property_type\", \"Property type\").group(\"Property info\"),",
                "    cf.Field(\"price\", \"Price\").group(\"Property info\"),",
                "    cf.Field(\"room_type\", \"Room type\").group(\"Property info\"),",
                "    cf.Field(\"bathrooms\", \"Bathrooms\").group(\"Property info\"),",
                "    cf.Field(\"bedrooms\", \"Bedrooms\").group(\"Property info\"),",
                "    cf.Field(\"beds\", \"Beds\").group(\"Property info\"),",
                "    cf.Field(\"number_of_reviews\", \"Number of reviews\").group(\"Reviews info\"),",
                "    cf.Field(\"number_of_reviews_l30d\", \"Number of reviews l30d\").group(\"Reviews info\"),",
                "    cf.Field(\"number_of_reviews_ltm\", \"Number of reviews ltm\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_checkin\", \"Review scores checkin\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_accuracy\", \"Review scores accuracy\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_cleanliness\", \"Review scores cleanliness\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_communication\", \"Review scores communication\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_location\", \"Review scores location\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_rating\", \"Review scores rating\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_value\", \"Review scores value\").group(\"Reviews info\"),",
                "    cf.Field(\"reviews_per_month\", \"Reviews per month\").group(\"Reviews info\"),",
                "    cf.Field(\"estimated_occupied_time\", \"Estimated occupied time\").group(\"# Listings metrics\"),",
                "    cf.Field(\"income_ltm\", \"Income ltm\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count\", \"#Listings per host\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_entire_homes\", \"#Entire home/apts\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_private_rooms\", \"#Private rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_shared_rooms\", \"#Shared rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_hotel_rooms\", \"#Hotel rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calendar_last_scraped\", \"Calendar last scraped\").group(\"# Listings metrics\"),",
                "    cf.Field(\"zipcode\", \"Zipcode\").group(\"     \"),",
                "    cf.Field(\"picture_url\", \"Picture url\").group(\"     \"),",
                "    cf.Field(\"accommodates\", \"Accommodates\").group(\"     \"),",
                "    cf.Field(\"amenities_categorized\", \"Amenities categorized\").group(\"     \"),",
                "    cf.Field(\"availability_30\", \"Availability 30\").group(\"     \"),",
                "    cf.Field(\"availability_365\", \"Availability 365\").group(\"     \"),",
                "    cf.Field(\"availability_60\", \"Availability 60\").group(\"     \"),",
                "    cf.Field(\"availability_90\", \"Availability 90\").group(\"     \"),",
                "    cf.Field(\"bathrooms_text\", \"Bathrooms text\").group(\"     \"),",
                "    cf.Field(\"description\", \"Description\").group(\"     \"),",
                "    cf.Field(\"first_review\", \"First review\").group(\"     \"),",
                "    cf.Field(\"has_availability\", \"Has availability\").group(\"     \"),",
                "    cf.Field(\"host_acceptance_rate\", \"Host acceptance rate\").group(\"     \"),",
                "    cf.Field(\"host_has_profile_pic\", \"Host has profile pic\").group(\"     \"),",
                "    cf.Field(\"host_id\", \"Host id\").group(\"     \"),",
                "    cf.Field(\"host_identity_verified\", \"Host identity verified\").group(\"     \"),",
                "    cf.Field(\"host_is_superhost\", \"Host is superhost\").group(\"     \"),",
                "    cf.Field(\"host_listings_count\", \"Host listings count\").group(\"     \"),",
                "    cf.Field(\"host_location\", \"Host location\").group(\"     \"),",
                "    cf.Field(\"host_neighbourhood\", \"Host neighbourhood\").group(\"     \"),",
                "    cf.Field(\"host_picture_url\", \"Host picture url\").group(\"     \"),",
                "    cf.Field(\"host_response_rate\", \"Host response rate\").group(\"     \"),",
                "    cf.Field(\"host_response_time\", \"Host response time\").group(\"     \"),",
                "    cf.Field(\"host_since\", \"Host since\").group(\"     \"),",
                "    cf.Field(\"host_thumbnail_url\", \"Host thumbnail url\").group(\"     \"),",
                "    cf.Field(\"host_total_listings_count\", \"Host total listings count\").group(\"     \"),",
                "    cf.Field(\"host_url\", \"Host url\").group(\"     \"),",
                "    cf.Field(\"host_verifications\", \"Host verifications\").group(\"     \"),",
                "    cf.Field(\"id\", \"Id\").group(\"     \"),",
                "    cf.Field(\"instant_bookable\", \"Instant bookable\").group(\"     \"),",
                "    cf.Field(\"last_review\", \"Last review\").group(\"     \"),",
                "    cf.Field(\"last_scraped\", \"Last scraped\").group(\"     \"),",
                "    cf.Field(\"latitude\", \"Latitude\").group(\"     \"),",
                "    cf.Field(\"license\", \"License\").group(\"     \"),",
                "    cf.Field(\"listing_url\", \"Listing url\").group(\"     \"),",
                "    cf.Field(\"location\", \"Location\").group(\"     \"),",
                "    cf.Field(\"longitude\", \"Longitude\").group(\"     \"),",
                "    cf.Field(\"maximum_maximum_nights\", \"Maximum maximum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_minimum_nights\", \"Maximum minimum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_nights\", \"Maximum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_nights_avg_ntm\", \"Maximum nights avg ntm\").group(\"     \"),",
                "    cf.Field(\"minimum_maximum_nights\", \"Minimum maximum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_minimum_nights\", \"Minimum minimum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_nights\", \"Minimum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_nights_avg_ntm\", \"Minimum nights avg ntm\").group(\"     \"),",
                "    cf.Field(\"scrape_id\", \"Scrape id\").group(\"     \"),",
                "    cf.Field(\"source\", \"Source\").group(\"     \"),",
                "];",
                "let myData = source.fields(fields);",
                "let histogramColor = cf.Color();",
                "histogramColor.theme({ background: \"white\" });",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Raw Data Table\")",
                "    .set(\"columnFilters\", [",
                "    { field: \"host_name\", component: \"slicer\" },",
                "    { field: \"neighbourhood\", component: \"slicer\" },",
                "    { field: \"neighbourhood_cleansed\", component: \"slicer\" },",
                "    { field: \"neighbourhood_group_cleansed\", component: \"slicer\" },",
                "    { field: \"neighborhood_overview\", component: \"slicer\" },",
                "    { field: \"name\", component: \"slicer\" },",
                "    { field: \"property_type\", component: \"slicer\" },",
                "    { field: \"price\", component: \"range\" },",
                "    { field: \"room_type\", component: \"slicer\" },",
                "    { field: \"bathrooms\", component: \"slicer\" },",
                "    { field: \"bedrooms\", component: \"slicer\" },",
                "    { field: \"beds\", component: \"range\" },",
                "    { field: \"number_of_reviews\", component: \"range\" },",
                "    { field: \"number_of_reviews_l30d\", component: \"range\" },",
                "    { field: \"number_of_reviews_ltm\", component: \"range\" },",
                "    { field: \"review_scores_checkin\", component: \"range\" },",
                "    { field: \"review_scores_accuracy\", component: \"range\" },",
                "    { field: \"review_scores_cleanliness\", component: \"range\" },",
                "    { field: \"review_scores_communication\", component: \"range\" },",
                "    { field: \"review_scores_location\", component: \"range\" },",
                "    { field: \"review_scores_rating\", component: \"range\" },",
                "    { field: \"review_scores_value\", component: \"range\" },",
                "    { field: \"reviews_per_month\", component: \"range\" },",
                "    { field: \"estimated_occupied_time\", component: \"range\" },",
                "    { field: \"income_ltm\", component: \"range\" },",
                "    { field: \"calculated_host_listings_count\", component: \"range\" },",
                "    { field: \"calculated_host_listings_count_entire_homes\", component: \"range\" },",
                "    { field: \"calculated_host_listings_count_private_rooms\", component: \"range\" },",
                "    { field: \"calculated_host_listings_count_shared_rooms\", component: \"range\" },",
                "    { field: \"calculated_host_listings_count_hotel_rooms\", component: \"range\" },",
                "    { field: \"calendar_last_scraped\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"zipcode\", component: \"slicer\" },",
                "    { field: \"picture_url\", component: \"slicer\" },",
                "    { field: \"accommodates\", component: \"range\" },",
                "    { field: \"amenities_categorized\", component: \"slicer\" },",
                "    { field: \"availability_30\", component: \"range\" },",
                "    { field: \"availability_365\", component: \"range\" },",
                "    { field: \"availability_60\", component: \"range\" },",
                "    { field: \"availability_90\", component: \"range\" },",
                "    { field: \"bathrooms_text\", component: \"slicer\" },",
                "    { field: \"description\", component: \"slicer\" },",
                "    { field: \"first_review\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"has_availability\", component: \"slicer\" },",
                "    { field: \"host_acceptance_rate\", component: \"slicer\" },",
                "    { field: \"host_has_profile_pic\", component: \"slicer\" },",
                "    { field: \"host_id\", component: \"slicer\" },",
                "    { field: \"host_identity_verified\", component: \"slicer\" },",
                "    { field: \"host_is_superhost\", component: \"slicer\" },",
                "    { field: \"host_listings_count\", component: \"range\" },",
                "    { field: \"host_location\", component: \"slicer\" },",
                "    { field: \"host_neighbourhood\", component: \"slicer\" },",
                "    { field: \"host_picture_url\", component: \"slicer\" },",
                "    { field: \"host_response_rate\", component: \"slicer\" },",
                "    { field: \"host_response_time\", component: \"slicer\" },",
                "    { field: \"host_since\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"host_thumbnail_url\", component: \"slicer\" },",
                "    { field: \"host_total_listings_count\", component: \"range\" },",
                "    { field: \"host_url\", component: \"slicer\" },",
                "    { field: \"host_verifications\", component: \"slicer\" },",
                "    { field: \"id\", component: \"slicer\" },",
                "    { field: \"instant_bookable\", component: \"slicer\" },",
                "    { field: \"last_review\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"last_scraped\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"latitude\", component: \"range\" },",
                "    { field: \"license\", component: \"slicer\" },",
                "    { field: \"listing_url\", component: \"slicer\" },",
                "    { field: \"longitude\", component: \"range\" },",
                "    { field: \"maximum_maximum_nights\", component: \"range\" },",
                "    { field: \"maximum_minimum_nights\", component: \"range\" },",
                "    { field: \"maximum_nights\", component: \"range\" },",
                "    { field: \"maximum_nights_avg_ntm\", component: \"range\" },",
                "    { field: \"minimum_maximum_nights\", component: \"range\" },",
                "    { field: \"minimum_minimum_nights\", component: \"range\" },",
                "    { field: \"minimum_nights\", component: \"range\" },",
                "    { field: \"minimum_nights_avg_ntm\", component: \"range\" },",
                "    { field: \"scrape_id\", component: \"datePicker\", props: { func: \"DAY\" } },",
                "    { field: \"source\", component: \"slicer\" },",
                "])",
                "    .set(\"copyRowOnSelection\", true)",
                "    .limit(100)",
                "    .set(\"columnStats\", { enabled: true, height: 70, widgetProps: [",
                "        { field: \"host_name\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"zipcode\", props: { color: histogramColor } },",
                "        { field: \"picture_url\", props: { color: histogramColor } },",
                "        { field: \"accommodates\", props: { color: histogramColor } },",
                "        { field: \"amenities_categorized\", props: { color: histogramColor } },",
                "        { field: \"availability_30\", props: { color: histogramColor } },",
                "        { field: \"availability_365\", props: { color: histogramColor } },",
                "        { field: \"availability_60\", props: { color: histogramColor } },",
                "        { field: \"availability_90\", props: { color: histogramColor } },",
                "        { field: \"bathrooms_text\", props: { color: histogramColor } },",
                "        { field: \"description\", props: { color: histogramColor } },",
                "        { field: \"first_review\", props: { color: histogramColor } },",
                "        { field: \"has_availability\", props: { color: histogramColor } },",
                "        { field: \"host_acceptance_rate\", props: { color: histogramColor } },",
                "        { field: \"host_has_profile_pic\", props: { color: histogramColor } },",
                "        { field: \"host_id\", props: { color: histogramColor } },",
                "        { field: \"host_identity_verified\", props: { color: histogramColor } },",
                "        { field: \"host_is_superhost\", props: { color: histogramColor } },",
                "        { field: \"host_listings_count\", props: { color: histogramColor } },",
                "        { field: \"host_location\", props: { color: histogramColor } },",
                "        { field: \"host_neighbourhood\", props: { color: histogramColor } },",
                "        { field: \"host_picture_url\", props: { color: histogramColor } },",
                "        { field: \"host_response_rate\", props: { color: histogramColor } },",
                "        { field: \"host_response_time\", props: { color: histogramColor } },",
                "        { field: \"host_since\", props: { color: histogramColor } },",
                "        { field: \"host_thumbnail_url\", props: { color: histogramColor } },",
                "        { field: \"host_total_listings_count\", props: { color: histogramColor } },",
                "        { field: \"host_url\", props: { color: histogramColor } },",
                "        { field: \"host_verifications\", props: { color: histogramColor } },",
                "        { field: \"id\", props: { color: histogramColor } },",
                "        { field: \"instant_bookable\", props: { color: histogramColor } },",
                "        { field: \"last_review\", props: { color: histogramColor } },",
                "        { field: \"last_scraped\", props: { color: histogramColor } },",
                "        { field: \"latitude\", props: { color: histogramColor } },",
                "        { field: \"license\", props: { color: histogramColor } },",
                "        { field: \"listing_url\", props: { color: histogramColor } },",
                "        { field: \"location\", props: { color: histogramColor } },",
                "        { field: \"longitude\", props: { color: histogramColor } },",
                "        { field: \"maximum_maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_nights_avg_ntm\", props: { color: histogramColor } },",
                "        { field: \"minimum_maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_nights_avg_ntm\", props: { color: histogramColor } },",
                "        { field: \"scrape_id\", props: { color: histogramColor } },",
                "        { field: \"source\", props: { color: histogramColor } }",
                "    ] })",
                "    .set(\"columnsWidth\", [",
                "    { \"host_name\": 239 },",
                "    { \"neighbourhood\": 221 },",
                "    { \"neighbourhood_cleansed\": 184 },",
                "    { \"neighbourhood_group_cleansed\": 210 },",
                "    { \"neighborhood_overview\": 295 },",
                "    { \"name\": 80 },",
                "    { \"property_type\": 218 },",
                "    { \"price\": 122 },",
                "    { \"room_type\": 168 },",
                "    { \"bathrooms\": 145 },",
                "    { \"bedrooms\": 145 },",
                "    { \"beds\": 80 },",
                "    { \"number_of_reviews\": 163 },",
                "    { \"number_of_reviews_l30d\": 184 },",
                "    { \"number_of_reviews_ltm\": 191 },",
                "    { \"review_scores_checkin\": 209 },",
                "    { \"review_scores_accuracy\": 188 },",
                "    { \"review_scores_cleanliness\": 196 },",
                "    { \"review_scores_communication\": 225 },",
                "    { \"review_scores_location\": 154 },",
                "    { \"review_scores_rating\": 178 },",
                "    { \"review_scores_value\": 174 },",
                "    { \"reviews_per_month\": 163 },",
                "    { \"estimated_occupied_time\": 241 },",
                "    { \"income_ltm\": 100 },",
                "    { \"calculated_host_listings_count\": 167 },",
                "    { \"calculated_host_listings_count_entire_homes\": 150 },",
                "    { \"calculated_host_listings_count_private_rooms\": 136 },",
                "    { \"calculated_host_listings_count_shared_rooms\": 135 },",
                "    { \"calculated_host_listings_count_hotel_rooms\": 134 },",
                "    { \"calendar_last_scraped\": 155 },",
                "    { \"zipcode\": 80 },",
                "    { \"picture_url\": 738 },",
                "    { \"accommodates\": 80 },",
                "    { \"amenities_categorized\": 356 },",
                "    { \"availability_30\": 133 },",
                "    { \"availability_365\": 141 },",
                "    { \"availability_60\": 141 },",
                "    { \"availability_90\": 111 },",
                "    { \"bathrooms_text\": 136 },",
                "    { \"description\": 183 },",
                "    { \"first_review\": 150 },",
                "    { \"has_availability\": 154 },",
                "    { \"host_acceptance_rate\": 80 },",
                "    { \"host_has_profile_pic\": 178 },",
                "    { \"host_id\": 80 },",
                "    { \"host_identity_verified\": 80 },",
                "    { \"host_is_superhost\": 145 },",
                "    { \"host_listings_count\": 80 },",
                "    { \"host_location\": 80 },",
                "    { \"host_neighbourhood\": 80 },",
                "    { \"host_picture_url\": 80 },",
                "    { \"host_response_rate\": 80 },",
                "    { \"host_response_time\": 80 },",
                "    { \"host_since\": 80 },",
                "    { \"host_thumbnail_url\": 80 },",
                "    { \"host_total_listings_count\": 80 },",
                "    { \"host_url\": 80 },",
                "    { \"host_verifications\": 80 },",
                "    { \"id\": 80 },",
                "    { \"instant_bookable\": 80 },",
                "    { \"last_review\": 80 },",
                "    { \"last_scraped\": 80 },",
                "    { \"latitude\": 80 },",
                "    { \"license\": 80 },",
                "    { \"listing_url\": 80 },",
                "    { \"location\": 80 },",
                "    { \"longitude\": 80 },",
                "    { \"maximum_maximum_nights\": 207 },",
                "    { \"maximum_minimum_nights\": 222 },",
                "    { \"maximum_nights\": 154 },",
                "    { \"maximum_nights_avg_ntm\": 188 },",
                "    { \"minimum_maximum_nights\": 203 },",
                "    { \"minimum_minimum_nights\": 192 },",
                "    { \"minimum_nights\": 162 },",
                "    { \"minimum_nights_avg_ntm\": 185 },",
                "    { \"scrape_id\": 80 },",
                "    { \"source\": 80 }",
                "])",
                "    .set(\"sort\", [{ \"calculated_host_listings_count\": \"desc\" }])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "host_name",
                "zipcode",
                "picture_url",
                "accommodates",
                "amenities_categorized",
                "availability_30",
                "availability_365",
                "availability_60",
                "availability_90",
                "bathrooms_text",
                "description",
                "first_review",
                "has_availability",
                "host_acceptance_rate",
                "host_has_profile_pic",
                "host_id",
                "host_identity_verified",
                "host_is_superhost",
                "host_listings_count",
                "host_location",
                "host_neighbourhood",
                "host_picture_url",
                "host_response_rate",
                "host_response_time",
                "host_since",
                "host_thumbnail_url",
                "host_total_listings_count",
                "host_url",
                "host_verifications",
                "id",
                "instant_bookable",
                "last_review",
                "last_scraped",
                "latitude",
                "license",
                "listing_url",
                "location",
                "longitude",
                "maximum_maximum_nights",
                "maximum_minimum_nights",
                "maximum_nights",
                "maximum_nights_avg_ntm",
                "minimum_maximum_nights",
                "minimum_minimum_nights",
                "minimum_nights",
                "minimum_nights_avg_ntm",
                "scrape_id",
                "source",
                "amenities",
                "calendar_updated",
                "is_usa"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf473229c-5a6a-4b24-bc59-62a7b7d27eca",
            "layout": {
                "w": 4,
                "h": 4,
                "x": 8,
                "y": 2,
                "i": "visf473229c-5a6a-4b24-bc59-62a7b7d27eca1",
                "moved": false,
                "static": false
            },
            "title": "Room type",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"room_type\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"bottom\")",
                "    .width(150)",
                "    .height(30)",
                "    .sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(15)",
                "    .left(5);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .match({",
                "    \"Entire home/apt\": \"#0095b7\",",
                "    \"Private room\": \"#a0b774\",",
                "    \"Shared room\": \"#f4c658\",",
                "    \"Hotel room\": \"#fe8b3e\"",
                "})",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"legend\", legend)",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"orientation\", \"vertical\")",
                "    .set(\"xAxis\", { \"show\": true, \"lines\": false })",
                "    .set(\"yAxis\", { \"text\": \"out\", \"lines\": false })",
                "    .set(\"dataZoom\", false)",
                "    .set(\"serieLabel\", {",
                "    \"show\": true",
                "})",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis417e4d6d-2afa-4285-a778-2f9465c528aa",
            "layout": {
                "w": 4,
                "h": 2,
                "x": 8,
                "y": 0,
                "i": "vis417e4d6d-2afa-4285-a778-2f9465c528aa1",
                "moved": false,
                "static": false
            },
            "title": "Listings",
            "visualization": "KPI",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "let metric0 = cf.Metric(\"count\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 12)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis79728b36-d545-4083-8f35-b4a6eaa9f7e5",
            "layout": {
                "w": 8,
                "h": 9,
                "x": 0,
                "y": 21,
                "i": "vis79728b36-d545-4083-8f35-b4a6eaa9f7e51",
                "moved": false,
                "static": false
            },
            "title": "Top 50 hosts in the area",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"calculated_host_listings_count\", \"avg\").hideFunction();",
                "let metric1 = cf.Metric(\"calculated_host_listings_count_entire_homes\", \"avg\").hideFunction();",
                "let metric2 = cf.Metric(\"calculated_host_listings_count_private_rooms\", \"avg\").hideFunction();",
                "let metric3 = cf.Metric(\"calculated_host_listings_count_shared_rooms\", \"avg\").hideFunction();",
                "let metric4 = cf.Metric(\"calculated_host_listings_count_hotel_rooms\", \"avg\").hideFunction();",
                "let metric5 = cf.Metric(\"count\", \"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(10000)",
                "    .sort(\"desc\", cf.Metric(\"calculated_host_listings_count_hotel_rooms\", \"avg\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0, metric1, metric2, metric3, metric4, metric5);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Slicer\")",
                "    .set(\"columnsWidth\", [",
                "    { \"group\": 158 },",
                "    { \"calculated_host_listings_count\": 86 },",
                "    { \"calculated_host_listings_count_entire_homes\": 111 },",
                "    { \"calculated_host_listings_count_private_rooms\": 125 },",
                "    { \"calculated_host_listings_count_shared_rooms\": 152 },",
                "    { \"calculated_host_listings_count_hotel_rooms\": 111 },",
                "    { \"count\": 94 }",
                "])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "visdb2d3930-0cf8-461d-9c59-5b9cce3d90d8",
            "layout": {
                "w": 6,
                "h": 5,
                "x": 4,
                "y": 30,
                "i": "visdb2d3930-0cf8-461d-9c59-5b9cce3d90d81",
                "moved": false,
                "static": false
            },
            "title": "Short term rentals",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"minimum_nights_d\")",
                "    .limit(1000)",
                "    .sort(\"asc\", \"minimum_nights_d\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis04f4d726-6cec-4a81-8267-9dc2f1db01ae",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 8,
                "y": 21,
                "i": "vis04f4d726-6cec-4a81-8267-9dc2f1db01ae1",
                "moved": false,
                "static": false
            },
            "title": "Licenses",
            "visualization": "Donut",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"accommodates\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"license\")",
                "    .limit(9)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"bottom\")",
                "    .width(150)",
                "    .height(30)",
                "    .sort(\"none\");",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Donut\")",
                "    .set(\"legend\", legend)",
                "    .set(\"color\", color)",
                "    .set(\"metricValue\", true)",
                "    .set(\"labelPosition\", \"inside\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis3b3397cc-c74e-4a14-b733-6ce96cdd153b",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 0,
                "y": 30,
                "i": "vis3b3397cc-c74e-4a14-b733-6ce96cdd153b1",
                "moved": false,
                "static": false
            },
            "title": "Listings per host",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"calculated_host_listings_count\")",
                "    .limit(100)",
                "    .sort(\"asc\", \"calculated_host_listings_count\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis50428125-2bd0-4d27-9d7e-8ffe68de1560",
            "layout": {
                "w": 2,
                "h": 9,
                "x": 2,
                "y": 12,
                "i": "vis50428125-2bd0-4d27-9d7e-8ffe68de15601",
                "moved": false,
                "static": false
            },
            "title": "Entire home/apts",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"property_type\")",
                "    .label(\"Property type\")",
                "    .operation(\"IN\")",
                "    .value([\"Entire bungalow\", \"Entire cabin\", \"Entire condo\", \"Entire chalet\", \"Entire cottage\", \"Entire guest suite\", \"Entire guesthouse\", \"Entire home\", \"Entire home/apt\", \"Entire loft\", \"Entire place\", \"Entire rental unit\", \"Entire serviced apartment\", \"Entire townhouse\", \"Entire vacation home\", \"Entire villa\"]); // Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(50)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .theme({",
                "    \"headerStyle\": \"background: #607d8b; color: #fff; font-size: 16px;\",",
                "    \"headerIconStyle\": \"color: #fff; font-size: 16px;\",",
                "    \"rowOddStyle\": \"background: #fff; color: #000;\",",
                "    \"rowEvenStyle\": \"background: #eceff1; color: #000;\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #607d8b;\",",
                "    \"cellMoving\": \"color: black; background: #b0bec5;\"",
                "});",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Slicer\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 1,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis0ec4ae06-13d5-40f2-bb77-55f6f70395b4",
            "layout": {
                "w": 2,
                "h": 9,
                "x": 4,
                "y": 12,
                "i": "vis0ec4ae06-13d5-40f2-bb77-55f6f70395b41",
                "moved": false,
                "static": false
            },
            "title": "Private rooms",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"property_type\")",
                "    .label(\"Property type\")",
                "    .operation(\"IN\")",
                "    .value([\"Private room\", \"Private room in barn\", \"Private room in bed and breakfast\", \"Private room in boat\", \"Private room in bungalow\", \"Private room in camper/rv\", \"Private room in casa particular\", \"Private room in castle\", \"Private room in chalet\", \"Private room in condo\", \"Private room in cottage\", \"Private room in dorm\", \"Private room in earthen home\", \"Private room in farm stay\", \"Private room in guest suite\", \"Private room in guesthouse\", \"Private room in hostel\", \"Private room in home\", \"Private room in in-law\", \"Private room in island\", \"Private room in kezhan\", \"Private room in lighthouse\", \"Private room in loft\", \"Private room in minsu\", \"Private room in ranch\", \"Private room in religious building\", \"Private room in rental unit\", \"Private room in resort\", \"Private room in serviced apartment\", \"Private room in tent\", \"Private room in tiny home\", \"Private room in townhouse\", \"Private room in train\", \"Private room in vacation home\", \"Private room in villa\"]); // Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(50)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .theme({",
                "    \"headerStyle\": \"background: #607d8b; color: #fff; font-size: 16px;\",",
                "    \"headerIconStyle\": \"color: #fff; font-size: 16px;\",",
                "    \"rowOddStyle\": \"background: #fff; color: #000;\",",
                "    \"rowEvenStyle\": \"background: #eceff1; color: #000;\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #607d8b;\",",
                "    \"cellMoving\": \"color: black; background: #b0bec5;\"",
                "});",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Slicer\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 1,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis761684fc-b53c-46be-a1b2-81f2bc74092d",
            "layout": {
                "w": 2,
                "h": 9,
                "x": 6,
                "y": 12,
                "i": "vis761684fc-b53c-46be-a1b2-81f2bc74092d1",
                "moved": false,
                "static": false
            },
            "title": "Shared rooms",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"property_type\")",
                "    .label(\"Property type\")",
                "    .operation(\"IN\")",
                "    .value([\"Shared room\", \"Shared room in bed and breakfast\", \"Shared room in bungalow\", \"Shared room in casa particular\", \"Shared room in condo\", \"Shared room in floor\", \"Shared room in guest suite\", \"Shared room in guesthouse\", \"Shared room in home\", \"Shared room in hostel\", \"Shared room in hotel\", \"Shared room in loft\", \"Shared room in rental unit\", \"Shared room in serviced apartment\", \"Shared room in townhouse\", \"Shared room in vacation home\"]); // Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(50)",
                "    .sort(\"desc\", \"count\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .theme({",
                "    \"headerStyle\": \"background: #607d8b; color: #fff; font-size: 16px;\",",
                "    \"headerIconStyle\": \"color: #fff; font-size: 16px;\",",
                "    \"rowOddStyle\": \"background: #fff; color: #000;\",",
                "    \"rowEvenStyle\": \"background: #eceff1; color: #000;\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #607d8b;\",",
                "    \"cellMoving\": \"color: black; background: #b0bec5;\"",
                "});",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Slicer\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 1,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis4dad120e-9913-4a54-8eb8-2835e95b1d68",
            "layout": {
                "w": 3,
                "h": 9,
                "x": 8,
                "y": 12,
                "i": "vis4dad120e-9913-4a54-8eb8-2835e95b1d681",
                "moved": false,
                "static": false
            },
            "title": "Hotel rooms",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"property_type\")",
                "    .label(\"Property type\")",
                "    .operation(\"IN\")",
                "    .value([\"Room in aparthotel\", \"Room in boutique hotel\", \"Room in hotel\"]); // Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(50)",
                "    .sort(\"desc\", \"count\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .theme({",
                "    \"headerStyle\": \"background: #ff9800; color: #fff; font-size: 16px;\",",
                "    \"headerIconStyle\": \"color: #fff; font-size: 16px;\",",
                "    \"rowOddStyle\": \"background: #fff; color: #000;\",",
                "    \"rowEvenStyle\": \"background: #fff3e0; color: #000;\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #ff9800;\",",
                "    \"cellMoving\": \"color: black; background: #ffcc80;\"",
                "});",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Slicer\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 1,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "visf45dd01b-9f18-46c3-8c94-37ed19f9a24f",
            "layout": {
                "w": 2,
                "h": 9,
                "x": 0,
                "y": 12,
                "i": "visf45dd01b-9f18-46c3-8c94-37ed19f9a24f1",
                "moved": false,
                "static": false
            },
            "title": "Total Listings",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(50)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Slicer\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        }
    ],
    "filters": [],
    "savedFilters": [
        {
            "id": "23ce1464-8888-4cf4-b03f-5508abe43241",
            "data": {
                "id": "23ce1464-8888-4cf4-b03f-5508abe43241",
                "name": "Test shape",
                "description": "Description 1",
                "index": 0
            },
            "filters": [
                {
                    "path": "location",
                    "label": "shape",
                    "enabled": true,
                    "coexistent": true,
                    "operation": "IN",
                    "value": [
                        [
                            2.34362,
                            48.87788
                        ],
                        [
                            2.34333,
                            48.87627
                        ],
                        [
                            2.34329,
                            48.87474
                        ],
                        [
                            2.3469,
                            48.8747
                        ],
                        [
                            2.34912,
                            48.87478
                        ],
                        [
                            2.3491,
                            48.87583
                        ],
                        [
                            2.34888,
                            48.87733
                        ],
                        [
                            2.34897,
                            48.87795
                        ],
                        [
                            2.34753,
                            48.87795
                        ],
                        [
                            2.34362,
                            48.87788
                        ]
                    ],
                    "relative": false,
                    "presetValue": false,
                    "isTextFilter": false,
                    "type": "POLYGON",
                    "sender": {},
                    "id": "5a23b999-3a3a-43af-8471-99d00c9027ae",
                    "code": "filter282"
                }
            ]
        }
    ],
    "folderPath": "/",
    "deletedWidgets": [],
    "IM": {
        "id": "cfs-interaction-manager",
        "isIManager": true,
        "layout": null,
        "title": "Filters",
        "visualization": "Interaction Manager",
        "source": {},
        "code": [
            "let viz11 = getId(\"Hotel rooms\");",
            "let viz10 = getId(\"Shared rooms\");",
            "let viz9 = getId(\"Private rooms\");",
            "let viz8 = getId(\"Total Listings\");",
            "let viz7 = getId(\"Entire home/apts\");",
            "let viz6 = getId(\"Short term rentals\");",
            "let viz5 = getId(\"Top 50 hosts in the area\");",
            "let viz4 = getId(\"Room type\");",
            "let viz3 = getId(\"beds\");",
            "let viz2 = getId(\"amenities price\");",
            "let viz1 = getId(\"most popular neighborhoods\");",
            "let rules1 = { [viz11]: { clientFilters: false }, [viz10]: { clientFilters: false }, [viz9]: { clientFilters: false }, [viz8]: { clientFilters: false }, [viz7]: { clientFilters: false }, [viz6]: { clientFilters: false }, [viz5]: { clientFilters: false }, [viz4]: { clientFilters: false }, [viz3]: { clientFilters: false }, [viz2]: { clientFilters: true }, [viz1]: { clientFilters: false }, };",
            "/* Configuration code for the Interaction Manager*/",
            "// Drill hierarchy and rule settings can be done like this:",
            "// let viz1 = getId(\"widget_title_1\")",
            "// let viz2 = getId(\"widget_title_2\")",
            "// let drill = { [viz1]: { group1: []}}",
            "// let rules = { [viz2]: { receive: false }}",
            "// NOTE: Drill hierarchy will change your code!",
            "// Define options",
            "let aktive = cf.create();",
            "let myChart = aktive.graph(\"Interaction Manager\")",
            "    //.set(\"rules\", rules)",
            "    //.set(\"drill\", drill)",
            "    .set(\"rules\", rules1)",
            "    .execute();",
            ""
        ],
        "showUI": false,
        "syncedFields": [],
        "showTitle": true,
        "enableClientFilters": false,
        "enableAutoDrill": false,
        "staticFilters": 0,
        "description": null
    },
    "hideIM": false,
    "metadata": {
        "local": [
            "let minNightsD = {\r",
            "    \"name\": \"minimum_nights_d\",\r",
            "    \"label\": \"Minimum nights - ordered\",\r",
            "    \"type\": \"ATTRIBUTE\",\r",
            "    \"dependencies\": [\"minimum_nights_str\"],\r",
            "    \"reverse\": (parameter) => {\r",
            "        return [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r",
            "            .indexOf(parameter) + 1;\r",
            "    },\r",
            "    \"function\": (minNightsStr) => {\r",
            "        return {\r",
            "            value: minNightsStr,\r",
            "            order: minNightsStr === \"+35\" ? 99 : parseInt(minNightsStr)\r",
            "        };\r",
            "    }\r",
            "};\r",
            "let _META_ = {\r",
            "    \"abnb_listings\": {\r",
            "        \"count\": { \"label\": \"Listings\" },\r",
            "        \"fields\": {\r",
            "            \"accommodates\": {\r",
            "                \"label\": \"Accommodates\"\r",
            "            },\r",
            "            \"amenities\": {\r",
            "                \"label\": \"Amenities\"\r",
            "            },\r",
            "            \"availability_30\": {\r",
            "                \"label\": \"Availability 30\"\r",
            "            },\r",
            "            \"availability_365\": {\r",
            "                \"label\": \"Availability 365\"\r",
            "            },\r",
            "            \"availability_60\": {\r",
            "                \"label\": \"Availability 60\"\r",
            "            },\r",
            "            \"availability_90\": {\r",
            "                \"label\": \"Availability 90\"\r",
            "            },\r",
            "            \"bathrooms\": {\r",
            "                \"label\": \"Bathrooms\"\r",
            "            },\r",
            "            \"bathrooms_text\": {\r",
            "                \"label\": \"Bathrooms text\"\r",
            "            },\r",
            "            \"bedrooms\": {\r",
            "                \"label\": \"Bedrooms\"\r",
            "            },\r",
            "            \"beds\": {\r",
            "                \"label\": \"Beds\"\r",
            "            },\r",
            "            \"calculated_host_listings_count\": {\r",
            "                \"label\": \"#Listings per host\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_entire_homes\": {\r",
            "                \"label\": \"#Entire home/apts\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_private_rooms\": {\r",
            "                \"label\": \"#Private rooms\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_shared_rooms\": {\r",
            "                \"label\": \"#Shared rooms\"\r",
            "            },\r",
            "            \"calendar_last_scraped\": {\r",
            "                \"label\": \"Calendar last scraped\"\r",
            "            },\r",
            "            \"description\": {\r",
            "                \"label\": \"Description\"\r",
            "            },\r",
            "            \"first_review\": {\r",
            "                \"label\": \"First review\"\r",
            "            },\r",
            "            \"has_availability\": {\r",
            "                \"label\": \"Has availability\"\r",
            "            },\r",
            "            \"host_about\": {\r",
            "                \"label\": \"Host about\"\r",
            "            },\r",
            "            \"host_acceptance_rate\": {\r",
            "                \"label\": \"Host acceptance rate\"\r",
            "            },\r",
            "            \"host_has_profile_pic\": {\r",
            "                \"label\": \"Host has profile pic\"\r",
            "            },\r",
            "            \"host_id\": {\r",
            "                \"label\": \"Host id\"\r",
            "            },\r",
            "            \"host_identity_verified\": {\r",
            "                \"label\": \"Host identity verified\"\r",
            "            },\r",
            "            \"host_is_superhost\": {\r",
            "                \"label\": \"Host is superhost\"\r",
            "            },\r",
            "            \"host_listings_count\": {\r",
            "                \"label\": \"Host listings count\"\r",
            "            },\r",
            "            \"host_location\": {\r",
            "                \"label\": \"Host location\"\r",
            "            },\r",
            "            \"host_name\": {\r",
            "                \"label\": \"Host name\"\r",
            "            },\r",
            "            \"host_neighbourhood\": {\r",
            "                \"label\": \"Host neighbourhood\"\r",
            "            },\r",
            "            \"host_picture_url\": {\r",
            "                \"label\": \"Host picture url\"\r",
            "            },\r",
            "            \"host_response_rate\": {\r",
            "                \"label\": \"Host response rate\"\r",
            "            },\r",
            "            \"host_response_time\": {\r",
            "                \"label\": \"Host response time\"\r",
            "            },\r",
            "            \"host_since\": {\r",
            "                \"label\": \"Host since\"\r",
            "            },\r",
            "            \"host_thumbnail_url\": {\r",
            "                \"label\": \"Host thumbnail url\"\r",
            "            },\r",
            "            \"host_total_listings_count\": {\r",
            "                \"label\": \"Host total listings count\"\r",
            "            },\r",
            "            \"host_url\": {\r",
            "                \"label\": \"Host url\"\r",
            "            },\r",
            "            \"host_verifications\": {\r",
            "                \"label\": \"Host verifications\"\r",
            "            },\r",
            "            \"id\": {\r",
            "                \"label\": \"Id\"\r",
            "            },\r",
            "            \"instant_bookable\": {\r",
            "                \"label\": \"Instant bookable\"\r",
            "            },\r",
            "            \"last_review\": {\r",
            "                \"label\": \"Last review\"\r",
            "            },\r",
            "            \"last_scraped\": {\r",
            "                \"label\": \"Last scraped\"\r",
            "            },\r",
            "            \"latitude\": {\r",
            "                \"label\": \"Latitude\"\r",
            "            },\r",
            "            \"license\": {\r",
            "                \"label\": \"License\"\r",
            "            },\r",
            "            \"listing_url\": {\r",
            "                \"label\": \"Listing url\"\r",
            "            },\r",
            "            \"location\": {\r",
            "                \"label\": \"Location\"\r",
            "            },\r",
            "            \"longitude\": {\r",
            "                \"label\": \"Longitude\"\r",
            "            },\r",
            "            \"maximum_maximum_nights\": {\r",
            "                \"label\": \"Maximum maximum nights\"\r",
            "            },\r",
            "            \"maximum_minimum_nights\": {\r",
            "                \"label\": \"Maximum minimum nights\"\r",
            "            },\r",
            "            \"maximum_nights\": {\r",
            "                \"label\": \"Maximum nights\"\r",
            "            },\r",
            "            \"maximum_nights_avg_ntm\": {\r",
            "                \"label\": \"Maximum nights avg ntm\"\r",
            "            },\r",
            "            \"minimum_maximum_nights\": {\r",
            "                \"label\": \"Minimum maximum nights\"\r",
            "            },\r",
            "            \"minimum_minimum_nights\": {\r",
            "                \"label\": \"Minimum minimum nights\"\r",
            "            },\r",
            "            \"minimum_nights\": {\r",
            "                \"label\": \"Minimum nights\"\r",
            "            },\r",
            "            \"minimum_nights_avg_ntm\": {\r",
            "                \"label\": \"Minimum nights avg ntm\"\r",
            "            },\r",
            "            \"name\": {\r",
            "                \"label\": \"Name\"\r",
            "            },\r",
            "            \"neighborhood_overview\": {\r",
            "                \"label\": \"Neighborhood overview\"\r",
            "            },\r",
            "            \"neighbourhood\": {\r",
            "                \"label\": \"Neighbourhood\"\r",
            "            },\r",
            "            \"neighbourhood_cleansed\": {\r",
            "                \"label\": \"Neighbourhood cleansed\"\r",
            "            },\r",
            "            \"neighbourhood_group_cleansed\": {\r",
            "                \"label\": \"Neighbourhood group cleansed\"\r",
            "            },\r",
            "            \"number_of_reviews\": {\r",
            "                \"label\": \"Number of reviews\"\r",
            "            },\r",
            "            \"number_of_reviews_l30d\": {\r",
            "                \"label\": \"Number of reviews l30d\"\r",
            "            },\r",
            "            \"number_of_reviews_ltm\": {\r",
            "                \"label\": \"Number of reviews ltm\"\r",
            "            },\r",
            "            \"picture_url\": {\r",
            "                \"label\": \"Picture url\"\r",
            "            },\r",
            "            \"price\": {\r",
            "                \"label\": \"Price\"\r",
            "            },\r",
            "            \"property_type\": {\r",
            "                \"label\": \"Property type\"\r",
            "            },\r",
            "            \"review_scores_accuracy\": {\r",
            "                \"label\": \"Review scores accuracy\"\r",
            "            },\r",
            "            \"review_scores_checkin\": {\r",
            "                \"label\": \"Review scores checkin\"\r",
            "            },\r",
            "            \"review_scores_cleanliness\": {\r",
            "                \"label\": \"Review scores cleanliness\"\r",
            "            },\r",
            "            \"review_scores_communication\": {\r",
            "                \"label\": \"Review scores communication\"\r",
            "            },\r",
            "            \"review_scores_location\": {\r",
            "                \"label\": \"Review scores location\"\r",
            "            },\r",
            "            \"review_scores_rating\": {\r",
            "                \"label\": \"Review scores rating\"\r",
            "            },\r",
            "            \"review_scores_value\": {\r",
            "                \"label\": \"Review scores value\"\r",
            "            },\r",
            "            \"reviews_per_month\": {\r",
            "                \"label\": \"Reviews per month\"\r",
            "            },\r",
            "            \"room_type\": {\r",
            "                \"label\": \"Room type\"\r",
            "            },\r",
            "            \"scrape_id\": {\r",
            "                \"label\": \"Scrape id\"\r",
            "            },\r",
            "            \"source\": {\r",
            "                \"label\": \"Source\"\r",
            "            },\r",
            "            \"amenities_categorized\": {\r",
            "                \"label\": \"Amenities categorized\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_hotel_rooms\": {\r",
            "                \"label\": \"#Hotel rooms\"\r",
            "            },\r",
            "            \"calendar_updated\": {\r",
            "                \"label\": \"Calendar updated\"\r",
            "            },\r",
            "            \"estimated_occupied_time\": {\r",
            "                \"label\": \"Estimated occupied time\"\r",
            "            },\r",
            "            \"income_ltm\": {\r",
            "                \"label\": \"Income ltm\"\r",
            "            },\r",
            "            \"is_usa\": {\r",
            "                \"label\": \"Is usa\"\r",
            "            },\r",
            "            \"zipcode\": {\r",
            "                \"label\": \"Zipcode\"\r",
            "            },\r",
            "            \"minimum_nights_d\": minNightsD\r",
            "        }\r",
            "    }\r",
            "};\r",
            ""
        ]
    },
    "customQueries": {}
}||||[
    {
        "name": "local",
        "url": "http://localhost:9200/",
        "active": true,
        "provider": "elasticsearch",
        "isLocal": true,
        "id": "2597f78e-815b-47bf-82f3-c042691dae62"
    }
]