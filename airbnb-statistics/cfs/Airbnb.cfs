{
    "id": "7f417276-a3a1-4b90-9c9f-eafa74a9c69e",
    "name": "Airbnb",
    "description": "",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "isSampleApp": false,
    "thumbnailPath": "img/mix.png",
    "widgetList": [
        {
            "id": "vis55a44820-f5e8-4a0e-a21a-bd603f05f4dd",
            "layout": {
                "w": 6,
                "h": 6,
                "x": 6,
                "y": 35,
                "i": "vis55a44820-f5e8-4a0e-a21a-bd603f05f4dd1",
                "moved": false,
                "static": false
            },
            "title": "most popular neighborhoods",
            "visualization": "Tree Map",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"neighbourhood\")",
                "    .label(\"neighbourhood\")",
                "    .operation(\"NOT IN\")",
                "    .value([\"null\"]);",
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"neighbourhood\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Tree Map\")",
                "    .set(\"color\", color)",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "visb25d9a87-275a-4adb-ba08-822272131d18",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 8,
                "y": 6,
                "i": "visb25d9a87-275a-4adb-ba08-822272131d181",
                "moved": false,
                "static": false
            },
            "title": "price-property",
            "visualization": "Histogram",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"price\")",
                "    .label(\"price\")",
                "    .operation(\"GT\")",
                "    .value([0]);",
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"price\", \"histogram\").fixedBars(100)",
                "    .offset(0)",
                "    .showEmptyIntervals(false);",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0)",
                "    .limit(100);",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(20)",
                "    .right(20)",
                "    .bottom(20)",
                "    .left(40);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\"]);",
                "myData.filter(filter294);",
                "myData.staticFilters(staticFilter1);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Histogram\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"xAxis\", { \"position\": \"bottom\" })",
                "    .set(\"yAxis\", { \"type\": \"log\" })",
                "    .set(\"serieLabel\", {",
                "    \"show\": false",
                "})",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis3a626fff-e50d-452b-b4cc-58379dc8ab64",
            "layout": {
                "w": 6,
                "h": 5,
                "x": 0,
                "y": 41,
                "i": "vis3a626fff-e50d-452b-b4cc-58379dc8ab641",
                "moved": false,
                "static": false
            },
            "title": "amenities price",
            "visualization": "Pie",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"price\", \"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"amenities_categorized\")",
                "    .limit(9)",
                "    .sort(\"asc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "let myChart = myData.graph(\"Pie\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis0b21efba-2d7f-432a-89d9-092b421e8b1d",
            "layout": {
                "w": 6,
                "h": 6,
                "x": 0,
                "y": 35,
                "i": "vis0b21efba-2d7f-432a-89d9-092b421e8b1d1",
                "moved": false,
                "static": false
            },
            "title": "beds",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let staticFilter1 = cf.Filter(\"beds\")",
                "    .label(\"beds\")",
                "    .operation(\"GT\")",
                "    .value([0]);",
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"beds\")",
                "    .limit(13)",
                "    .sort(\"asc\", \"beds\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "myData.staticFilters(staticFilter1);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"yAxis\", { \"type\": \"log\" })",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .staticFilters(staticFilter1)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis66bda0af-3404-4432-80a7-44632ac238c0",
            "layout": {
                "w": 8,
                "h": 12,
                "x": 0,
                "y": 0,
                "i": "vis66bda0af-3404-4432-80a7-44632ac238c01",
                "moved": false,
                "static": false
            },
            "title": "abnb_listings (1)",
            "visualization": "Geo Map GL",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let myChart = cf.create().graph(\"Geo Map GL\")",
                "    .set(\"layers\", [",
                "    {",
                "        \"name\": \"hosts\",",
                "        \"priority\": 3,",
                "        \"type\": \"marker\",",
                "        \"provider\": \"local\",",
                "        \"source\": \"abnb_listings\",",
                "        \"properties\": {",
                "            \"filters\": [",
                "                cf.Filter(\"location\").label(\"shape\").type(\"POLYGON\").operation(\"IN\").value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]])",
                "            ],",
                "            \"limit\": 10000,",
                "            \"color\": cf.Color()",
                "                .palette([\"#253494\", \"#2c7fb8\", \"#41b6c4\", \"#7fcdbb\", \"#c7e9b4\", \"#ffffcc\"])",
                "                .metric(cf.Metric()),",
                "            \"ignoreCoords\": [0, 0],",
                "            \"showLocation\": false,",
                "            \"disableMarkerEvents\": false,",
                "            \"maxSpiderifyMarkers\": 100,",
                "            \"allowClickInRawMarker\": true,",
                "            \"location\": \"location\",",
                "            \"visibilityZoomRange\": [11, 24],",
                "            \"precisionLevels\": null,",
                "            \"fields\": [\"name\", \"host_name\", \"bedrooms\", \"beds\", \"price\"],",
                "        },",
                "    },",
                "    {",
                "        \"name\": \"heatmap\",",
                "        \"priority\": 2,",
                "        \"type\": \"heatmap\",",
                "        \"provider\": \"local\",",
                "        \"source\": \"abnb_listings\",",
                "        \"properties\": {",
                "            \"filters\": [",
                "                cf.Filter(\"location\").label(\"shape\").type(\"POLYGON\").operation(\"IN\").value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]])",
                "            ],",
                "            \"limit\": 10000,",
                "            \"location\": \"location\",",
                "            \"visibilityZoomRange\": [0, 11],",
                "            \"options\": {",
                "                \"heatmap-weight\": [\"interpolate\", [\"linear\"], [\"get\", \"__cf_cluster_count_percent__\"], 1, 0.2, 80, 85],",
                "                \"heatmap-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"__cf_cluster_count_percent__\"], 1, 3, 20, 5, 80, 10],",
                "                \"heatmap-intensity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 5, 1, 18, 6],",
                "                \"heatmap-color\": [\"interpolate\", [\"linear\"], [\"heatmap-density\"], 0, \"rgba(0, 0, 255, 0)\", 0.1, \"royalblue\", 0.3, \"cyan\", 0.5, \"lime\", 0.7, \"yellow\", 1, \"red\"],",
                "                \"switchToMarkersAtRaw\": true,",
                "            },",
                "            \"precisionLevels\": { \"raw\": { \"zoom\": 18, \"fields\": [] }, \"levels\": [{ \"zoom\": 2, \"precision\": 3 }, { \"zoom\": 4, \"precision\": 5 }, { \"zoom\": 6, \"precision\": 6 }, { \"zoom\": 10, \"precision\": 7 }, { \"zoom\": 14, \"precision\": 8 }, { \"zoom\": 17, \"precision\": 9 }] },",
                "            \"color\": cf.Color()",
                "                .palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "                .metric(cf.Metric()),",
                "        },",
                "    },",
                "    {",
                "        \"type\": \"tile\",",
                "        \"name\": \"Tile\",",
                "        \"priority\": 1,",
                "        \"properties\": {",
                "            \"source\": { \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"], \"scheme\": \"xyz\", \"attribution\": \"Map data &copy; <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>\" },",
                "        },",
                "    },",
                "])",
                "    .set(\"zoom\", 9.665608559603047)",
                "    .set(\"center\", [-74.01383827980612, 40.72552598640851])",
                "    .set(\"layersControl\", {",
                "    \"collapsed\": true,",
                "    \"position\": \"bottom-left\"",
                "})",
                "    .set(\"drawControl\", true)",
                "    .set(\"enableZoomInfo\", true)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layersProviders": [
                "local"
            ],
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis497e3f9a-bcc6-4244-92f2-4bd554e09202",
            "layout": {
                "w": 12,
                "h": 9,
                "x": 0,
                "y": 26,
                "i": "vis497e3f9a-bcc6-4244-92f2-4bd554e092021",
                "moved": false,
                "static": false
            },
            "title": "Listing records",
            "visualization": "Raw Data Table",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Declare your fields (do not remove this comment line)",
                "const fields = [",
                "    cf.Field(\"host_name\", \"Host name\").group(\" \"),",
                "    cf.Field(\"neighbourhood\", \"Neighbourhood\").group(\"Location\"),",
                "    cf.Field(\"neighbourhood_cleansed\", \"Neighbourhood cleansed\").group(\"Location\"),",
                "    cf.Field(\"neighbourhood_group_cleansed\", \"Neighbourhood group cleansed\").group(\"Location\"),",
                "    cf.Field(\"neighborhood_overview\", \"Neighborhood overview\").group(\"Location\"),",
                "    cf.Field(\"name\", \"Name\").group(\"Property info\"),",
                "    cf.Field(\"property_type\", \"Property type\").group(\"Property info\"),",
                "    cf.Field(\"price\", \"Price\").group(\"Property info\"),",
                "    cf.Field(\"room_type\", \"Room type\").group(\"Property info\"),",
                "    cf.Field(\"bathrooms\", \"Bathrooms\").group(\"Property info\"),",
                "    cf.Field(\"bedrooms\", \"Bedrooms\").group(\"Property info\"),",
                "    cf.Field(\"beds\", \"Beds\").group(\"Property info\"),",
                "    cf.Field(\"number_of_reviews\", \"Number of reviews\").group(\"Reviews info\"),",
                "    cf.Field(\"number_of_reviews_l30d\", \"Number of reviews l30d\").group(\"Reviews info\"),",
                "    cf.Field(\"number_of_reviews_ltm\", \"Number of reviews ltm\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_checkin\", \"Review scores checkin\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_accuracy\", \"Review scores accuracy\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_cleanliness\", \"Review scores cleanliness\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_communication\", \"Review scores communication\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_location\", \"Review scores location\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_rating\", \"Review scores rating\").group(\"Reviews info\"),",
                "    cf.Field(\"review_scores_value\", \"Review scores value\").group(\"Reviews info\"),",
                "    cf.Field(\"reviews_per_month\", \"Reviews per month\").group(\"Reviews info\"),",
                "    cf.Field(\"calculated_host_listings_count\", \"#Listings per host\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_entire_homes\", \"#Entire home/apts\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_private_rooms\", \"#Private rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_shared_rooms\", \"#Shared rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calculated_host_listings_count_hotel_rooms\", \"#Hotel rooms\").group(\"# Listings metrics\"),",
                "    cf.Field(\"calendar_last_scraped\", \"Calendar last scraped\").group(\"# Listings metrics\"),",
                "    cf.Field(\"picture_url\", \"Picture url\").group(\"     \"),",
                "    cf.Field(\"accommodates\", \"Accommodates\").group(\"     \"),",
                "    cf.Field(\"amenities_categorized\", \"Amenities categorized\").group(\"     \"),",
                "    cf.Field(\"availability_30\", \"Availability 30\").group(\"     \"),",
                "    cf.Field(\"availability_365\", \"Availability 365\").group(\"     \"),",
                "    cf.Field(\"availability_60\", \"Availability 60\").group(\"     \"),",
                "    cf.Field(\"availability_90\", \"Availability 90\").group(\"     \"),",
                "    cf.Field(\"bathrooms_text\", \"Bathrooms text\").group(\"     \"),",
                "    cf.Field(\"description\", \"Description\").group(\"     \"),",
                "    cf.Field(\"first_review\", \"First review\").group(\"     \"),",
                "    cf.Field(\"has_availability\", \"Has availability\").group(\"     \"),",
                "    cf.Field(\"host_acceptance_rate\", \"Host acceptance rate\").group(\"     \"),",
                "    cf.Field(\"host_has_profile_pic\", \"Host has profile pic\").group(\"     \"),",
                "    cf.Field(\"host_id\", \"Host id\").group(\"     \"),",
                "    cf.Field(\"host_identity_verified\", \"Host identity verified\").group(\"     \"),",
                "    cf.Field(\"host_is_superhost\", \"Host is superhost\").group(\"     \"),",
                "    cf.Field(\"host_listings_count\", \"Host listings count\").group(\"     \"),",
                "    cf.Field(\"host_location\", \"Host location\").group(\"     \"),",
                "    cf.Field(\"host_neighbourhood\", \"Host neighbourhood\").group(\"     \"),",
                "    cf.Field(\"host_picture_url\", \"Host picture url\").group(\"     \"),",
                "    cf.Field(\"host_response_rate\", \"Host response rate\").group(\"     \"),",
                "    cf.Field(\"host_response_time\", \"Host response time\").group(\"     \"),",
                "    cf.Field(\"host_since\", \"Host since\").group(\"     \"),",
                "    cf.Field(\"host_thumbnail_url\", \"Host thumbnail url\").group(\"     \"),",
                "    cf.Field(\"host_total_listings_count\", \"Host total listings count\").group(\"     \"),",
                "    cf.Field(\"host_url\", \"Host url\").group(\"     \"),",
                "    cf.Field(\"host_verifications\", \"Host verifications\").group(\"     \"),",
                "    cf.Field(\"id\", \"Id\").group(\"     \"),",
                "    cf.Field(\"instant_bookable\", \"Instant bookable\").group(\"     \"),",
                "    cf.Field(\"last_review\", \"Last review\").group(\"     \"),",
                "    cf.Field(\"last_scraped\", \"Last scraped\").group(\"     \"),",
                "    cf.Field(\"latitude\", \"Latitude\").group(\"     \"),",
                "    cf.Field(\"license\", \"License\").group(\"     \"),",
                "    cf.Field(\"listing_url\", \"Listing url\").group(\"     \"),",
                "    cf.Field(\"location\", \"Location\").group(\"     \"),",
                "    cf.Field(\"longitude\", \"Longitude\").group(\"     \"),",
                "    cf.Field(\"maximum_maximum_nights\", \"Maximum maximum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_minimum_nights\", \"Maximum minimum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_nights\", \"Maximum nights\").group(\"     \"),",
                "    cf.Field(\"maximum_nights_avg_ntm\", \"Maximum nights avg ntm\").group(\"     \"),",
                "    cf.Field(\"minimum_maximum_nights\", \"Minimum maximum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_minimum_nights\", \"Minimum minimum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_nights\", \"Minimum nights\").group(\"     \"),",
                "    cf.Field(\"minimum_nights_avg_ntm\", \"Minimum nights avg ntm\").group(\"     \"),",
                "    cf.Field(\"scrape_id\", \"Scrape id\").group(\"     \"),",
                "    cf.Field(\"source\", \"Source\").group(\"     \"),",
                "];",
                "let myData = source.fields(fields);",
                "let histogramColor = cf.Color();",
                "histogramColor.theme({ background: \"white\" });",
                "myData.filter(filter294);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Raw Data Table\")",
                "    .set(\"copyRowOnSelection\", true)",
                "    .limit(100)",
                "    .set(\"columnStats\", { enabled: true, height: 70, widgetProps: [",
                "        { field: \"host_name\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"undefined\", props: { color: histogramColor } },",
                "        { field: \"picture_url\", props: { color: histogramColor } },",
                "        { field: \"accommodates\", props: { color: histogramColor } },",
                "        { field: \"amenities_categorized\", props: { color: histogramColor } },",
                "        { field: \"availability_30\", props: { color: histogramColor } },",
                "        { field: \"availability_365\", props: { color: histogramColor } },",
                "        { field: \"availability_60\", props: { color: histogramColor } },",
                "        { field: \"availability_90\", props: { color: histogramColor } },",
                "        { field: \"bathrooms_text\", props: { color: histogramColor } },",
                "        { field: \"description\", props: { color: histogramColor } },",
                "        { field: \"first_review\", props: { color: histogramColor } },",
                "        { field: \"has_availability\", props: { color: histogramColor } },",
                "        { field: \"host_acceptance_rate\", props: { color: histogramColor } },",
                "        { field: \"host_has_profile_pic\", props: { color: histogramColor } },",
                "        { field: \"host_id\", props: { color: histogramColor } },",
                "        { field: \"host_identity_verified\", props: { color: histogramColor } },",
                "        { field: \"host_is_superhost\", props: { color: histogramColor } },",
                "        { field: \"host_listings_count\", props: { color: histogramColor } },",
                "        { field: \"host_location\", props: { color: histogramColor } },",
                "        { field: \"host_neighbourhood\", props: { color: histogramColor } },",
                "        { field: \"host_picture_url\", props: { color: histogramColor } },",
                "        { field: \"host_response_rate\", props: { color: histogramColor } },",
                "        { field: \"host_response_time\", props: { color: histogramColor } },",
                "        { field: \"host_since\", props: { color: histogramColor } },",
                "        { field: \"host_thumbnail_url\", props: { color: histogramColor } },",
                "        { field: \"host_total_listings_count\", props: { color: histogramColor } },",
                "        { field: \"host_url\", props: { color: histogramColor } },",
                "        { field: \"host_verifications\", props: { color: histogramColor } },",
                "        { field: \"id\", props: { color: histogramColor } },",
                "        { field: \"instant_bookable\", props: { color: histogramColor } },",
                "        { field: \"last_review\", props: { color: histogramColor } },",
                "        { field: \"last_scraped\", props: { color: histogramColor } },",
                "        { field: \"latitude\", props: { color: histogramColor } },",
                "        { field: \"license\", props: { color: histogramColor } },",
                "        { field: \"listing_url\", props: { color: histogramColor } },",
                "        { field: \"location\", props: { color: histogramColor } },",
                "        { field: \"longitude\", props: { color: histogramColor } },",
                "        { field: \"maximum_maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"maximum_nights_avg_ntm\", props: { color: histogramColor } },",
                "        { field: \"minimum_maximum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_nights\", props: { color: histogramColor } },",
                "        { field: \"minimum_nights_avg_ntm\", props: { color: histogramColor } },",
                "        { field: \"scrape_id\", props: { color: histogramColor } },",
                "        { field: \"source\", props: { color: histogramColor } }",
                "    ] })",
                "    .set(\"columnsWidth\", [",
                "    { \"host_name\": 239 },",
                "    { \"neighbourhood\": 80 },",
                "    { \"neighbourhood_cleansed\": 184 },",
                "    { \"neighbourhood_group_cleansed\": 210 },",
                "    { \"neighborhood_overview\": 208 },",
                "    { \"name\": 80 },",
                "    { \"property_type\": 80 },",
                "    { \"price\": 80 },",
                "    { \"room_type\": 80 },",
                "    { \"bathrooms\": 80 },",
                "    { \"bedrooms\": 80 },",
                "    { \"beds\": 80 },",
                "    { \"number_of_reviews\": 80 },",
                "    { \"number_of_reviews_l30d\": 80 },",
                "    { \"number_of_reviews_ltm\": 80 },",
                "    { \"review_scores_checkin\": 80 },",
                "    { \"review_scores_accuracy\": 80 },",
                "    { \"review_scores_cleanliness\": 80 },",
                "    { \"review_scores_communication\": 80 },",
                "    { \"review_scores_location\": 80 },",
                "    { \"review_scores_rating\": 80 },",
                "    { \"review_scores_value\": 80 },",
                "    { \"reviews_per_month\": 80 },",
                "    { \"calculated_host_listings_count\": 167 },",
                "    { \"calculated_host_listings_count_entire_homes\": 80 },",
                "    { \"calculated_host_listings_count_private_rooms\": 80 },",
                "    { \"calculated_host_listings_count_shared_rooms\": 80 },",
                "    { \"calculated_host_listings_count_hotel_rooms\": 100 },",
                "    { \"calendar_last_scraped\": 80 },",
                "    { \"picture_url\": 80 },",
                "    { \"accommodates\": 80 },",
                "    { \"amenities_categorized\": 80 },",
                "    { \"availability_30\": 80 },",
                "    { \"availability_365\": 80 },",
                "    { \"availability_60\": 80 },",
                "    { \"availability_90\": 80 },",
                "    { \"bathrooms_text\": 80 },",
                "    { \"description\": 80 },",
                "    { \"first_review\": 80 },",
                "    { \"has_availability\": 80 },",
                "    { \"host_acceptance_rate\": 80 },",
                "    { \"host_has_profile_pic\": 80 },",
                "    { \"host_id\": 80 },",
                "    { \"host_identity_verified\": 80 },",
                "    { \"host_is_superhost\": 80 },",
                "    { \"host_listings_count\": 80 },",
                "    { \"host_location\": 80 },",
                "    { \"host_neighbourhood\": 80 },",
                "    { \"host_picture_url\": 80 },",
                "    { \"host_response_rate\": 80 },",
                "    { \"host_response_time\": 80 },",
                "    { \"host_since\": 80 },",
                "    { \"host_thumbnail_url\": 80 },",
                "    { \"host_total_listings_count\": 80 },",
                "    { \"host_url\": 80 },",
                "    { \"host_verifications\": 80 },",
                "    { \"id\": 80 },",
                "    { \"instant_bookable\": 80 },",
                "    { \"last_review\": 80 },",
                "    { \"last_scraped\": 80 },",
                "    { \"latitude\": 80 },",
                "    { \"license\": 80 },",
                "    { \"listing_url\": 80 },",
                "    { \"location\": 80 },",
                "    { \"longitude\": 80 },",
                "    { \"maximum_maximum_nights\": 80 },",
                "    { \"maximum_minimum_nights\": 80 },",
                "    { \"maximum_nights\": 80 },",
                "    { \"maximum_nights_avg_ntm\": 80 },",
                "    { \"minimum_maximum_nights\": 80 },",
                "    { \"minimum_minimum_nights\": 80 },",
                "    { \"minimum_nights\": 80 },",
                "    { \"minimum_nights_avg_ntm\": 80 },",
                "    { \"scrape_id\": 80 },",
                "    { \"source\": 80 }",
                "])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "host_name",
                "picture_url",
                "accommodates",
                "amenities_categorized",
                "availability_30",
                "availability_365",
                "availability_60",
                "availability_90",
                "bathrooms_text",
                "description",
                "first_review",
                "has_availability",
                "host_acceptance_rate",
                "host_has_profile_pic",
                "host_id",
                "host_identity_verified",
                "host_is_superhost",
                "host_listings_count",
                "host_location",
                "host_neighbourhood",
                "host_picture_url",
                "host_response_rate",
                "host_response_time",
                "host_since",
                "host_thumbnail_url",
                "host_total_listings_count",
                "host_url",
                "host_verifications",
                "id",
                "instant_bookable",
                "last_review",
                "last_scraped",
                "latitude",
                "license",
                "listing_url",
                "location",
                "longitude",
                "maximum_maximum_nights",
                "maximum_minimum_nights",
                "maximum_nights",
                "maximum_nights_avg_ntm",
                "minimum_maximum_nights",
                "minimum_minimum_nights",
                "minimum_nights",
                "minimum_nights_avg_ntm",
                "scrape_id",
                "source",
                "amenities",
                "calendar_updated",
                "estimated_occupied_time",
                "income_ltm",
                "is_usa",
                "zipcode"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf473229c-5a6a-4b24-bc59-62a7b7d27eca",
            "layout": {
                "w": 4,
                "h": 4,
                "x": 8,
                "y": 2,
                "i": "visf473229c-5a6a-4b24-bc59-62a7b7d27eca1",
                "moved": false,
                "static": false
            },
            "title": "Room type",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.CompareMetric(\"count\", \"\").rate().label(\"Rate\");",
                "let metric1 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"room_type\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0, metric1);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(15)",
                "    .left(5);",
                "let legend = cf.Legend()",
                "    .position(\"bottom\")",
                "    .width(150)",
                "    .height(30)",
                "    .sort(\"none\");",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#ff0000\", \"#ff8000\", \"#ffff00\", \"#80ff00\", \"#00ff00\", \"#00ff80\", \"#00ffff\", \"#0080ff\", \"#0000ff\", \"#8000ff\", \"#ff00ff\", \"#ff0080\"]);",
                "myData.filter(filter294);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"orientation\", \"vertical\")",
                "    .set(\"xAxis\", { \"show\": true, \"lines\": false })",
                "    .set(\"yAxis\", { \"text\": \"out\", \"lines\": false })",
                "    .set(\"dataZoom\", false)",
                "    .set(\"serieLabel\", {",
                "    \"show\": true,",
                "    \"fontWeight\": \"bold\"",
                "})",
                "    .set(\"legend\", legend)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis417e4d6d-2afa-4285-a778-2f9465c528aa",
            "layout": {
                "w": 4,
                "h": 2,
                "x": 8,
                "y": 0,
                "i": "vis417e4d6d-2afa-4285-a778-2f9465c528aa1",
                "moved": false,
                "static": false
            },
            "title": "Listings",
            "visualization": "KPI",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "let metric0 = cf.Metric(\"count\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "myData.filter(filter294);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 12)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis79728b36-d545-4083-8f35-b4a6eaa9f7e5",
            "layout": {
                "w": 8,
                "h": 9,
                "x": 0,
                "y": 12,
                "i": "vis79728b36-d545-4083-8f35-b4a6eaa9f7e51",
                "moved": false,
                "static": false
            },
            "title": "Top 50 hosts in the area",
            "visualization": "Slicer",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"calculated_host_listings_count\", \"avg\").hideFunction();",
                "let metric1 = cf.Metric(\"calculated_host_listings_count_entire_homes\", \"avg\").hideFunction();",
                "let metric2 = cf.Metric(\"calculated_host_listings_count_private_rooms\", \"avg\").hideFunction();",
                "let metric3 = cf.Metric(\"calculated_host_listings_count_shared_rooms\", \"avg\").hideFunction();",
                "let metric4 = cf.Metric(\"calculated_host_listings_count_hotel_rooms\", \"avg\").hideFunction();",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"host_name\")",
                "    .limit(10000)",
                "    .sort(\"desc\", cf.Metric(\"calculated_host_listings_count\", \"avg\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0, metric1, metric2, metric3, metric4);",
                "myData.filter(filter294);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Slicer\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "visdb2d3930-0cf8-461d-9c59-5b9cce3d90d8",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 8,
                "y": 21,
                "i": "visdb2d3930-0cf8-461d-9c59-5b9cce3d90d81",
                "moved": false,
                "static": false
            },
            "title": "Short term rentals",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"minimum_nights\")",
                "    .limit(100)",
                "    .sort(\"asc\", \"minimum_nights\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis04f4d726-6cec-4a81-8267-9dc2f1db01ae",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 8,
                "y": 11,
                "i": "vis04f4d726-6cec-4a81-8267-9dc2f1db01ae1",
                "moved": false,
                "static": false
            },
            "title": "abnb_listings (3)",
            "visualization": "Donut",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"accommodates\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"license\")",
                "    .limit(9)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"bottom\")",
                "    .width(150)",
                "    .height(30)",
                "    .sort(\"none\");",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "let myChart = myData.graph(\"Donut\")",
                "    .set(\"legend\", legend)",
                "    .set(\"color\", color)",
                "    .set(\"metricValue\", true)",
                "    .set(\"labelPosition\", \"inside\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis2e7a5335-6885-4c65-abac-9fba1c7657df",
            "layout": {
                "w": 4,
                "h": 5,
                "x": 8,
                "y": 16,
                "i": "vis2e7a5335-6885-4c65-abac-9fba1c7657df1",
                "moved": false,
                "static": false
            },
            "title": "Listings per host",
            "visualization": "Bars",
            "source": {
                "name": "abnb_listings",
                "provider": {
                    "name": "local",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "let filter294 = cf.Filter(\"location\")",
                "    .label(\"shape\")",
                "    .type(\"POLYGON\")",
                "    .operation(\"IN\")",
                "    .value([[-73.91514, 40.91062], [-73.96449, 40.82944], [-74.01124, 40.76914], [-74.02509, 40.71995], [-74.02509, 40.69304], [-74.05193, 40.64379], [-74.10907, 40.64642], [-74.19651, 40.64116], [-74.21816, 40.54387], [-74.18093, 40.51689], [-74.07877, 40.52544], [-74.04241, 40.59187], [-73.9541, 40.55308], [-73.88398, 40.60371], [-73.77835, 40.66152], [-73.7013, 40.64182], [-73.7013, 40.7042], [-73.71082, 40.77767], [-73.78528, 40.89033], [-73.84588, 40.91193], [-73.91514, 40.91062]]);",
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"local\");",
                "let source = provider.source(\"abnb_listings\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"calculated_host_listings_count\")",
                "    .limit(100)",
                "    .sort(\"asc\", \"calculated_host_listings_count\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "myData.filter(filter294);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "hosts",
                    "layerType": "marker",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                },
                {
                    "name": "heatmap",
                    "layerType": "heatmap",
                    "source": "abnb_listings",
                    "provider": "local",
                    "type": "elasticsearch"
                }
            ]
        }
    ],
    "filters": [
        {
            "path": "location",
            "label": "shape",
            "enabled": true,
            "coexistent": true,
            "operation": "IN",
            "value": [
                [
                    -73.91514,
                    40.91062
                ],
                [
                    -73.96449,
                    40.82944
                ],
                [
                    -74.01124,
                    40.76914
                ],
                [
                    -74.02509,
                    40.71995
                ],
                [
                    -74.02509,
                    40.69304
                ],
                [
                    -74.05193,
                    40.64379
                ],
                [
                    -74.10907,
                    40.64642
                ],
                [
                    -74.19651,
                    40.64116
                ],
                [
                    -74.21816,
                    40.54387
                ],
                [
                    -74.18093,
                    40.51689
                ],
                [
                    -74.07877,
                    40.52544
                ],
                [
                    -74.04241,
                    40.59187
                ],
                [
                    -73.9541,
                    40.55308
                ],
                [
                    -73.88398,
                    40.60371
                ],
                [
                    -73.77835,
                    40.66152
                ],
                [
                    -73.7013,
                    40.64182
                ],
                [
                    -73.7013,
                    40.7042
                ],
                [
                    -73.71082,
                    40.77767
                ],
                [
                    -73.78528,
                    40.89033
                ],
                [
                    -73.84588,
                    40.91193
                ],
                [
                    -73.91514,
                    40.91062
                ]
            ],
            "relative": false,
            "presetValue": false,
            "isTextFilter": false,
            "type": "POLYGON",
            "sender": {
                "type": "Geo Map GL",
                "id": "coordinates"
            },
            "id": "284f1295-2875-4a9a-831f-4faf0acbb35f",
            "code": "filter294"
        }
    ],
    "savedFilters": [],
    "folderPath": "/",
    "deletedWidgets": [],
    "IM": {
        "id": "cfs-interaction-manager",
        "isIManager": true,
        "layout": null,
        "title": "Filters",
        "visualization": "Interaction Manager",
        "source": {},
        "code": [
            "let viz7 = getId(\"Listings per host\");",
            "let viz6 = getId(\"Short term rentals\");",
            "let viz5 = getId(\"Top 50 hosts in the area\");",
            "let viz4 = getId(\"Room type\");",
            "let viz3 = getId(\"beds\");",
            "let viz2 = getId(\"amenities price\");",
            "let viz1 = getId(\"most popular neighborhoods\");",
            "let rules1 = { [viz7]: { clientFilters: false }, [viz6]: { clientFilters: false }, [viz5]: { clientFilters: false }, [viz4]: { clientFilters: false }, [viz3]: { clientFilters: false }, [viz2]: { clientFilters: false }, [viz1]: { clientFilters: false }, };",
            "/* Configuration code for the Interaction Manager*/",
            "// Drill hierarchy and rule settings can be done like this:",
            "// let viz1 = getId(\"widget_title_1\")",
            "// let viz2 = getId(\"widget_title_2\")",
            "// let drill = { [viz1]: { group1: []}}",
            "// let rules = { [viz2]: { receive: false }}",
            "// NOTE: Drill hierarchy will change your code!",
            "// Define options",
            "let aktive = cf.create();",
            "let myChart = aktive.graph(\"Interaction Manager\")",
            "    //.set(\"rules\", rules)",
            "    //.set(\"drill\", drill)",
            "    .set(\"rules\", rules1)",
            "    .execute();",
            ""
        ],
        "showUI": false,
        "syncedFields": [],
        "showTitle": true,
        "enableClientFilters": false,
        "enableAutoDrill": false,
        "staticFilters": 0,
        "description": null
    },
    "hideIM": false,
    "metadata": {
        "local": [
            "let _META_ = {\r",
            "    \"abnb_listings\": {\r",
            "        \"count\": { \"label\": \"Listings\" },\r",
            "        \"fields\": {\r",
            "            \"accommodates\": {\r",
            "                \"label\": \"Accommodates\"\r",
            "            },\r",
            "            \"amenities\": {\r",
            "                \"label\": \"Amenities\"\r",
            "            },\r",
            "            \"availability_30\": {\r",
            "                \"label\": \"Availability 30\"\r",
            "            },\r",
            "            \"availability_365\": {\r",
            "                \"label\": \"Availability 365\"\r",
            "            },\r",
            "            \"availability_60\": {\r",
            "                \"label\": \"Availability 60\"\r",
            "            },\r",
            "            \"availability_90\": {\r",
            "                \"label\": \"Availability 90\"\r",
            "            },\r",
            "            \"bathrooms\": {\r",
            "                \"label\": \"Bathrooms\"\r",
            "            },\r",
            "            \"bathrooms_text\": {\r",
            "                \"label\": \"Bathrooms text\"\r",
            "            },\r",
            "            \"bedrooms\": {\r",
            "                \"label\": \"Bedrooms\"\r",
            "            },\r",
            "            \"beds\": {\r",
            "                \"label\": \"Beds\"\r",
            "            },\r",
            "            \"calculated_host_listings_count\": {\r",
            "                \"label\": \"#Listings per host\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_entire_homes\": {\r",
            "                \"label\": \"#Entire home/apts\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_private_rooms\": {\r",
            "                \"label\": \"#Private rooms\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_shared_rooms\": {\r",
            "                \"label\": \"#Shared rooms\"\r",
            "            },\r",
            "            \"calendar_last_scraped\": {\r",
            "                \"label\": \"Calendar last scraped\"\r",
            "            },\r",
            "            \"description\": {\r",
            "                \"label\": \"Description\"\r",
            "            },\r",
            "            \"first_review\": {\r",
            "                \"label\": \"First review\"\r",
            "            },\r",
            "            \"has_availability\": {\r",
            "                \"label\": \"Has availability\"\r",
            "            },\r",
            "            \"host_about\": {\r",
            "                \"label\": \"Host about\"\r",
            "            },\r",
            "            \"host_acceptance_rate\": {\r",
            "                \"label\": \"Host acceptance rate\"\r",
            "            },\r",
            "            \"host_has_profile_pic\": {\r",
            "                \"label\": \"Host has profile pic\"\r",
            "            },\r",
            "            \"host_id\": {\r",
            "                \"label\": \"Host id\"\r",
            "            },\r",
            "            \"host_identity_verified\": {\r",
            "                \"label\": \"Host identity verified\"\r",
            "            },\r",
            "            \"host_is_superhost\": {\r",
            "                \"label\": \"Host is superhost\"\r",
            "            },\r",
            "            \"host_listings_count\": {\r",
            "                \"label\": \"Host listings count\"\r",
            "            },\r",
            "            \"host_location\": {\r",
            "                \"label\": \"Host location\"\r",
            "            },\r",
            "            \"host_name\": {\r",
            "                \"label\": \"Host name\"\r",
            "            },\r",
            "            \"host_neighbourhood\": {\r",
            "                \"label\": \"Host neighbourhood\"\r",
            "            },\r",
            "            \"host_picture_url\": {\r",
            "                \"label\": \"Host picture url\"\r",
            "            },\r",
            "            \"host_response_rate\": {\r",
            "                \"label\": \"Host response rate\"\r",
            "            },\r",
            "            \"host_response_time\": {\r",
            "                \"label\": \"Host response time\"\r",
            "            },\r",
            "            \"host_since\": {\r",
            "                \"label\": \"Host since\"\r",
            "            },\r",
            "            \"host_thumbnail_url\": {\r",
            "                \"label\": \"Host thumbnail url\"\r",
            "            },\r",
            "            \"host_total_listings_count\": {\r",
            "                \"label\": \"Host total listings count\"\r",
            "            },\r",
            "            \"host_url\": {\r",
            "                \"label\": \"Host url\"\r",
            "            },\r",
            "            \"host_verifications\": {\r",
            "                \"label\": \"Host verifications\"\r",
            "            },\r",
            "            \"id\": {\r",
            "                \"label\": \"Id\"\r",
            "            },\r",
            "            \"instant_bookable\": {\r",
            "                \"label\": \"Instant bookable\"\r",
            "            },\r",
            "            \"last_review\": {\r",
            "                \"label\": \"Last review\"\r",
            "            },\r",
            "            \"last_scraped\": {\r",
            "                \"label\": \"Last scraped\"\r",
            "            },\r",
            "            \"latitude\": {\r",
            "                \"label\": \"Latitude\"\r",
            "            },\r",
            "            \"license\": {\r",
            "                \"label\": \"License\"\r",
            "            },\r",
            "            \"listing_url\": {\r",
            "                \"label\": \"Listing url\"\r",
            "            },\r",
            "            \"location\": {\r",
            "                \"label\": \"Location\"\r",
            "            },\r",
            "            \"longitude\": {\r",
            "                \"label\": \"Longitude\"\r",
            "            },\r",
            "            \"maximum_maximum_nights\": {\r",
            "                \"label\": \"Maximum maximum nights\"\r",
            "            },\r",
            "            \"maximum_minimum_nights\": {\r",
            "                \"label\": \"Maximum minimum nights\"\r",
            "            },\r",
            "            \"maximum_nights\": {\r",
            "                \"label\": \"Maximum nights\"\r",
            "            },\r",
            "            \"maximum_nights_avg_ntm\": {\r",
            "                \"label\": \"Maximum nights avg ntm\"\r",
            "            },\r",
            "            \"minimum_maximum_nights\": {\r",
            "                \"label\": \"Minimum maximum nights\"\r",
            "            },\r",
            "            \"minimum_minimum_nights\": {\r",
            "                \"label\": \"Minimum minimum nights\"\r",
            "            },\r",
            "            \"minimum_nights\": {\r",
            "                \"label\": \"Minimum nights\"\r",
            "            },\r",
            "            \"minimum_nights_avg_ntm\": {\r",
            "                \"label\": \"Minimum nights avg ntm\"\r",
            "            },\r",
            "            \"name\": {\r",
            "                \"label\": \"Name\"\r",
            "            },\r",
            "            \"neighborhood_overview\": {\r",
            "                \"label\": \"Neighborhood overview\"\r",
            "            },\r",
            "            \"neighbourhood\": {\r",
            "                \"label\": \"Neighbourhood\"\r",
            "            },\r",
            "            \"neighbourhood_cleansed\": {\r",
            "                \"label\": \"Neighbourhood cleansed\"\r",
            "            },\r",
            "            \"neighbourhood_group_cleansed\": {\r",
            "                \"label\": \"Neighbourhood group cleansed\"\r",
            "            },\r",
            "            \"number_of_reviews\": {\r",
            "                \"label\": \"Number of reviews\"\r",
            "            },\r",
            "            \"number_of_reviews_l30d\": {\r",
            "                \"label\": \"Number of reviews l30d\"\r",
            "            },\r",
            "            \"number_of_reviews_ltm\": {\r",
            "                \"label\": \"Number of reviews ltm\"\r",
            "            },\r",
            "            \"picture_url\": {\r",
            "                \"label\": \"Picture url\"\r",
            "            },\r",
            "            \"price\": {\r",
            "                \"label\": \"Price\"\r",
            "            },\r",
            "            \"property_type\": {\r",
            "                \"label\": \"Property type\"\r",
            "            },\r",
            "            \"review_scores_accuracy\": {\r",
            "                \"label\": \"Review scores accuracy\"\r",
            "            },\r",
            "            \"review_scores_checkin\": {\r",
            "                \"label\": \"Review scores checkin\"\r",
            "            },\r",
            "            \"review_scores_cleanliness\": {\r",
            "                \"label\": \"Review scores cleanliness\"\r",
            "            },\r",
            "            \"review_scores_communication\": {\r",
            "                \"label\": \"Review scores communication\"\r",
            "            },\r",
            "            \"review_scores_location\": {\r",
            "                \"label\": \"Review scores location\"\r",
            "            },\r",
            "            \"review_scores_rating\": {\r",
            "                \"label\": \"Review scores rating\"\r",
            "            },\r",
            "            \"review_scores_value\": {\r",
            "                \"label\": \"Review scores value\"\r",
            "            },\r",
            "            \"reviews_per_month\": {\r",
            "                \"label\": \"Reviews per month\"\r",
            "            },\r",
            "            \"room_type\": {\r",
            "                \"label\": \"Room type\"\r",
            "            },\r",
            "            \"scrape_id\": {\r",
            "                \"label\": \"Scrape id\"\r",
            "            },\r",
            "            \"source\": {\r",
            "                \"label\": \"Source\"\r",
            "            },\r",
            "            \"amenities_categorized\": {\r",
            "                \"label\": \"Amenities categorized\"\r",
            "            },\r",
            "            \"calculated_host_listings_count_hotel_rooms\": {\r",
            "                \"label\": \"#Hotel rooms\"\r",
            "            },\r",
            "            \"calendar_updated\": {\r",
            "                \"label\": \"Calendar updated\"\r",
            "            },\r",
            "            \"estimated_occupied_time\": {\r",
            "                \"label\": \"Estimated occupied time\"\r",
            "            },\r",
            "            \"income_ltm\": {\r",
            "                \"label\": \"Income ltm\"\r",
            "            },\r",
            "            \"is_usa\": {\r",
            "                \"label\": \"Is usa\"\r",
            "            },\r",
            "            \"zipcode\": {\r",
            "                \"label\": \"Zipcode\"\r",
            "            }\r",
            "        }\r",
            "    }\r",
            "};\r",
            ""
        ]
    },
    "customQueries": {}
}||||[
    {
        "name": "local",
        "url": "http://localhost:9200/",
        "active": true,
        "provider": "elasticsearch",
        "isLocal": true,
        "id": "2597f78e-815b-47bf-82f3-c042691dae62"
    }
]