{
    "id": "157f0305-e1c9-446e-ba34-c575128887bf",
    "name": "Chicago Taxi Trips",
    "description": "Application developed using CF Studio",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "widgetList": [
        {
            "id": "vis07d3bfc7-6328-4383-adaf-4d66567709ec",
            "isIManager": true,
            "layout": {
                "w": 6,
                "h": 2,
                "x": 0,
                "y": 0,
                "i": "vis07d3bfc7-6328-4383-adaf-4d66567709ec1",
                "moved": false,
                "static": false
            },
            "title": "Filters",
            "visualization": "Interaction Manager",
            "source": {},
            "code": [
                "/* Configuration code for the Filter Control*/",
                "",
                "",
                "// Drill hierarchy and rule settings can be done like this:",
                "// let viz1 = getId(\"widget_title_1\")",
                "// let viz2 = getId(\"widget_title_2\")",
                "// let drill = { [viz1]: { group1: []}}",
                "// let rules = { [viz2]: { receive: false }}",
                "",
                "// NOTE: Drill hierarchy will change your code!",
                "// Define chart options",
                "var vizId = getId(\"Rides by Pickup Districts & Communities\");",
                "var vizId2 = getId(\"Total Charges by Pickup Community\");",
                "var drill = { ",
                "    [vizId]: { ",
                "        group1: [",
                "            \"pickup_district\",",
                "            \"pickup_community_area_desc\"",
                "            ]",
                "    },",
                "    [vizId2]: { ",
                "        group1: [",
                "            \"pickup_district\",",
                "            \"pickup_community_area_desc\"",
                "            ]",
                "    }",
                "};",
                "",
                "// Define options",
                "let aktive = cf.create();",
                "let myChart = aktive.graph(\"Interaction Manager\")",
                "\t\t.set(\"drill\", drill)",
                "\t\t.execute();",
                "",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visb2c47bce-f025-4779-be0f-e6b4e0648216",
            "layout": {
                "w": 6,
                "h": 2,
                "x": 6,
                "y": 0,
                "i": "visb2c47bce-f025-4779-be0f-e6b4e06482161",
                "moved": false,
                "static": false
            },
            "title": "Time Range Filter",
            "visualization": "Time Range Filter",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "//Configuration for grid",
                "let grid = cf.Grid().left(90).bottom(60).top(0).right(100);",
                "// Define metrics",
                "let metric = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "\t\t\t.limit(1000)",
                "\t\t\t.func(\"MONTH\")",
                "\t\t\t.sort(\"asc\",\"trip_start_timestamp\");",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#4575b4','#74add1','#abd9e9','#e0f3f8','#ffffbf','#fee090','#fdae61','#f46d43','#d73027','#a50026'];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Time Range Filter\")",
                "\t\t\t.set(\"grid\", grid)",
                "      .set(\"color\", color)",
                "      .set('sliderData', true)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visa55780cf-3a67-480e-b9b6-f7022463a1f2",
            "layout": {
                "w": 5,
                "h": 7,
                "x": 3,
                "y": 2,
                "i": "visa55780cf-3a67-480e-b9b6-f7022463a1f21",
                "moved": false,
                "static": false
            },
            "title": "Rides by District and Community",
            "visualization": "Pivot Table",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Add Metrics",
                "let metricCount = new cf.Metric(\"count\");",
                "let total = new cf.Metric(\"trip_total\", \"sum\");",
                "// Add fields to data source.",
                "let myData = source",
                "\t\t\t// Rows (do not remove this line)",
                "\t\t\t.rows(",
                "\t\t\t\tcf.Row(\"pickup_district\", \"Pickup District\"),",
                "\t\t\t\tcf.Row(\"pickup_community_area_desc\", \"Pickup Community Area\")",
                "\t\t\t)",
                "\t\t\t// Columns (do not remove this line)",
                "\t\t\t.columns(",
                "\t\t\t\tcf.Column(\"payment_type\", \"Payment_type\")",
                "\t\t\t)",
                "\t\t\t// Metrics (do not remove this line)",
                "\t\t\t.metrics(metricCount, total);",
                "// Define chart options",
                "let theme = {",
                "    \"headerStyle\": \"background: #b3cce6; color: #0d1a26; font-weight: bold;\",",
                "    \"headerResizeLineStyle\": \"border-right: 1px solid white;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom: 1px solid white;\",",
                "    \"bodyStyle\": \"background: #ffffff; color: #3e4953;\",",
                "    \"rowOddStyle\":\"background: #ffffff\",",
                "    \"rowEvenStyle\":\"background: #f0f0f5\"",
                "};",
                "let color = cf.Color().theme(theme);",
                "let myChart = myData.graph(\"Pivot Table\")",
                "      .set('color', color)",
                "      // .set('autoSizeColumns', true)",
                "\t.set(\"columnsWidth\", [",
                "\t\t\t\t\t{\"pickup_district\":144},",
                "\t\t\t\t\t{\"pickup_community_area_desc\":144},",
                "\t\t\t\t\t{\"count\":100},",
                "\t\t\t\t\t{\"trip_total\":148},",
                "\t\t\t\t\t{\"Cash||count\":91},",
                "\t\t\t\t\t{\"Cash||trip_total\":141},",
                "\t\t\t\t\t{\"Credit Card||count\":82},",
                "\t\t\t\t\t{\"Credit Card||trip_total\":129},",
                "\t\t\t\t\t{\"No Charge||count\":85},",
                "\t\t\t\t\t{\"No Charge||trip_total\":115},",
                "\t\t\t\t\t{\"Unknown||count\":81},",
                "\t\t\t\t\t{\"Unknown||trip_total\":116},",
                "\t\t\t\t\t{\"Pcard||count\":84},",
                "\t\t\t\t\t{\"Pcard||trip_total\":114},",
                "\t\t\t\t\t{\"Prcard||count\":77},",
                "\t\t\t\t\t{\"Prcard||trip_total\":111},",
                "\t\t\t\t\t{\"Dispute||count\":71},",
                "\t\t\t\t\t{\"Dispute||trip_total\":109}])",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis1f4bb8ae-a594-4203-8a55-09b917f3e057",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 0,
                "y": 11,
                "i": "vis1f4bb8ae-a594-4203-8a55-09b917f3e0571",
                "moved": false,
                "static": false
            },
            "title": "Avg. Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\", \"avg\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "      .set(\"showLabels\", false)",
                "\t\t\t.set(\"mainTextSize\", 30)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visc877bb16-1362-404a-82b3-a2f8ab0dabe9",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 1,
                "y": 11,
                "i": "visc877bb16-1362-404a-82b3-a2f8ab0dabe91",
                "moved": false,
                "static": false
            },
            "title": "Max Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\",\"max\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "      .set(\"showLabels\", false)",
                "\t\t\t.set(\"mainTextSize\", 30)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis057be44c-cb89-4a1c-934a-161663410b03",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 2,
                "y": 11,
                "i": "vis057be44c-cb89-4a1c-934a-161663410b031",
                "moved": false,
                "static": false
            },
            "title": "Min Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\",\"min\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "let theme = {",
                "    \"font\":\"white\",",
                "    \"background\":\"#4575b4\",",
                "};",
                "let color = cf.Color().theme(theme);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "            // .set(\"color\", color)",
                "      .set(\"showLabels\", false)",
                "\t\t\t.set(\"mainTextSize\", 30)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "viscdb0da72-4d30-4d40-8ee6-a35815988666",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 0,
                "y": 13,
                "i": "viscdb0da72-4d30-4d40-8ee6-a358159886661",
                "moved": false,
                "static": false
            },
            "title": "Taxi Rides",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "\t\t\t.set(\"mainTextSize\", 28)",
                "\t\t\t.set(\"showLabels\", false)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis139d66b6-e4f8-4ea7-baa7-fc0c2e2fdb5f",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 1,
                "y": 13,
                "i": "vis139d66b6-e4f8-4ea7-baa7-fc0c2e2fdb5f1",
                "moved": false,
                "static": false
            },
            "title": "Avg. Tip",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"tips\",\"avg\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "      .set(\"showLabels\", false)",
                "\t\t\t.set(\"mainTextSize\", 30)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis13483a1e-b675-4608-af02-b5922951e03e",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 2,
                "y": 13,
                "i": "vis13483a1e-b675-4608-af02-b5922951e03e1",
                "moved": false,
                "static": false
            },
            "title": "Avg. Minutes",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"trip_minutes\",\"avg\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"KPI\")",
                "      .set(\"showLabels\", false)",
                "\t\t\t.set(\"mainTextSize\", 30)",
                "\t\t\t.set(\"animationSteps\", 2)",
                "\t\t\t.set(\"animationTickDuration\", 1)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visc19981c7-1336-43c5-b8c6-7ca18cce024c",
            "layout": {
                "w": 3,
                "h": 8,
                "x": 3,
                "y": 9,
                "i": "visc19981c7-1336-43c5-b8c6-7ca18cce024c1",
                "moved": false,
                "static": false
            },
            "title": "Average Trip Miles",
            "visualization": "Gauge",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"trip_miles\", \"avg\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "\t\t\t.metrics(metric0);",
                "var palette = ['#4575b4','#74add1','#abd9e9','#e0f3f8','#ffffbf','#fee090','#fdae61','#f46d43','#d73027','#a50026'];",
                "// Define chart options",
                "let myChart = myData.graph(\"Gauge\")",
                "            .set('ranges', [[0, 15]])",
                "            .set('rangeColors', [",
                "                [[0.02, 'lime'], [0.5, '#4575b4'], [0.7,'#fdae61'], [0.8,'#f46d43'], [1, '#a50026']]",
                "                    ])",
                "            .set('lineWidth', ['15'])",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis795d4668-d2cb-42ca-a502-9380caf967a6",
            "layout": {
                "w": 3,
                "h": 2,
                "x": 0,
                "y": 15,
                "i": "vis795d4668-d2cb-42ca-a502-9380caf967a61",
                "moved": false,
                "static": false
            },
            "title": "Filter Rides by Their Length in Minutes",
            "visualization": "Range Filter",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metrics = [",
                "\tcf.Metric(\"trip_minutes\", \"sum\"),",
                "];",
                "// Add metrics and groups to data source",
                "let myData = source.metrics(...metrics)",
                "// Define chart options",
                "let myChart = myData.graph(\"Range Filter\")",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis585dcb1f-b667-4929-b798-f6c1dabecd8b",
            "layout": {
                "w": 6,
                "h": 8,
                "x": 6,
                "y": 9,
                "i": "vis585dcb1f-b667-4929-b798-f6c1dabecd8b1",
                "moved": false,
                "static": false
            },
            "title": "Trip Timestamp and Taxi Cab Company Heat Map",
            "visualization": "Heat Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "//Configuration for grid",
                "let grid = cf.Grid().left(10).bottom(10).top(0).right(10);",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "\t\t\t.limit(1000)",
                "\t\t\t.func(\"MONTH\")",
                "\t\t\t.sort(\"asc\",\"trip_start_timestamp\");",
                "let group2 = cf.Attribute(\"company\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1,group2)",
                "\t\t\t.metrics(metric0);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#fee090','#fdae61','#f46d43','#d73027','#a50026'].reverse();",
                "color.palette(palette);",
                "color.metric(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Heat Map\")",
                "            .set(\"color\", color)",
                "      \t\t\t.set(\"grid\", grid)",
                "      \t\t\t.set(\"showValues\", true)",
                "      \t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "viscee229bb-c6c4-428c-b9b6-d1baab8d0e02",
            "layout": {
                "w": 6,
                "h": 9,
                "x": 0,
                "y": 17,
                "i": "viscee229bb-c6c4-428c-b9b6-d1baab8d0e021",
                "moved": false,
                "static": false
            },
            "title": "Pickup Community Areas and Taxi Cab Companies",
            "visualization": "Heat Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "//Configuration for grid",
                "let grid = cf.Grid().left(10).bottom(10).top(10).right(10);",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_community_area_desc\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", metric0);",
                "let group2 = cf.Attribute(\"company\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1,group2)",
                "\t\t\t.metrics(metric0);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#fee090','#fdae61','#f46d43','#d73027','#a50026'].reverse();",
                "color.palette(palette);",
                "color.metric(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Heat Map\")",
                "            .set(\"color\", color)",
                "      \t\t\t.set(\"grid\", grid)",
                "      \t\t\t.set(\"showValues\", true)",
                "      \t\t\t.execute();"
            ],
            "showUI": false
        },
        {
            "id": "vis3ad08ee8-cd85-48e7-9fa6-8d00a8e717f4",
            "layout": {
                "w": 3,
                "h": 8,
                "x": 6,
                "y": 17,
                "i": "vis3ad08ee8-cd85-48e7-9fa6-8d00a8e717f41",
                "moved": false,
                "static": false
            },
            "title": "Charges by Pickup Community Area",
            "visualization": "Radar",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric1 = cf.Metric(\"fare\",\"sum\");",
                "let metric2 = cf.Metric(\"tips\",\"sum\");",
                "let metric3 = cf.Metric(\"extras\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_community_area_desc\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", metric1);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric1,metric2, metric3);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#4575b4','#74add1','#abd9e9','#e0f3f8','#ffffbf','#fee090','#fdae61','#f46d43','#d73027','#a50026'];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Radar\")",
                "            .set('color', color)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visf0892ae6-8f8f-4772-a903-fd511309ef2e",
            "layout": {
                "w": 3,
                "h": 8,
                "x": 9,
                "y": 17,
                "i": "visf0892ae6-8f8f-4772-a903-fd511309ef2e1",
                "moved": false,
                "static": false
            },
            "title": "Fare by Hour of the Day",
            "visualization": "Disk",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\",\"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_hour\")",
                "\t\t\t.limit(24)",
                "\t\t\t.sort(\"asc\",\"trip_start_hour\");",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric0);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#4575b4','#74add1','#abd9e9','#e0f3f8','#ffffbf','#fee090','#fdae61','#f46d43','#d73027','#a50026'];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Disk\")",
                "            .set('color', color)",
                "\t\t\t      .execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis384c15b1-a9fb-4e7f-9211-548c92d940f9",
            "layout": {
                "w": 3,
                "h": 7,
                "x": 0,
                "y": 26,
                "i": "vis384c15b1-a9fb-4e7f-9211-548c92d940f91",
                "moved": false,
                "static": false
            },
            "title": "Fare, Tips, Extras, and Tolls Trend",
            "visualization": "Multimetric Trend",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metrics = [",
                "\tcf.Metric(\"fare\", \"sum\"), ",
                "\tcf.Metric(\"tips\", \"sum\"), ",
                "\tcf.Metric(\"extras\", \"sum\")",
                "]",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "\t\t\t.limit(1000)",
                "\t\t\t.func(\"MONTH\")",
                "\t\t\t.sort(\"asc\",\"trip_start_timestamp\");",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t.metrics(...metrics);",
                "// Define chart options",
                "// Define Legend",
                "let legend = cf.Legend()",
                "\t.position(\"right\")",
                "\t.width(110)",
                "\t.sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "\t.top(30)",
                "\t.right(15)",
                "\t.bottom(35)",
                "\t.left(25);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "\t.palette([\"#4575b4\", \"#74add1\", \"#fdae61\",",
                "\t\t\"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Trend\")",
                "\t.set(\"legend\", legend)",
                "\t.set(\"grid\", grid)",
                "\t.set(\"color\", color)",
                "\t.set(\"dataZoom\", true)",
                "\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis6ddce408-23be-40c3-90d7-bcbd6eb354ca",
            "layout": {
                "w": 3,
                "h": 7,
                "x": 3,
                "y": 26,
                "i": "vis6ddce408-23be-40c3-90d7-bcbd6eb354ca1",
                "moved": false,
                "static": false
            },
            "title": "Rides and Fare Trend",
            "visualization": "Bars and Line",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "let metric1 = cf.Metric(\"fare\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "\t\t\t.limit(1000)",
                "\t\t\t.func(\"YEAR\")",
                "\t\t\t.sort(\"asc\",\"trip_start_timestamp\");",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t.metrics(metric0,metric1);",
                "// Define chart options",
                "// Define Grid",
                "let grid = cf.Grid()",
                "\t.top(10)",
                "\t.right(45)",
                "\t.bottom(18)",
                "\t.left(35);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "\t.palette([\"#4575b4\", \"#fdae61\", \"#f46d43\",",
                "\t\t\"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Bars and Line\")",
                "\t.set(\"grid\", grid)",
                "\t.set(\"color\", color)",
                "\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis04e800cc-905d-41f0-b975-3d4f68a1f634",
            "layout": {
                "w": 3,
                "h": 8,
                "x": 6,
                "y": 25,
                "i": "vis04e800cc-905d-41f0-b975-3d4f68a1f6341",
                "moved": false,
                "static": false
            },
            "title": "Amounts by Day of Week",
            "visualization": "Multimetric Area Line",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metrics = [",
                "\tcf.Metric(\"fare\", \"sum\"), ",
                "\tcf.Metric(\"tips\", \"sum\"), ",
                "\tcf.Metric(\"extras\", \"sum\")",
                "]",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"day_of_week_d\")",
                "\t\t\t.limit(7)",
                "\t\t\t.sort(\"asc\",\"day_of_week_d\");",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t.metrics(...metrics);",
                "// Define chart options",
                "// Define Legend",
                "let legend = cf.Legend()",
                "\t.position(\"right\")",
                "\t.width(118)",
                "\t.sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "\t.top(18)",
                "\t.right(25)",
                "\t.bottom(35)",
                "\t.left(40);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "\t.palette([\"#4575b4\", \"#74add1\", \"#fdae61\",",
                "\t\t\"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Area Line\")",
                "\t.set(\"legend\", legend)",
                "\t.set(\"grid\", grid)",
                "\t.set(\"color\", color)",
                "\t.set(\"dataZoom\", true)",
                "\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis6fa64965-e6ff-45c7-846d-73aadf5f29bc",
            "layout": {
                "w": 3,
                "h": 11,
                "x": 9,
                "y": 25,
                "i": "vis6fa64965-e6ff-45c7-846d-73aadf5f29bc1",
                "moved": false,
                "static": false
            },
            "title": "Aggregate Fare by Drop-off Community Area",
            "visualization": "Vector Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\",\"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"dropoff_community_area_desc\")",
                "\t\t\t.limit(1000)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "var color = cf.Color()",
                "var palette = ['#fee090','#fdae61','#f46d43','#d73027','#a50026'].reverse();",
                "color.palette(palette);",
                "color.metric(metric0);",
                "color.autoRange({ dynamic: true });",
                "let myChart = myData.graph(\"Vector Map\")",
                "\t\t\t.set(\"shape\", \"https://chartfactor.com/resources/chicago.json\")",
                "\t\t\t.set(\"zoom\", 1)",
                "\t\t\t.set(\"min\", 0)",
                "\t\t\t.set(\"enableZoom\", false)",
                "\t\t\t.set(\"color\", color)",
                "\t\t\t.set(\"legend\", \"left\")",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "vis07f4059f-1186-4fe6-8c07-62967036b827",
            "layout": {
                "w": 5,
                "h": 9,
                "x": 0,
                "y": 33,
                "i": "vis07f4059f-1186-4fe6-8c07-62967036b8271",
                "moved": false,
                "static": false
            },
            "title": "Taxi Trip Records",
            "visualization": "Raw Data Table",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Declare your fields (do not remove this comment line)",
                "const fields = [",
                "    cf.Field('trip_start_timestamp', 'Trip Start'),",
                "    cf.Field('trip_end_timestamp', 'Trip End'),",
                "    cf.Field('community_areas', 'Community Areas'),",
                "    cf.Field('company', 'Company'),",
                "    cf.Field('dropoff_census_tract', 'Dropoff Census Tract'),",
                "    cf.Field('dropoff_community_area', 'Drop off Community Code'),",
                "    cf.Field('dropoff_community_area_desc', 'Drop off Community Area'),",
                "    cf.Field('dropoff_district', 'Drop off District'),",
                "    cf.Field('pickup_census_tract', 'Pickup Census Tract'),",
                "    cf.Field('pickup_community_area', 'Pickup Community Code'),",
                "    cf.Field('pickup_community_area_desc', 'Pickup Community Area'),",
                "    cf.Field('pickup_district', 'Pickup District'),",
                "    cf.Field('taxi_id', 'Taxi Id'),",
                "    cf.Field('payment_type', 'Payment Type'),",
                "    cf.Field('fare', 'Fare'),",
                "    cf.Field('tips', 'Tips'),",
                "    cf.Field('tolls', 'Tolls'),",
                "    cf.Field('extras', 'Extras'),",
                "    cf.Field('trip_total', 'Total'),",
                "    cf.Field('trip_miles', 'Trip Miles'),",
                "    cf.Field('trip_start_hour', 'Trip Start Hour'),",
                "    cf.Field('trip_end_hour', 'Trip End Hour'),",
                "    cf.Field('trip_seconds', 'Trip Seconds'),",
                "];",
                "let myData = source.fields(fields);",
                "let color = cf.Color();",
                "color.theme({",
                "    \"headerStyle\":\"background: #2196f3; color: #fff; font-size: 16px;\",",
                "    \"headerIconStyle\":\"color: #fff; font-size: 16px;\",",
                "    \"rowOddStyle\":\"background: #fff; color: #000;\",",
                "    \"rowEvenStyle\":\"background: #e3f2fd; color: #000;\",",
                "    \"headerResizeLineStyle\":\"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\":\"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\":\"color: #fff; background: #2196f3;\",",
                "    \"cellMoving\":\"color: black; background: #90caf9;\",",
                "});",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Raw Data Table\")",
                "    .set('color',color)",
                "    .set(\"columnFilters\", [",
                "        { field: \"trip_start_timestamp\", component: \"datePicker\", props: {func: 'DAY'}},",
                "        { field: \"trip_end_timestamp\", component: \"datePicker\", props: {func: 'DAY'}},",
                "        { field: \"community_areas\", component: \"slicer\"},",
                "        { field: \"company\", component: \"slicer\"},",
                "        { field: \"dropoff_census_tract\", component: \"slicer\"},",
                "        { field: \"dropoff_community_area\", component: \"slicer\"},",
                "        { field: \"dropoff_community_area_desc\", component: \"slicer\"},",
                "        { field: \"dropoff_district\", component: \"slicer\"},",
                "        { field: \"pickup_census_tract\", component: \"slicer\"},",
                "        { field: \"pickup_community_area\", component: \"slicer\"},",
                "        { field: \"pickup_community_area_desc\", component: \"slicer\"},",
                "        { field: \"pickup_district\", component: \"slicer\"},",
                "        { field: \"taxi_id\", component: \"slicer\"},",
                "        { field: \"payment_type\", component: \"slicer\"},",
                "        { field: \"fare\", component: \"range\"},",
                "        { field: \"tips\", component: \"range\"},",
                "        { field: \"tolls\", component: \"range\"},",
                "        { field: \"extras\", component: \"range\"},",
                "        { field: \"trip_total\", component: \"range\"},",
                "        { field: \"trip_miles\", component: \"range\"},",
                "        { field: \"trip_start_hour\", component: \"slicer\"},",
                "        { field: \"trip_end_hour\", component: \"slicer\"},",
                "        { field: \"trip_seconds\", component: \"slicer\"},",
                "    ])",
                "    .set(\"showRowNumber\", true)",
                "    .set(\"autoSizeColumns\", true)",
                "    .limit(100)",
                "    .set(\"columnsWidth\", [",
                "\t\t\t\t\t{\"rn\":60},",
                "\t\t\t\t\t{\"trip_start_timestamp\":193},",
                "\t\t\t\t\t{\"trip_end_timestamp\":193},",
                "\t\t\t\t\t{\"community_areas\":179},",
                "\t\t\t\t\t{\"company\":230},",
                "\t\t\t\t\t{\"dropoff_census_tract\":227},",
                "\t\t\t\t\t{\"dropoff_community_area\":208},",
                "\t\t\t\t\t{\"dropoff_community_area_desc\":204},",
                "\t\t\t\t\t{\"dropoff_district\":151},",
                "\t\t\t\t\t{\"pickup_census_tract\":232},",
                "\t\t\t\t\t{\"pickup_community_area\":100},",
                "\t\t\t\t\t{\"pickup_community_area_desc\":234},",
                "\t\t\t\t\t{\"pickup_district\":173},",
                "\t\t\t\t\t{\"taxi_id\":100},",
                "\t\t\t\t\t{\"trip_start_hour\":164},",
                "\t\t\t\t\t{\"trip_end_hour\":152},",
                "\t\t\t\t\t{\"payment_type\":192},",
                "\t\t\t\t\t{\"fare\":100},",
                "\t\t\t\t\t{\"tips\":100},",
                "\t\t\t\t\t{\"tolls\":100},",
                "\t\t\t\t\t{\"extras\":100},",
                "\t\t\t\t\t{\"trip_total\":100},",
                "\t\t\t\t\t{\"trip_miles\":126},",
                "\t\t\t\t\t{\"trip_seconds\":151}])",
                "    .execute();"
            ],
            "showUI": true
        },
        {
            "id": "visf70ee515-7bf3-4f91-8d64-4f412f1a6534",
            "layout": {
                "w": 4,
                "h": 9,
                "x": 5,
                "y": 33,
                "i": "visf70ee515-7bf3-4f91-8d64-4f412f1a65341",
                "moved": false,
                "static": false
            },
            "title": "Drop-off Communities with Highest Average Tip",
            "visualization": "Word Cloud",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"tips\",\"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"dropoff_community_area_desc\")",
                "\t\t\t.limit(100)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Word Cloud\")",
                "            // .set('color', color)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis7ee165e2-62d7-49b5-b036-7b4be45c5dce",
            "layout": {
                "w": 3,
                "h": 6,
                "x": 9,
                "y": 36,
                "i": "vis7ee165e2-62d7-49b5-b036-7b4be45c5dce1",
                "moved": false,
                "static": false
            },
            "title": "Best Pick-up Communities by Tip Average",
            "visualization": "Packed Bubbles",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metric0 = cf.Metric(\"tips\",\"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_community_area_desc\")",
                "\t\t\t.limit(70)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Packed Bubbles\")",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "vis488940cd-77a3-4ea5-a887-6017ec5e3ecc",
            "layout": {
                "w": 12,
                "h": 11,
                "x": 0,
                "y": 42,
                "i": "vis488940cd-77a3-4ea5-a887-6017ec5e3ecc1",
                "moved": false,
                "static": false
            },
            "title": "Map Markers",
            "visualization": "Geo Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Add Metrics",
                "let metricCount = new cf.Metric();",
                "let metricFare = new cf.Metric(\"fare\", \"sum\");",
                "// Add fields to data source.",
                "let myData = source",
                "\t\t// \t.rows('dropoff_latitude', 'dropoff_longitude', 'dropoff_community_area_desc')",
                "\t\t\t.fields('dropoff_latitude', 'dropoff_longitude', 'dropoff_community_area_desc', 'fare', 'tips', 'tolls', 'extras')",
                "// Metrics (do not remove)",
                "\t\t// \t.metrics(metricCount, metricFare);",
                "// Define chart options",
                "let myChart = myData.graph(\"Geo Map\")",
                "      .set(\"tileLayers\", {",
                "          Base: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",",
                "          attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',",
                "       })",
                "\t\t\t.set(\"center\", [41.841431946284025,-87.74265289306642])",
                "\t\t\t.set(\"zoom\", 11)",
                "      .limit(10000)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": false
        },
        {
            "id": "visf238221d-d806-4fb0-a9ef-49090a4b68e0",
            "layout": {
                "w": 3,
                "h": 9,
                "x": 0,
                "y": 2,
                "i": "visf238221d-d806-4fb0-a9ef-49090a4b68e01",
                "moved": false,
                "static": false
            },
            "title": "Rides by Pickup Districts & Communities",
            "visualization": "Bars",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "//Configuration for grid",
                "let grid = cf.Grid().left(25).right(25).bottom(15).top(20);",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_district\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", metric0);",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t\t\t.metrics(metric0);",
                "// Color",
                "var color = cf.Color()",
                "var palette = ['#4575b4','#74add1','#abd9e9','#e0f3f8','#ffffbf','#fee090','#fdae61','#f46d43','#d73027','#a50026'];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Bars\")",
                "\t\t\t.set(\"grid\", grid)",
                "      .set('orientation', 'horizontal')",
                "      .set('yAxis', { 'text': 'out'} )",
                "      .set('color', color)",
                "\t\t\t.execute();",
                ""
            ],
            "showUI": true
        },
        {
            "id": "visf07cc9c7-8b2e-454c-b235-6fb697f01c98",
            "layout": {
                "w": 4,
                "h": 7,
                "x": 8,
                "y": 2,
                "i": "visf07cc9c7-8b2e-454c-b235-6fb697f01c981",
                "moved": false,
                "static": false
            },
            "title": "Total Charges by Pickup Community",
            "visualization": "Multimetric Bars",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elastic Demo",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elastic Demo\");",
                "let source = provider.source('chicago_taxi_trips');",
                "// Define metrics",
                "let metrics = [",
                "\tcf.Metric(\"fare\", \"sum\"), ",
                "\tcf.Metric(\"tips\", \"sum\"), ",
                "\tcf.Metric(\"tolls\", \"sum\"), ",
                "\tcf.Metric(\"extras\", \"sum\")",
                "];",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_district\")",
                "\t\t\t.limit(10)",
                "\t\t\t.sort(\"desc\", cf.Metric(\"fare\", \"sum\"));",
                "",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "\t.metrics(...metrics);",
                "// Define chart options",
                "// Define Grid",
                "let grid = cf.Grid()",
                "\t.top(-20)",
                "\t.right(30)",
                "\t.bottom(0)",
                "\t.left(20);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "\t.palette([\"#4575b4\", \"#fdae61\", \"#f46d43\",",
                "\t\t\"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Bars\")",
                "\t.set(\"grid\", grid)",
                "\t.set(\"color\", color)",
                "\t.set(\"orientation\", \"horizontal\")",
                "\t.set(\"placement\", \"stacked\")",
                "\t.set(\"axisLabels\", false)",
                "\t.set(\"yAxis\", {\"text\":\"out\",\"min\":0})",
                "\t.set(\"dataZoom\", false)",
                "\t.execute();",
                ""
            ],
            "showUI": true
        }
    ],
    "filters": [],
    "savedFilters": [
        {
            "id": "b998a3e6-b203-4239-925b-6edcab2588e8",
            "data": {
                "id": "b998a3e6-b203-4239-925b-6edcab2588e8",
                "name": "Pickup in North Side",
                "description": "Description 2",
                "index": 2
            },
            "filters": [
                {
                    "path": "pickup_district",
                    "label": "Pickup District",
                    "enabled": true,
                    "operation": "IN",
                    "value": [
                        "North Side"
                    ],
                    "id": "456d3380-50a7-41e3-9ea6-5cfcad5f31e7",
                    "origin": {
                        "name": "pickup_district",
                        "label": "Pickup District",
                        "sort": {
                            "name": "count",
                            "func": "",
                            "customLabel": false,
                            "label": "",
                            "metricFunc": "",
                            "dir": "desc"
                        },
                        "limit": 10,
                        "is": "Attribute",
                        "type": "ATTRIBUTE",
                        "originName": "pickup_district",
                        "originalType": "keyword",
                        "keyword": true,
                        "originLabel": "Pickup District"
                    },
                    "sender": {},
                    "code": "filter188"
                }
            ]
        },
        {
            "id": "2878b312-e9f2-4dc4-baa7-f512f47cd640",
            "data": {
                "id": "2878b312-e9f2-4dc4-baa7-f512f47cd640",
                "name": "Pickup in Central",
                "description": "Description 1",
                "index": 0
            },
            "filters": [
                {
                    "path": "pickup_district",
                    "label": "Pickup District",
                    "enabled": true,
                    "operation": "IN",
                    "value": [
                        "Central"
                    ],
                    "id": "fb3bbd82-7dd1-434d-b9b9-148422c3b3fc",
                    "origin": {
                        "name": "pickup_district",
                        "label": "Pickup District",
                        "sort": {
                            "name": "count",
                            "func": "",
                            "customLabel": false,
                            "label": "",
                            "metricFunc": "",
                            "dir": "desc"
                        },
                        "limit": 10,
                        "is": "Attribute",
                        "type": "ATTRIBUTE",
                        "originName": "pickup_district",
                        "originalType": "keyword",
                        "keyword": true,
                        "originLabel": "Pickup District"
                    },
                    "sender": {},
                    "code": "filter210"
                }
            ]
        }
    ],
    "folderPath": "/",
    "deletedWidgets": [],
    "metadata": {
        "Elastic Demo": [
            "let tripMinutes = {",
            "  'name': 'trip_minutes_d',",
            "  'label': 'Trip Minutes D',",
            "  'type': 'NUMBER',",
            "  'dependencies': [cf.Metric(\"trip_seconds\",\"avg\")],",
            "  'function': (tripSeconds) => tripSeconds / 60",
            "}",
            "",
            "let tripDayOfWeekD = {",
            "  'name': 'day_of_week_d',",
            "  'label': 'Day of Week',",
            "  'type': 'ATTRIBUTE',",
            "  'dependencies': ['trip_start_day_of_week'],",
            "  'reverse': (parameter) => { ",
            "       return ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']",
            "                .indexOf(parameter) + 1 },",
            "  'function': (dayOfWeek) => {",
            "        let day = {",
            "            '7' : { value: 'Sunday', order: 7 },",
            "            '1' : { value: 'Monday', order: 1 },",
            "            '2' : { value: 'Tuesday', order: 2 },",
            "            '3' : { value: 'Wednesday', order: 3 },",
            "            '4' : { value: 'Thursday', order: 4 },",
            "            '5' : { value: 'Friday', order: 5 },",
            "            '6' : { value: 'Saturday', order: 6 }",
            "        }",
            "        return day[dayOfWeek];",
            "    }",
            "  ",
            "}",
            "",
            "let _META_ = {",
            "  \"chicago_taxi_trips\": {",
            "    \"count\": {",
            "      \"label\": \"Rides\"",
            "    },",
            "    \"fields\": {",
            "      \"community_areas\": {",
            "        \"label\": \"Community Areas\"",
            "      },",
            "      \"company\": {",
            "        \"label\": \"Company\"",
            "      },",
            "      \"dropoff_census_tract\": {",
            "        \"label\": \"Dropoff Census Tract\"",
            "      }, ",
            "      \"pickup_community_area\": {",
            "        \"label\": \"Pickup Community Code\"",
            "      },",
            "      \"pickup_community_area_desc\": {",
            "        \"label\": \"Pickup Community Area\"",
            "      },",
            "      \"pickup_area_desc\": {",
            "        \"label\": \"Pickup Community\"",
            "      },",
            "      \"pickup_district\": {",
            "        \"label\": \"Pickup District\"",
            "      },",
            "      \"pickup_side\": {",
            "        \"label\": \"Pickup Side\"",
            "      },",
            "      \"dropoff_community_area\": {",
            "        \"label\": \"Drop off Community Code\"",
            "      },",
            "      \"dropoff_community_area_desc\": {",
            "        \"label\": \"Drop off Community Area\"",
            "      },",
            "      \"dropoff_area_desc\": {",
            "        \"label\": \"Drop off Community\"",
            "      },",
            "      \"dropoff_district\": {",
            "        \"label\": \"Drop off District\"",
            "      },",
            "      \"payment_type\": {",
            "        \"label\": \"Payment Type\"",
            "      },",
            "      \"pickup_census_tract\": {",
            "        \"label\": \"Pickup Census Tract\"",
            "      },",
            "      \"dropoff_side\": {",
            "        \"label\": \"Drop off Side\"",
            "      },",
            "      \"fare\": {",
            "        \"label\": \"Fare\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"tips\": {",
            "        \"label\": \"Tips\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"tolls\": {",
            "        \"label\": \"Tolls\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"extras\": {",
            "        \"label\": \"Extras\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"trip_total\": {",
            "        \"label\": \"Total\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"trip_start_timestamp\": {",
            "        \"label\": \"Trip Start\"",
            "      },",
            "      \"trip_start_day_of_week\": {",
            "        \"label\": \"Day of Week Num\"",
            "      },",
            "      \"trip_end_timestamp\": {",
            "        \"label\": \"Trip End\"",
            "      },",
            "      \"trip_miles\": {",
            "        \"label\": \"Trip Miles\",",
            "        \"type\": \"NUMBER\"",
            "      },",
            "      \"trip_minutes_d\": tripMinutes,",
            "      \"day_of_week_d\": tripDayOfWeekD",
            "    }",
            "  }",
            "}"
        ]
    },
    "customQueries": {}
}||||[
    {
        "name": "Elastic Demo",
        "url": "https://chartfactor.com/elastic",
        "active": true,
        "provider": "elasticsearch",
        "id": "217a1f8f-3439-40a8-99bc-3e85f6a81abb"
    }
]