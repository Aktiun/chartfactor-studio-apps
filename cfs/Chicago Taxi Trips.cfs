{
    "id": "8ceee3aa-0ad2-4020-af3c-bb9a7c0a9850",
    "name": "Chicago Taxi Trips",
    "description": "This dashboard visualizes 10,000 taxi trips taken from the full dataset, publicly available from the City of Chicago's website.",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "isSampleApp": true,
    "thumbnailPath": "data/chicago_taxi_trips.jpg",
    "widgetList": [
        {
            "id": "visa55780cf-3a67-480e-b9b6-f7022463a1f2",
            "layout": {
                "w": 5,
                "h": 7,
                "x": 3,
                "y": 0,
                "i": "visa55780cf-3a67-480e-b9b6-f7022463a1f21",
                "moved": false,
                "static": false
            },
            "title": "#### Rides by District and Community",
            "visualization": "Pivot Table",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Add Metrics",
                "let metricCount = new cf.Metric(\"count\");",
                "let total = new cf.Metric(\"trip_total\", \"sum\");",
                "// Add fields to data source.",
                "let myData =source",
                "            .rows(",
                "    cf.Row(\"pickup_district\", \"Pickup District\"),",
                "    cf.Row(\"pickup_community_area_desc\", \"Pickup Community Area\")",
                ")",
                "            .columns(",
                "    cf.Column(\"payment_type\", \"Payment_type\")",
                ")",
                "",
                "    // Metrics (do not remove this line)",
                "    .metrics(metricCount, total);",
                "// Define chart options",
                "let theme = {",
                "    \"headerStyle\": \"background: #b3cce6; color: #0d1a26; font-weight: bold;\",",
                "    \"headerResizeLineStyle\": \"border-right: 1px solid white;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom: 1px solid white;\",",
                "    \"bodyStyle\": \"background: #ffffff; color: #3e4953;\",",
                "    \"rowOddStyle\": \"background: #ffffff\",",
                "    \"rowEvenStyle\": \"background: #f0f0f5\"",
                "};",
                "let color = cf.Color().theme(theme);",
                "let myChart = myData.graph(\"Pivot Table\")",
                "    .set(\"color\", color)",
                "    // .set('autoSizeColumns', true)",
                "    .set(\"columnsWidth\", [",
                "    { \"pickup_district\": 144 },",
                "    { \"pickup_community_area_desc\": 144 },",
                "    { \"count\": 100 },",
                "    { \"trip_total\": 148 },",
                "    { \"Cash||count\": 91 },",
                "    { \"Cash||trip_total\": 141 },",
                "    { \"Credit Card||count\": 82 },",
                "    { \"Credit Card||trip_total\": 129 },",
                "    { \"No Charge||count\": 85 },",
                "    { \"No Charge||trip_total\": 115 },",
                "    { \"Unknown||count\": 81 },",
                "    { \"Unknown||trip_total\": 116 },",
                "    { \"Pcard||count\": 84 },",
                "    { \"Pcard||trip_total\": 114 },",
                "    { \"Prcard||count\": 77 },",
                "    { \"Prcard||trip_total\": 111 },",
                "    { \"Dispute||count\": 71 },",
                "    { \"Dispute||trip_total\": 109 }",
                "])",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis1f4bb8ae-a594-4203-8a55-09b917f3e057",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 0,
                "y": 9,
                "i": "vis1f4bb8ae-a594-4203-8a55-09b917f3e0571",
                "moved": false,
                "static": false
            },
            "title": "Avg. Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"fare\", \"avg\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visc877bb16-1362-404a-82b3-a2f8ab0dabe9",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 1,
                "y": 9,
                "i": "visc877bb16-1362-404a-82b3-a2f8ab0dabe91",
                "moved": false,
                "static": false
            },
            "title": "Max Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"fare\", \"max\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis057be44c-cb89-4a1c-934a-161663410b03",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 2,
                "y": 9,
                "i": "vis057be44c-cb89-4a1c-934a-161663410b031",
                "moved": false,
                "static": false
            },
            "title": "Min Fare",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"fare\", \"min\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "viscdb0da72-4d30-4d40-8ee6-a35815988666",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 0,
                "y": 11,
                "i": "viscdb0da72-4d30-4d40-8ee6-a358159886661",
                "moved": false,
                "static": false
            },
            "title": "Taxi Rides",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"count\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis139d66b6-e4f8-4ea7-baa7-fc0c2e2fdb5f",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 1,
                "y": 11,
                "i": "vis139d66b6-e4f8-4ea7-baa7-fc0c2e2fdb5f1",
                "moved": false,
                "static": false
            },
            "title": "Avg. Tip",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"tips\", \"avg\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis13483a1e-b675-4608-af02-b5922951e03e",
            "layout": {
                "w": 1,
                "h": 2,
                "x": 2,
                "y": 11,
                "i": "vis13483a1e-b675-4608-af02-b5922951e03e1",
                "moved": false,
                "static": false
            },
            "title": "Avg. Minutes",
            "visualization": "KPI",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "let metric0 = cf.Metric(\"trip_minutes\", \"avg\");",
                "// Define Color config",
                "let color = cf.Color();",
                "color.theme({",
                "    \"name\": \"light\",",
                "    \"font\": \"black\",",
                "    \"background\": \"white\"",
                "});",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"KPI\")",
                "    .set(\"color\", color)",
                "    .set(\"mainTextSize\", 30)",
                "    .set(\"secondaryTextSize\", 12)",
                "    .set(\"diffTextSize\", 12)",
                "    .set(\"labelTextSize\", 8)",
                "    .set(\"showArrow\", false)",
                "    .set(\"showLabels\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visc19981c7-1336-43c5-b8c6-7ca18cce024c",
            "layout": {
                "w": 3,
                "h": 8,
                "x": 3,
                "y": 7,
                "i": "visc19981c7-1336-43c5-b8c6-7ca18cce024c1",
                "moved": false,
                "static": false
            },
            "title": "#### Average Trip Miles",
            "visualization": "Gauge",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"trip_miles\", \"avg\");",
                "// Add metrics and groups to data source",
                "let myData = source",
                "    .metrics(metric0);",
                "var palette = [\"#4575b4\", \"#74add1\", \"#abd9e9\", \"#e0f3f8\", \"#ffffbf\", \"#fee090\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"];",
                "// Define chart options",
                "let myChart = myData.graph(\"Gauge\")",
                "    .set(\"ranges\", [[0, 15]])",
                "    .set(\"rangeColors\", [",
                "    [[0.02, \"lime\"], [0.5, \"#4575b4\"], [0.7, \"#fdae61\"], [0.8, \"#f46d43\"], [1, \"#a50026\"]]",
                "])",
                "    .set(\"lineWidth\", [\"15\"])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis795d4668-d2cb-42ca-a502-9380caf967a6",
            "layout": {
                "w": 3,
                "h": 2,
                "x": 0,
                "y": 13,
                "i": "vis795d4668-d2cb-42ca-a502-9380caf967a61",
                "moved": false,
                "static": false
            },
            "title": "Filter Rides by Their Length in Minutes",
            "visualization": "Range Filter",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metrics = [",
                "    cf.Metric(\"trip_minutes\", \"sum\"),",
                "];",
                "// Add metrics and groups to data source",
                "let myData = source.metrics(...metrics);",
                "// Define chart options",
                "let myChart = myData.graph(\"Range Filter\")",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis3ad08ee8-cd85-48e7-9fa6-8d00a8e717f4",
            "layout": {
                "w": 3,
                "h": 7,
                "x": 6,
                "y": 22,
                "i": "vis3ad08ee8-cd85-48e7-9fa6-8d00a8e717f41",
                "moved": false,
                "static": false
            },
            "title": "#### Charges by Pickup Community Area",
            "visualization": "Radar",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric1 = cf.Metric(\"fare\", \"sum\");",
                "let metric2 = cf.Metric(\"tips\", \"sum\");",
                "let metric3 = cf.Metric(\"extras\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_community_area_desc\")",
                "    .limit(10)",
                "    .sort(\"desc\", metric1);",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric1, metric2, metric3);",
                "// Color",
                "var color = cf.Color();",
                "var palette = [\"#4575b4\", \"#74add1\", \"#abd9e9\", \"#e0f3f8\", \"#ffffbf\", \"#fee090\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Radar\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf0892ae6-8f8f-4772-a903-fd511309ef2e",
            "layout": {
                "w": 4,
                "h": 7,
                "x": 8,
                "y": 15,
                "i": "visf0892ae6-8f8f-4772-a903-fd511309ef2e1",
                "moved": false,
                "static": false
            },
            "title": "#### Fare by Hour of the Day",
            "visualization": "Disk",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_hour\")",
                "    .limit(24)",
                "    .sort(\"asc\", \"trip_start_hour\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// Color",
                "var color = cf.Color();",
                "var palette = [\"#4575b4\", \"#74add1\", \"#abd9e9\", \"#e0f3f8\", \"#ffffbf\", \"#fee090\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"];",
                "color.palette(palette);",
                "// Define chart options",
                "let myChart = myData.graph(\"Disk\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis384c15b1-a9fb-4e7f-9211-548c92d940f9",
            "layout": {
                "w": 4,
                "h": 7,
                "x": 0,
                "y": 15,
                "i": "vis384c15b1-a9fb-4e7f-9211-548c92d940f91",
                "moved": false,
                "static": false
            },
            "title": "#### Fare, Tips, Extras, and Tolls Trend",
            "visualization": "Multimetric Trend",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metrics = [",
                "    cf.Metric(\"fare\", \"sum\"),",
                "    cf.Metric(\"tips\", \"sum\"),",
                "    cf.Metric(\"extras\", \"sum\")",
                "];",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "    .limit(1000).func(\"MONTH\")",
                "    .sort(\"asc\", \"trip_start_timestamp\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(...metrics);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"top\")",
                "    .width(150)",
                "    .height(23)",
                "    .sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(50)",
                "    .right(45)",
                "    .bottom(25)",
                "    .left(45);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#4575b4\", \"#74add1\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Trend\")",
                "    .set(\"legend\", legend)",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis6ddce408-23be-40c3-90d7-bcbd6eb354ca",
            "layout": {
                "w": 4,
                "h": 7,
                "x": 4,
                "y": 15,
                "i": "vis6ddce408-23be-40c3-90d7-bcbd6eb354ca1",
                "moved": false,
                "static": false
            },
            "title": "#### Rides and Fare Trend",
            "visualization": "Bars and Line",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "let metric1 = cf.Metric(\"fare\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"trip_start_timestamp\")",
                "    .limit(1000).func(\"YEAR\")",
                "    .sort(\"asc\", \"trip_start_timestamp\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0, metric1);",
                "// Define chart options",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(45)",
                "    .bottom(18)",
                "    .left(35);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#4575b4\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Bars and Line\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis04e800cc-905d-41f0-b975-3d4f68a1f634",
            "layout": {
                "w": 6,
                "h": 7,
                "x": 0,
                "y": 22,
                "i": "vis04e800cc-905d-41f0-b975-3d4f68a1f6341",
                "moved": false,
                "static": false
            },
            "title": "#### Amounts by Day of Week",
            "visualization": "Multimetric Area Line",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metrics = [",
                "    cf.Metric(\"fare\", \"sum\"),",
                "    cf.Metric(\"tips\", \"sum\"),",
                "    cf.Metric(\"extras\", \"sum\")",
                "];",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"day_of_week_d\")",
                "    .limit(7)",
                "    .sort(\"asc\", \"day_of_week_d\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(...metrics);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"top\")",
                "    .width(150)",
                "    .height(23)",
                "    .sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(50)",
                "    .right(25)",
                "    .bottom(25)",
                "    .left(40);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#4575b4\", \"#74add1\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Area Line\")",
                "    .set(\"legend\", legend)",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis6fa64965-e6ff-45c7-846d-73aadf5f29bc",
            "layout": {
                "w": 3,
                "h": 11,
                "x": 5,
                "y": 29,
                "i": "vis6fa64965-e6ff-45c7-846d-73aadf5f29bc1",
                "moved": false,
                "static": false
            },
            "title": "#### Aggregate Fare by Drop-off Community Area",
            "visualization": "Vector Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"fare\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"dropoff_community_area_desc\")",
                "    .limit(10000)",
                "    .sort(\"desc\", cf.Metric(\"fare\", \"sum\"));",
                "let metricColor = cf.Metric(\"fare\", \"sum\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .autoRange({ dynamic: true })",
                "    .palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "    .metric(metricColor);",
                "let myChart = myData.graph(\"Vector Map\")",
                "    .set(\"shape\", \"https://chartfactor.com/resources/chicago.json\")",
                "    .set(\"enableZoom\", false)",
                "    .set(\"min\", 0)",
                "    .set(\"zoom\", 0.9350000000000024)",
                "    .set(\"center\", [-87.73240251944343, 41.84084433171757])",
                "    .set(\"legend\", \"left\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis07f4059f-1186-4fe6-8c07-62967036b827",
            "layout": {
                "w": 5,
                "h": 11,
                "x": 0,
                "y": 29,
                "i": "vis07f4059f-1186-4fe6-8c07-62967036b8271",
                "moved": false,
                "static": false
            },
            "title": "#### Taxi Trip Records",
            "visualization": "Raw Data Table",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Declare your fields (do not remove this comment line)",
                "const fields = [",
                "    cf.Field(\"dropoff_community_area_desc\", \"Drop off Community Area\"),",
                "    cf.Field(\"dropoff_community_area\", \"Drop off Community Code\"),",
                "    cf.Field(\"dropoff_district\", \"Drop off District\"),",
                "    cf.Field(\"dropoff_census_tract\", \"Dropoff Census Tract\"),",
                "    cf.Field(\"pickup_community_area_desc\", \"Pickup Community Area\"),",
                "    cf.Field(\"pickup_community_area\", \"Pickup Community Code\"),",
                "    cf.Field(\"pickup_district\", \"Pickup District\"),",
                "    cf.Field(\"pickup_census_tract\", \"Pickup Census Tract\"),",
                "    cf.Field(\"payment_type\", \"Payment Type\"),",
                "    cf.Field(\"company\", \"Company\"),",
                "    cf.Field(\"fare\", \"Fare\"),",
                "    cf.Field(\"tips\", \"Tips\"),",
                "    cf.Field(\"tolls\", \"Tolls\"),",
                "    cf.Field(\"extras\", \"Extras\"),",
                "    cf.Field(\"trip_total\", \"Total\"),",
                "    cf.Field(\"trip_miles\", \"Trip Miles\"),",
                "    cf.Field(\"trip_start_hour\", \"Trip Start Hour\"),",
                "    cf.Field(\"trip_end_hour\", \"Trip End Hour\"),",
                "    cf.Field(\"trip_seconds\", \"Trip Seconds\"),",
                "    cf.Field(\"trip_start_timestamp\", \"Trip Start\"),",
                "    cf.Field(\"trip_end_timestamp\", \"Trip End\"),",
                "    cf.Field(\"taxi_id\", \"Taxi Id\"),",
                "];",
                "let myData = source.fields(fields);",
                "let color = cf.Color();",
                "color.theme({",
                "    \"headerStyle\": \"background: #b3cce6; color: #0d1a26; font-size: 16px;\",",
                "    \"headerIconStyle\": \"color: #0d1a26; font-size: 16px;\",",
                "    \"rowOddStyle\": \"background: #ffffff; color: #000;\",",
                "    \"rowEvenStyle\": \"background: #f0f0f5; color: #000;\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #2196f3;\",",
                "    \"cellMoving\": \"color: black; background: #90caf9;\",",
                "});",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Raw Data Table\")",
                "    .set(\"color\", color)",
                "    .set(\"showRowNumber\", true)",
                "    .set(\"autoSizeColumns\", true)",
                "    .limit(100)",
                "    .set(\"columnsWidth\", [",
                "    { \"rn\": 60 },",
                "    { \"trip_start_timestamp\": 193 },",
                "    { \"trip_end_timestamp\": 193 },",
                "    { \"community_areas\": 179 },",
                "    { \"company\": 230 },",
                "    { \"dropoff_census_tract\": 227 },",
                "    { \"dropoff_community_area\": 208 },",
                "    { \"dropoff_community_area_desc\": 204 },",
                "    { \"dropoff_district\": 151 },",
                "    { \"pickup_census_tract\": 232 },",
                "    { \"pickup_community_area\": 100 },",
                "    { \"pickup_community_area_desc\": 234 },",
                "    { \"pickup_district\": 173 },",
                "    { \"taxi_id\": 100 },",
                "    { \"trip_start_hour\": 164 },",
                "    { \"trip_end_hour\": 152 },",
                "    { \"payment_type\": 192 },",
                "    { \"fare\": 100 },",
                "    { \"tips\": 100 },",
                "    { \"tolls\": 100 },",
                "    { \"extras\": 100 },",
                "    { \"trip_total\": 100 },",
                "    { \"trip_miles\": 126 },",
                "    { \"trip_seconds\": 151 }",
                "])",
                "    .set(\"sort\", [{ \"trip_start_timestamp\": \"asc\" }])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf70ee515-7bf3-4f91-8d64-4f412f1a6534",
            "layout": {
                "w": 4,
                "h": 11,
                "x": 8,
                "y": 29,
                "i": "visf70ee515-7bf3-4f91-8d64-4f412f1a65341",
                "moved": false,
                "static": false
            },
            "title": "#### Drop-off Communities with Highest Average Tip",
            "visualization": "Word Cloud",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"tips\", \"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"dropoff_community_area_desc\")",
                "    .limit(100)",
                "    .sort(\"desc\", metric0);",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Word Cloud\")",
                "    // .set('color', color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis7ee165e2-62d7-49b5-b036-7b4be45c5dce",
            "layout": {
                "w": 3,
                "h": 7,
                "x": 9,
                "y": 22,
                "i": "vis7ee165e2-62d7-49b5-b036-7b4be45c5dce1",
                "moved": false,
                "static": false
            },
            "title": "#### Best Pick-up Communities by Tip Average",
            "visualization": "Packed Bubbles",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"tips\", \"avg\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_community_area_desc\")",
                "    .limit(70)",
                "    .sort(\"desc\", metric0);",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// Define chart options",
                "let myChart = myData.graph(\"Packed Bubbles\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf238221d-d806-4fb0-a9ef-49090a4b68e0",
            "layout": {
                "w": 3,
                "h": 9,
                "x": 0,
                "y": 0,
                "i": "visf238221d-d806-4fb0-a9ef-49090a4b68e01",
                "moved": false,
                "static": false
            },
            "title": "#### Rides by Pickup Districts & Communities",
            "visualization": "Bars",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"pickup_district\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(25)",
                "    .bottom(15)",
                "    .left(25);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#4575b4\", \"#74add1\", \"#abd9e9\", \"#e0f3f8\", \"#ffffbf\", \"#fee090\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"orientation\", \"horizontal\")",
                "    .set(\"yAxis\", { \"text\": \"out\" })",
                "    .set(\"dataZoom\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "visf07cc9c7-8b2e-454c-b235-6fb697f01c98",
            "layout": {
                "w": 4,
                "h": 7,
                "x": 8,
                "y": 0,
                "i": "visf07cc9c7-8b2e-454c-b235-6fb697f01c981",
                "moved": false,
                "static": false
            },
            "title": "#### Total Charges by Pickup Community",
            "visualization": "Multimetric Bars",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metrics = [",
                "    cf.Metric(\"fare\", \"sum\"),",
                "    cf.Metric(\"tips\", \"sum\"),",
                "    cf.Metric(\"tolls\", \"sum\"),",
                "    cf.Metric(\"extras\", \"sum\")",
                "];",
                "// Define attributes to group by",
                "let group = cf.Attribute(\"pickup_district\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric(\"fare\", \"sum\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group)",
                "    .metrics(...metrics);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"top\")",
                "    .width(150)",
                "    .height(23)",
                "    .sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(30)",
                "    .bottom(0)",
                "    .left(20);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#4575b4\", \"#fdae61\", \"#f46d43\", \"#d73027\", \"#a50026\"]);",
                "let myChart = myData.graph(\"Multimetric Bars\")",
                "    .set(\"legend\", legend)",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"orientation\", \"horizontal\")",
                "    .set(\"placement\", \"stacked\")",
                "    .set(\"axisLabels\", false)",
                "    .set(\"yAxis\", { \"text\": \"out\", \"min\": 0 })",
                "    .set(\"dataZoom\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis1827b3bb-3509-42c4-803e-08b64708ed96",
            "layout": {
                "w": 6,
                "h": 8,
                "x": 6,
                "y": 7,
                "i": "vis1827b3bb-3509-42c4-803e-08b64708ed961",
                "moved": false,
                "static": false
            },
            "title": "#### Trip Timestamp and Taxi Cab Company Heat Map",
            "visualization": "Heat Map",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"chicago_taxi_trips\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"count\");",
                "let metricColor = cf.Metric(\"count\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"company\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "let group2 = cf.Attribute(\"trip_start_timestamp\")",
                "    .limit(10).func(\"MONTH\")",
                "    .sort(\"desc\", \"trip_start_timestamp\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1).colgroupby(group2)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(10)",
                "    .bottom(10)",
                "    .left(10);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "    .metric(metricColor);",
                "let myChart = myData.graph(\"Heat Map\")",
                "    .set(\"color\", color)",
                "    .set(\"transpose\", false)",
                "    .set(\"showValues\", true)",
                "    .set(\"xAxisPosition\", \"top\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis286ab703-48ba-4fef-ab7d-4a3ef1033c75",
            "layout": {
                "w": 12,
                "h": 11,
                "x": 0,
                "y": 40,
                "i": "vis286ab703-48ba-4fef-ab7d-4a3ef1033c751",
                "moved": false,
                "static": false
            },
            "title": "#### Drop-off locations",
            "visualization": "Geo Map GL",
            "source": {
                "name": "chicago_taxi_trips",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let myChart = cf.create().graph(\"Geo Map GL\")",
                "    .set(\"layers\", [",
                "    {",
                "        \"name\": \"Drop-off locations\",",
                "        \"priority\": 2,",
                "        \"type\": \"marker\",",
                "        \"provider\": \"Elasticsearch\",",
                "        \"source\": \"chicago_taxi_trips\",",
                "        \"properties\": {",
                "            \"legend\": \"top-right\",",
                "            \"limit\": 10000,",
                "            \"color\": cf.Color()",
                "                .palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "                .metric(cf.Metric()),",
                "            \"fields\": [],",
                "            \"ignoreCoords\": [0, 0],",
                "            \"showLocation\": true,",
                "            \"disableMarkerEvents\": false,",
                "            \"maxSpiderifyMarkers\": 100,",
                "            \"allowClickInRawMarker\": true,",
                "            \"location\": \"dropoff_location\",",
                "            \"visibilityZoomRange\": [0, 24],",
                "        },",
                "    },",
                "    {",
                "        \"type\": \"tile\",",
                "        \"name\": \"Tile\",",
                "        \"priority\": 1,",
                "        \"properties\": {",
                "            \"source\": { \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"], \"scheme\": \"xyz\", \"attribution\": \"Map data &copy; <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>\" },",
                "        },",
                "    },",
                "])",
                "    .set(\"zoom\", 9.950496807532021)",
                "    .set(\"center\", [-87.71651259559746, 41.86237370860874])",
                "    .set(\"layersControl\", {",
                "    \"collapsed\": true,",
                "    \"position\": \"bottom-left\"",
                "})",
                "    .set(\"enableZoomInfo\", true)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null,
            "layerSources": [
                {
                    "name": "Drop-off locations",
                    "layerType": "marker",
                    "source": "chicago_taxi_trips",
                    "provider": "Elasticsearch",
                    "type": "elasticsearch"
                }
            ]
        }
    ],
    "filters": [],
    "savedFilters": [
        {
            "id": "b998a3e6-b203-4239-925b-6edcab2588e8",
            "data": {
                "id": "b998a3e6-b203-4239-925b-6edcab2588e8",
                "name": "Pickup in North Side",
                "description": "Description 2",
                "index": 2
            },
            "filters": [
                {
                    "path": "pickup_district",
                    "label": "Pickup District",
                    "enabled": true,
                    "operation": "IN",
                    "value": [
                        "North Side"
                    ],
                    "id": "456d3380-50a7-41e3-9ea6-5cfcad5f31e7",
                    "origin": {
                        "name": "pickup_district",
                        "label": "Pickup District",
                        "sort": {
                            "name": "count",
                            "func": "",
                            "customLabel": false,
                            "label": "",
                            "metricFunc": "",
                            "dir": "desc"
                        },
                        "limit": 10,
                        "is": "Attribute",
                        "type": "ATTRIBUTE",
                        "originName": "pickup_district",
                        "originalType": "keyword",
                        "keyword": true,
                        "originLabel": "Pickup District"
                    },
                    "sender": {},
                    "code": "filter188"
                }
            ]
        },
        {
            "id": "2878b312-e9f2-4dc4-baa7-f512f47cd640",
            "data": {
                "id": "2878b312-e9f2-4dc4-baa7-f512f47cd640",
                "name": "Pickup in Central",
                "description": "Description 1",
                "index": 0
            },
            "filters": [
                {
                    "path": "pickup_district",
                    "label": "Pickup District",
                    "enabled": true,
                    "operation": "IN",
                    "value": [
                        "Central"
                    ],
                    "id": "fb3bbd82-7dd1-434d-b9b9-148422c3b3fc",
                    "origin": {
                        "name": "pickup_district",
                        "label": "Pickup District",
                        "sort": {
                            "name": "count",
                            "func": "",
                            "customLabel": false,
                            "label": "",
                            "metricFunc": "",
                            "dir": "desc"
                        },
                        "limit": 10,
                        "is": "Attribute",
                        "type": "ATTRIBUTE",
                        "originName": "pickup_district",
                        "originalType": "keyword",
                        "keyword": true,
                        "originLabel": "Pickup District"
                    },
                    "sender": {},
                    "code": "filter210"
                }
            ]
        }
    ],
    "folderPath": "/",
    "deletedWidgets": [],
    "IM": {
        "id": "cfs-interaction-manager",
        "isIManager": true,
        "layout": null,
        "title": "Filters",
        "visualization": "Interaction Manager",
        "source": {},
        "code": [
            "let viz2 = getId(\"#### Fare, Tips, Extras, and Tolls Trend\");",
            "let viz1 = getId(\"#### Aggregate Fare by Drop-off Community Area\");",
            "/* Configuration code for the Filter Control*/",
            "// Drill hierarchy and rule settings can be done like this:",
            "// let viz1 = getId(\"widget_title_1\")",
            "// let viz2 = getId(\"widget_title_2\")",
            "// let drill = { [viz1]: { group1: []}}",
            "// let rules = { [viz2]: { receive: false }}",
            "// NOTE: Drill hierarchy will change your code!",
            "// Define chart options",
            "var vizId = getId(\"#### Rides by Pickup Districts & Communities\");",
            "var vizId2 = getId(\"#### Total Charges by Pickup Community\");",
            "var drill = {",
            "    [vizId]: {",
            "        group1: [",
            "            \"pickup_district\",",
            "            \"pickup_community_area_desc\"",
            "        ]",
            "    },",
            "    [vizId2]: {",
            "        group1: [",
            "            \"pickup_district\",",
            "            \"pickup_community_area_desc\"",
            "        ]",
            "    }",
            "};",
            "let rules1 = { [vizId]: { clientFilters: false }, [viz1]: { clientFilters: false } };",
            "// Define options",
            "let aktive = cf.create();",
            "let myChart = aktive.graph(\"Interaction Manager\")",
            "    .set(\"drill\", drill)",
            "    .set(\"rules\", rules1)",
            "    .execute();",
            ""
        ],
        "showUI": false,
        "syncedFields": [],
        "showTitle": true,
        "enableClientFilters": false,
        "enableAutoDrill": false,
        "staticFilters": 0,
        "description": null
    },
    "hideIM": false,
    "metadata": {
        "Elasticsearch": [
            "let tripDayOfWeekD = {",
            "  'name': 'day_of_week_d',",
            "  'label': 'Day of Week',",
            "  'type': 'ATTRIBUTE',",
            "  'dependencies': ['trip_start_day_of_week'],",
            "  'reverse': (parameter) => { ",
            "       return ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']",
            "                .indexOf(parameter) + 1 },",
            "  'function': (dayOfWeek) => {",
            "        let day = {",
            "            '7' : { value: 'Sunday', order: 7 },",
            "            '1' : { value: 'Monday', order: 1 },",
            "            '2' : { value: 'Tuesday', order: 2 },",
            "            '3' : { value: 'Wednesday', order: 3 },",
            "            '4' : { value: 'Thursday', order: 4 },",
            "            '5' : { value: 'Friday', order: 5 },",
            "            '6' : { value: 'Saturday', order: 6 }",
            "        }",
            "        return day[dayOfWeek];",
            "    }",
            "  ",
            "}",
            "",
            "let _META_ = {",
            "  \"chicago_taxi_trips\": {",
            "    \"count\": {",
            "      \"label\": \"Rides\"",
            "    },",
            "    \"fields\": {",
            "      \"community_areas\": {",
            "        \"label\": \"Community Areas\"",
            "      },",
            "      \"company\": {",
            "        \"label\": \"Company\"",
            "      },",
            "      \"dropoff_census_tract\": {",
            "        \"label\": \"Dropoff Census Tract\"",
            "      }, ",
            "      \"pickup_community_area\": {",
            "        \"label\": \"Pickup Community Code\"",
            "      },",
            "      \"pickup_community_area_desc\": {",
            "        \"label\": \"Pickup Community Area\"",
            "      },",
            "      \"pickup_area_desc\": {",
            "        \"label\": \"Pickup Community\"",
            "      },",
            "      \"pickup_district\": {",
            "        \"label\": \"Pickup District\"",
            "      },",
            "      \"pickup_side\": {",
            "        \"label\": \"Pickup Side\"",
            "      },",
            "      \"dropoff_community_area\": {",
            "        \"label\": \"Drop off Community Code\"",
            "      },",
            "      \"dropoff_community_area_desc\": {",
            "        \"label\": \"Drop off Community Area\"",
            "      },",
            "      \"dropoff_area_desc\": {",
            "        \"label\": \"Drop off Community\"",
            "      },",
            "      \"dropoff_district\": {",
            "        \"label\": \"Drop off District\"",
            "      },",
            "      \"payment_type\": {",
            "        \"label\": \"Payment Type\"",
            "      },",
            "      \"pickup_census_tract\": {",
            "        \"label\": \"Pickup Census Tract\"",
            "      },",
            "      \"dropoff_side\": {",
            "        \"label\": \"Drop off Side\"",
            "      },",
            "      \"fare\": {",
            "        \"label\": \"Fare\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"tips\": {",
            "        \"label\": \"Tips\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"tolls\": {",
            "        \"label\": \"Tolls\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"extras\": {",
            "        \"label\": \"Extras\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"trip_total\": {",
            "        \"label\": \"Total\",",
            "        \"type\": \"MONEY\"",
            "      },",
            "      \"trip_start_timestamp\": {",
            "        \"label\": \"Trip Start\"",
            "      },",
            "      \"trip_start_day_of_week\": {",
            "        \"label\": \"Day of Week Num\"",
            "      },",
            "      \"trip_end_timestamp\": {",
            "        \"label\": \"Trip End\"",
            "      },",
            "      \"trip_miles\": {",
            "        \"label\": \"Trip Miles\",",
            "        \"type\": \"NUMBER\"",
            "      },",
            "      \"trip_minutes\": {",
            "        \"label\": \"Trip Minutes\",",
            "        \"type\": \"NUMBER\"",
            "      },",
            "      \"day_of_week_d\": tripDayOfWeekD",
            "    }",
            "  }",
            "}"
        ]
    },
    "customQueries": {}
}||||[
    {
        "name": "Elasticsearch",
        "url": "https://chartfactor.com/elastic",
        "active": true,
        "provider": "elasticsearch",
        "id": "07b3d2ad-c8f0-486c-b276-c604c5a2cfd9"
    }
]