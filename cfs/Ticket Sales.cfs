{
    "id": "d094a540-682c-4493-8786-8e332411a28e",
    "name": "Ticket Sales",
    "description": "Application developed using CF Studio",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "widgetList": [
        {
            "id": "vis160c8d45-d95e-4a8c-8eb7-f2791a55bc7d",
            "layout": {
                "w": 4,
                "h": 11,
                "x": 8,
                "y": 15,
                "i": "vis160c8d45-d95e-4a8c-8eb7-f2791a55bc7d1",
                "moved": false,
                "static": false
            },
            "title": "Top 10 Venue Cities by Commission",
            "visualization": "Bars",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"commission\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"venuecity.keyword\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric(\"commission\", \"sum\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"orientation\", \"horizontal\")",
                "    .set(\"yAxis\", { \"text\": \"out\", \"min\": 0 })",
                "    .set(\"dataZoom\", false)",
                "    .set(\"serieLabel\", { \"show\": true, \"position\": \"insideRight\" })",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "vis7c365b9b-e0c3-4267-b32f-ad64679e6fa1",
            "layout": {
                "w": 6,
                "h": 7,
                "x": 0,
                "y": 8,
                "i": "vis7c365b9b-e0c3-4267-b32f-ad64679e6fa11",
                "moved": false,
                "static": false
            },
            "title": "Top Events and their Categories",
            "visualization": "Heat Map",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "//<end filter292>",
                "//Configuration for grid",
                "let grid = cf.Grid().left(10).right(15).bottom(10).top(0);",
                "// Define metrics",
                "let metric0 = cf.Metric(\"commission\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"catgroup.keyword\")",
                "    .limit(5)",
                "    .sort(\"desc\", \"catgroup.keyword\");",
                "let group2 = cf.Attribute(\"eventname.keyword\")",
                "    .limit(5)",
                "    .sort(\"desc\", metric0);",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1, group2)",
                "    .metrics(metric0);",
                "// Define chart options",
                "let color = cf.Color();",
                "color.metric(metric0);",
                "//<end exec filter292>",
                "let myChart = myData.graph(\"Heat Map\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"showValues\", true)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "vis1322a0cd-6a6b-437d-a5f0-dc7b03f0b8d1",
            "layout": {
                "w": 12,
                "h": 6,
                "x": 0,
                "y": 2,
                "i": "vis1322a0cd-6a6b-437d-a5f0-dc7b03f0b8d11",
                "moved": false,
                "static": false
            },
            "title": "Commission Trend by Category",
            "visualization": "Trend",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"commission\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"saletime\")",
                "    .limit(1000).func(\"DAY\")",
                "    .sort(\"asc\", \"saletime\");",
                "let group2 = cf.Attribute(\"catdesc.keyword\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric(\"commission\", \"sum\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1, group2)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Legend",
                "let legend = cf.Legend()",
                "    .position(\"bottom\")",
                "    .width(150)",
                "    .height(30)",
                "    .sort(\"none\");",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(50)",
                "    .right(35)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "let myChart = myData.graph(\"Trend\")",
                "    .set(\"legend\", legend)",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"placement\", \"stacked\")",
                "    .set(\"dataZoom\", false)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "visd6617fcf-400b-4d1c-83b9-809003bd6303",
            "layout": {
                "w": 6,
                "h": 7,
                "x": 6,
                "y": 8,
                "i": "visd6617fcf-400b-4d1c-83b9-809003bd63031",
                "moved": false,
                "static": false
            },
            "title": "Top 10 Events and Venues by Revenue",
            "visualization": "Tree Map 2D",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "//<end filter292>",
                "// Define metrics",
                "let metric0 = cf.Metric(\"pricepaid\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"eventname.keyword\")",
                "    .limit(10)",
                "    .sort(\"desc\", metric0);",
                "let group2 = cf.Attribute(\"venuename.keyword\")",
                "    .limit(10)",
                "    .sort(\"desc\", metric0);",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1, group2)",
                "    .metrics(metric0);",
                "//<end exec filter292>",
                "let myChart = myData.graph(\"Tree Map 2D\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "vis6712e9ad-787f-48e1-8ca3-7ce31f148fc0",
            "layout": {
                "w": 7,
                "h": 8,
                "x": 0,
                "y": 26,
                "i": "vis6712e9ad-787f-48e1-8ca3-7ce31f148fc01",
                "moved": false,
                "static": false
            },
            "title": "Commission by Venue State",
            "visualization": "Vector Map",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "// Define metrics",
                "let metric0 = cf.Metric(\"commission\", \"sum\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"state_str\")",
                "    .limit(55)",
                "    .sort(\"desc\", cf.Metric(\"commission\", \"sum\"));",
                "let metricColor = cf.Metric(\"commission\", \"sum\");",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .autoRange({ dynamic: false })",
                "    .palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "    .metric(metricColor);",
                "let myChart = myData.graph(\"Vector Map\")",
                "    .set(\"shape\", \"usa\")",
                "    .set(\"enableZoom\", false)",
                "    .set(\"min\", 0)",
                "    .set(\"zoom\", 0.8322319472772369)",
                "    .set(\"center\", [-99.63091549796751, 38.97539346402534])",
                "    .set(\"legend\", \"right\")",
                "    .set(\"color\", color)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "vis9b01e10b-1210-45b3-9d20-853a3ddfca85",
            "layout": {
                "w": 8,
                "h": 11,
                "x": 0,
                "y": 15,
                "i": "vis9b01e10b-1210-45b3-9d20-853a3ddfca851",
                "moved": false,
                "static": false
            },
            "title": "Sankey Diagram",
            "visualization": "Sankey",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "//<end filter292>",
                "//Configuration for grid",
                "let grid = cf.Grid().left(40).right(40).bottom(10).top(0);",
                "// Define metrics",
                "let metric0 = cf.Metric(\"commission\", \"sum\");",
                "let myData = source",
                "    // Rows (do not remove this line)",
                "    .rows(\"catgroup.keyword\", \"catdesc.keyword\", \"venuestate\")",
                "    // Metrics (do not remove this line)",
                "    .metrics(metric0);",
                "//<end exec filter292>",
                "let myChart = myData.graph(\"Sankey\")",
                "    .set(\"grid\", grid)",
                "    .limit(10000)",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "vis79cda086-5dfb-44c9-8ccb-e372f2373f44",
            "layout": {
                "w": 12,
                "h": 2,
                "x": 0,
                "y": 0,
                "i": "vis79cda086-5dfb-44c9-8ccb-e372f2373f441",
                "moved": false
            },
            "title": "Time Slider",
            "visualization": "Time Slider",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "//<end filter292>",
                "let grid = cf.Grid().right(20).left(10);",
                "// Define the time field to be used",
                "let field = cf.Attribute(\"saletime\").func(\"SECOND\");",
                "let myData = source.timeField(field);",
                "//<end exec filter292>",
                "let myChart = myData.graph(\"Time Slider\")",
                "    .set(\"grid\", grid)",
                "    .set(\"player\", {",
                "    \"step\": 1,",
                "    \"step-unit\": \"day\",",
                "    \"pin-left\": false,",
                "    \"refresh\": 2,",
                "    \"autoplay\": false,",
                "    \"live\": false,",
                "})",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "showTitle": true
        },
        {
            "id": "visc7bf0852-eee2-4e40-a24a-76ccfe9baf55",
            "layout": {
                "w": 5,
                "h": 8,
                "x": 7,
                "y": 26,
                "i": "visc7bf0852-eee2-4e40-a24a-76ccfe9baf551",
                "moved": false,
                "static": false
            },
            "title": "Commission Rates by Category and Venue States",
            "visualization": "Bars",
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"ticket_sales\");",
                "//<end filter292>",
                "// Define metrics",
                "const rate = cf.CompareMetric()",
                "    .rate()",
                "    // .using('catname.keyword', 'state_str')",
                "    .label(\"Rate\");",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"catname.keyword\")",
                "    .limit(10)",
                "    .sort(\"desc\", cf.Metric());",
                "let group2 = cf.Attribute(\"state_str\")",
                "    .limit(100)",
                "    .sort(\"desc\", cf.Metric());",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1, group2)",
                "    .metrics(rate);",
                "// Define chart options",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(15)",
                "    .bottom(35)",
                "    .left(65);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#0095b7\", \"#a0b774\", \"#f4c658\", \"#fe8b3e\", \"#cf2f23\", \"#756c56\", \"#007896\", \"#47a694\", \"#f9a94b\", \"#ff6b30\", \"#e94d29\", \"#005b76\"]);",
                "//<end exec filter292>",
                "let myChart = myData.graph(\"Bars\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"placement\", \"stacked\")",
                "    .set(\"dataZoom\", false)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "showTitle": true
        }
    ],
    "filters": [],
    "savedFilters": [],
    "folderPath": "/",
    "deletedWidgets": [
        {
            "id": "vise27bd26f-8b9c-4b73-b69e-22fdf834d652",
            "visualization": "Range Filter",
            "layout": {
                "w": 3,
                "h": 2,
                "x": 0,
                "y": 15,
                "i": "vise27bd26f-8b9c-4b73-b69e-22fdf834d6521",
                "moved": false,
                "static": false
            },
            "title": "Range Filter",
            "loading": false,
            "error": false,
            "errorMessage": null,
            "code": "/* Configuration code for this widget */\nlet provider = cf.provider(\"Elasticsearch\");\nlet source = provider.source(\"ticket_sales\");\n// Define metrics\nlet metrics = [\n    cf.Metric(\"qtysold\")\n];\n// Add metrics and groups to data source\nlet myData = source.metrics(...metrics);\n// Define chart options\nlet myChart = myData.graph(\"Range Filter\")\n    .execute();\n",
            "dataVersion": 1,
            "showTitle": true,
            "showDataView": false,
            "showUI": true,
            "source": {
                "name": "ticket_sales",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "data": [
                {
                    "group": [],
                    "current": {
                        "count": 172456,
                        "metrics": {
                            "qtysold": {
                                "max": 8,
                                "min": 1
                            }
                        }
                    }
                }
            ]
        }
    ],
    "IM": {
        "id": "cfs-interaction-manager",
        "isIManager": true,
        "layout": null,
        "title": "Filters",
        "visualization": "Interaction Manager",
        "source": {},
        "code": [
            "let viz3 = getId(\"Commission by Venue State\");",
            "let viz2 = getId(\"Top 10 Venue Cities by Commission\");",
            "/* Configuration code for the Filter Control*/",
            "// Drill hierarchy and rule settings can be done like this:",
            "let viz1 = getId(\"Top 10 Events by Commission\");",
            "// let viz2 = getId(\"widget_title_2\")",
            "let drill = {",
            "    [viz1]: {",
            "        group1: [\"eventname.keyword\", \"venuename.keyword\"]",
            "    }",
            "};",
            "let rules1 = { [viz3]: { clientFilters: false }, [viz2]: { clientFilters: true } };",
            "// let rules = { [viz2]: { receive: false }}",
            "// NOTE: Drill hierarchy will change your code!",
            "// Define options",
            "let aktive = cf.create();",
            "let myChart = aktive.graph(\"Interaction Manager\")",
            "    //.set(\"rules\", rules)",
            "    .set(\"drill\", drill)",
            "    .set(\"rules\", rules1)",
            "    .execute();",
            ""
        ],
        "showUI": false,
        "syncedFields": [],
        "showTitle": true
    },
    "hideIM": false,
    "metadata": {
        "Elasticsearch": [
            "let state = {",
            "  'AL' : 'Alabama',",
            "\t'AK' : 'Alaska',",
            "\t'AZ' : 'Arizona',",
            "\t'AR' : 'Arkansas',",
            "\t'CA' : 'California',",
            "\t'CO' : 'Colorado',",
            "\t'CT' : 'Connecticut',",
            "\t'DE' : 'Delaware',",
            "\t'DC' : 'District of Columbia',",
            "\t'FL' : 'Florida',",
            "\t'GA' : 'Georgia',",
            "\t'HI' : 'Hawaii',",
            "\t'ID' : 'Idaho',",
            "\t'IL' : 'Illinois',",
            "\t'IN' : 'Indiana',",
            "\t'IA' : 'Iowa',",
            "\t'KS' : 'Kansas',",
            "\t'KY' : 'Kentucky',",
            "\t'LA' : 'Louisiana',",
            "\t'ME' : 'Maine',",
            "\t'MD' : 'Maryland',",
            "\t'MA' : 'Massachusetts',",
            "\t'MI' : 'Michigan',",
            "\t'MN' : 'Minnesota',",
            "\t'MS' : 'Mississippi',",
            "\t'MO' : 'Missouri',",
            "\t'MT' : 'Montana',",
            "\t'NE' : 'Nebraska',",
            "\t'NV' : 'Nevada',",
            "\t'NH' : 'New Hampshire',",
            "\t'NJ' : 'New Jersey',",
            "\t'NM' : 'New Mexico',",
            "\t'NY' : 'New York',",
            "\t'NC' : 'North Carolina',",
            "\t'ND' : 'North Dakota',",
            "\t'OH' : 'Ohio',",
            "\t'OK' : 'Oklahoma',",
            "\t'OR' : 'Oregon',",
            "\t'PA' : 'Pennsylvania',",
            "\t'RI' : 'Rhode Island',",
            "\t'SC' : 'South Carolina',",
            "\t'SD' : 'South Dakota',",
            "\t'TN' : 'Tennessee',",
            "\t'TX' : 'Texas',",
            "\t'UT' : 'Utah',",
            "\t'VT' : 'Vermont',",
            "\t'VA' : 'Virginia',",
            "\t'WA' : 'Washington',",
            "\t'WV' : 'West Virginia',",
            "\t'WI' : 'Wisconsin',",
            "\t'WY' : 'Wyoming'",
            "}",
            "        ",
            "let stateStr = {",
            "  'name': 'state_str',",
            "  'label': 'Venue State Name',",
            "  'type': 'ATTRIBUTE',",
            "  'dependencies': ['venuestate'],",
            "  'reverse': (derived) => {",
            "      let result = false;",
            "      let index = Object.values(state).indexOf(derived)",
            "      ",
            "      return Object.keys(state)[index];",
            "  },",
            "  'function': (venuestate) => {",
            "        return state[venuestate] ? state[venuestate] : venuestate;",
            "    }",
            "}",
            "",
            "let _META_ = {",
            "    'ticket_sales': {    ",
            "        'fields': {",
            "            'state_str': stateStr,",
            "            'catgroup.keyword': {",
            "              label: 'Group'",
            "            },",
            "            'catname.keyword': {",
            "              label: 'Category Name'",
            "            },",
            "            'catdesc.keyword': {",
            "              'label': 'Category'",
            "            },",
            "            'eventname.keyword': {",
            "              'label': 'Event'",
            "            },",
            "            'venuename.keyword': {",
            "              'label': 'Venue'",
            "            },",
            "            venuestate: {",
            "              label: 'Venue State'",
            "            },",
            "            'venuecity.keyword': {",
            "              label: 'Venue City'",
            "            },",
            "            'likerock': {",
            "              'label': \"Likes Rock\"",
            "            },",
            "            'saletime': {",
            "              'label': 'Sale Time'",
            "            },",
            "            'commission': {",
            "              'type': 'MONEY'",
            "            },",
            "            'pricepaid': {",
            "              'label': 'Price Paid',",
            "              'type': 'MONEY'",
            "            },",
            "            'qtysold': {",
            "              label: 'Quantity Sold'",
            "            }",
            "        }",
            "    }",
            "}"
        ]
    },
    "customQueries": {}
}||||[
    {
        "name": "Elasticsearch",
        "url": "https://chartfactor.com/elastic/",
        "active": true,
        "provider": "elasticsearch",
        "id": "95ddcc34-f2e7-4338-9896-dd97f1635c4f"
    }
]