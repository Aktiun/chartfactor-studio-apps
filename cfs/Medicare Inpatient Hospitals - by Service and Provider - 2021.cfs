{
    "id": "858ea597-eae7-4e33-b6f5-20295dd328f7",
    "name": "Medicare Inpatient Hospitals - by Service and Provider - 2021",
    "description": "Application developed using CF Studio",
    "state": "home",
    "readOnly": false,
    "hasBorder": true,
    "isSampleApp": false,
    "thumbnailPath": "img/mix.png",
    "widgetList": [
        {
            "id": "visf5c01a14-ce24-498d-8b6f-687e57fae025",
            "layout": {
                "w": 6,
                "h": 11,
                "x": 6,
                "y": 13,
                "i": "visf5c01a14-ce24-498d-8b6f-687e57fae0251",
                "moved": false,
                "static": false
            },
            "title": "#### Top 50 DRGs and Top 50 Rendering providers",
            "visualization": "Heat Map",
            "source": {
                "name": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\");",
                "let metric0 = cf.Metric(\"Avg_Tot_Pymt_Amt\", \"avg\").hideFunction();",
                "let metricColor = cf.Metric(\"Avg_Tot_Pymt_Amt\", \"avg\").hideFunction();",
                "// Define attributes to group by",
                "let group1 = cf.Attribute(\"DRG_Desc\")",
                "    .limit(50)",
                "    .sort(\"desc\", cf.Metric(\"Avg_Tot_Pymt_Amt\", \"avg\"));",
                "let group2 = cf.Attribute(\"Rndrng_Prvdr_Org_Name\")",
                "    .limit(50)",
                "    .sort(\"desc\", cf.Metric(\"Avg_Tot_Pymt_Amt\", \"avg\"));",
                "// Add metrics and groups to data source",
                "let myData = source.groupby(group1).colgroupby(group2)",
                "    .metrics(metric0);",
                "// --- Define chart options and static filters ---",
                "// Define Grid",
                "let grid = cf.Grid()",
                "    .top(10)",
                "    .right(10)",
                "    .bottom(10)",
                "    .left(10);",
                "// Define Color Palette",
                "let color = cf.Color()",
                "    .palette([\"#a50026\", \"#d73027\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"])",
                "    .metric(metricColor);",
                "let myChart = myData.graph(\"Heat Map\")",
                "    .set(\"color\", color)",
                "    .set(\"transpose\", false)",
                "    .set(\"showValues\", true)",
                "    .set(\"xAxisPosition\", \"top\")",
                "    .set(\"grid\", grid)",
                "    .set(\"color\", color)",
                "    .set(\"dataZoom\", \"dragFilter\")",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "Rndrng_Prvdr_CCN",
                "Rndrng_Prvdr_Org_Name",
                "Rndrng_Prvdr_State_Abrvtn",
                "Rndrng_Prvdr_St",
                "Rndrng_Prvdr_State_FIPS",
                "Rndrng_Prvdr_City",
                "Rndrng_Prvdr_Zip5",
                "Avg_Mdcr_Pymt_Amt",
                "Avg_Submtd_Cvrd_Chrg",
                "Avg_Tot_Pymt_Amt",
                "DRG_Cd",
                "DRG_Desc",
                "Rndrng_Prvdr_RUCA",
                "Rndrng_Prvdr_RUCA_Desc",
                "Tot_Dschrgs"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": "This chart displays the average total payment amounts based on the rendering provider's city. It provides insights into payment discrepancies between different cities."
        },
        {
            "id": "visddd214aa-b84d-4ef7-88a4-a9e3e42d3f32",
            "layout": {
                "w": 6,
                "h": 11,
                "x": 0,
                "y": 13,
                "i": "visddd214aa-b84d-4ef7-88a4-a9e3e42d3f321",
                "moved": false,
                "static": false
            },
            "title": "Medicare provider charges",
            "visualization": "Geo Map GL",
            "source": {
                "name": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),\r",
                "// and clientFilters() to manage filters. To apply additional\r",
                "// filters, use staticFilters() or your code could be overwritten.\r",
                "//\r",
                "/* Configuration code for this widget */\r",
                "let myChart = cf.create().graph(\"Geo Map GL\")\r",
                "    .set(\"legend\", { \"_type\": \"sequential\", \"_allowHorizontalRender\": true, \"_items\": [], \"_position\": \"top-right\", \"_width\": 150, \"_height\": { \"unit\": \"px\", \"value\": 35 }, \"_element\": \"\", \"_min\": null, \"_max\": null, \"_colors\": [], \"_mainCssClass\": \"adt-legend\" })\r",
                "    .set(\"layers\", [\r",
                "        {\r",
                "            \"name\": \"Providers\",\r",
                "            \"priority\": 5,\r",
                "            \"type\": \"circle\",\r",
                "            \"provider\": \"Elasticsearch\",\r",
                "            \"source\": \"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\",\r",
                "            \"properties\": {\r",
                "                \"legend\": \"top-right\",\r",
                "                \"limit\": 10000,\r",
                "                \"rows\": [\r",
                "                    cf.Row(\"lon\"),\r",
                "                    cf.Row(\"lat\"),\r",
                "                    cf.Row(\"Rndrng_Prvdr_Org_Name\"),\r",
                "                    cf.Row(\"Rndrng_Prvdr_City\")\r",
                "                ],\r",
                "                \"visibilityZoomRange\": [0, 24],\r",
                "                \"options\": {\r",
                "                    \"name\": \"Provider\",\r",
                "                    \"color\": cf.Color().autoRange({ dynamic: true }).palette([\"#00577a\", \"#007598\", \"#0093b6\", \"#19b1d4\", \"#37cff2\"]).metric(cf.Metric(\"Avg_Mdcr_Pymt_Amt\", \"avg\").hideFunction()),\r",
                "                    \"metrics\": [\r",
                "                        cf.Metric(\"Avg_Mdcr_Pymt_Amt\", \"avg\").hideFunction()\r",
                "                    ],\r",
                "                    \"allowClick\": true,\r",
                "                    \"showLocation\": false,\r",
                "                    \"fillOpacity\": 0.83,\r",
                "                    \"radiusScale\": { \"min\": 2, \"max\": 12 },\r",
                "                },\r",
                "                \"location\": \"Prvdr_location\",\r",
                "            },\r",
                "        },\r",
                "        {\r",
                "            \"name\": \"States\",\r",
                "            \"priority\": 2,\r",
                "            \"type\": \"shape\",\r",
                "            \"provider\": \"Elasticsearch\",\r",
                "            \"source\": \"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\",\r",
                "            \"properties\": {\r",
                "                \"shapes\": [\r",
                "                    {\r",
                "                        \"url\": \"https://chartfactor.com/resources/us-states.json\",\r",
                "                        \"shapeOpacity\": 0.8,\r",
                "                        \"name\": \"State\"\r",
                "                    }\r",
                "                ],\r",
                "                \"legend\": \"right\",\r",
                "                \"visibilityZoomRange\": [0, 24],\r",
                "                \"limit\": 10000,\r",
                "                \"options\": {\r",
                "                    \"rows\": [\r",
                "                        cf.Row(\"state_name\")\r",
                "                    ],\r",
                "                    \"style\": { \"weight\": 0.5 },\r",
                "                    \"featureProperty\": \"name\",\r",
                "                    \"metrics\": [\r",
                "                        cf.Metric()\r",
                "                    ],\r",
                "                    \"shapeOpacity\": 0.67,\r",
                "                    \"animationDuration\": 1,\r",
                "                    \"color\": cf.Color().autoRange({ dynamic: true }).palette([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\"]).metric(cf.Metric()),\r",
                "                },\r",
                "            },\r",
                "        },\r",
                "        {\r",
                "            \"type\": \"tile\",\r",
                "            \"name\": \"Tile\",\r",
                "            \"priority\": 1,\r",
                "            \"properties\": {\r",
                "                \"source\": { \"tiles\": [\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"], \"scheme\": \"xyz\", \"attribution\": \"Map data &copy; <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>\" },\r",
                "            },\r",
                "        },\r",
                "    ])\r",
                "    .set(\"zoom\", 3.4306895466399143)\r",
                "    .set(\"center\", [-101.79175396299905, 41.94086848882961])\r",
                "    .set(\"layersControl\", {\r",
                "        \"collapsed\": true,\r",
                "        \"position\": \"bottom-left\"\r",
                "    })\r",
                "    .set(\"drawControl\", true)\r",
                "    .set(\"enableZoomInfo\", true)\r",
                "    .execute();\r",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "Rndrng_Prvdr_CCN",
                "Rndrng_Prvdr_Org_Name",
                "Rndrng_Prvdr_State_Abrvtn",
                "Rndrng_Prvdr_St",
                "Rndrng_Prvdr_State_FIPS",
                "Rndrng_Prvdr_City",
                "Rndrng_Prvdr_Zip5",
                "Avg_Mdcr_Pymt_Amt",
                "Avg_Submtd_Cvrd_Chrg",
                "Avg_Tot_Pymt_Amt",
                "DRG_Cd",
                "DRG_Desc",
                "Rndrng_Prvdr_RUCA",
                "Rndrng_Prvdr_RUCA_Desc",
                "Tot_Dschrgs"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": "This chart displays the average total payment amounts based on the rendering provider's city. It provides insights into payment discrepancies between different cities.",
            "layersProviders": [
                "Elasticsearch"
            ],
            "layerSources": [
                {
                    "name": "Providers",
                    "layerType": "circle",
                    "source": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                    "provider": "Elasticsearch",
                    "type": "elasticsearch"
                },
                {
                    "name": "States",
                    "layerType": "shape",
                    "source": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                    "provider": "Elasticsearch",
                    "type": "elasticsearch"
                }
            ]
        },
        {
            "id": "vis282bf4fa-084a-4ccd-8756-d4385b360c9f",
            "isMarkup": true,
            "layout": {
                "w": 12,
                "h": 5,
                "x": 0,
                "y": 24,
                "i": "vis282bf4fa-084a-4ccd-8756-d4385b360c9f1",
                "moved": false,
                "static": false
            },
            "title": "",
            "visualization": "Markup",
            "source": {},
            "code": [
                "/* Configuration code for the Markup Widget*/",
                "// Define options",
                "let aktive = cf.create();",
                "let myChart = aktive.graph(\"Markup\")",
                "    .set(\"content\", {\"ops\":[{\"insert\":\"Medicare Inpatient Hospitals - by Service and Provider - 2021\"},{\"attributes\":{\"header\":3},\"insert\":\"\\n\"},{\"insert\":\"Data are downloaded from open data platform by \"},{\"attributes\":{\"link\":\"https://data.cms.gov/search?keywords=Medicare%20Inpatient%20Hospitals%20-%20by%20Provider%20and%20Service&sort=Relevancy\"},\"insert\":\"Centers for Medicare & Medicaid Services\"},{\"insert\":\".\\n\\nThe Medicare Inpatient Hospitals by Provider and Service dataset provides information on inpatient discharges for Original Medicare Part A beneficiaries by IPPS hospitals. It includes information on the use, payment, and hospital charges for more than 3,000 U.S. hospitals that received IPPS payments. The data are organized by hospital and Medicare Severity Diagnosis Related Group (DRG).\\n\\nHospitals determine what they will charge for items and services provided to patients, and these charges are the amount the hospital bills for an item or service. The Total Payment Amount includes the DRG amount, claim per diem amount, beneficiary primary payer claim payment amount, beneficiary Part A (Hospital Insurance) coinsurance amount, beneficiary deductible amount, beneficiary blood deductible amount and diagnosis related group outlier amount.\\n\\n\"}]})",
                "    .set(\"enable\", false)",
                "    .set(\"background\", \"white\")",
                "    .set(\"lock\", false)",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": null
        },
        {
            "id": "vis43b3fa64-729c-4f37-915c-eb60cb7ac229",
            "layout": {
                "w": 6,
                "h": 1,
                "x": 0,
                "y": 12,
                "i": "vis43b3fa64-729c-4f37-915c-eb60cb7ac2291",
                "moved": false,
                "static": false
            },
            "title": "Select your cost metric for the map",
            "visualization": "Field Selector",
            "source": {
                "name": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\");",
                "let myChart = source.graph(\"Field Selector\")",
                "    .set(\"fields\", [\"Avg_Mdcr_Pymt_Amt\", \"Avg_Submtd_Cvrd_Chrg\", \"Avg_Tot_Pymt_Amt\", \"Tot_Dschrgs\"])",
                "    .set(\"field\", \"Avg_Mdcr_Pymt_Amt\")",
                "    .set(\"metric\", 1)",
                "    .set(\"charts\", [",
                "    getId(\"Medicare provider charges\", \"Providers\")",
                "])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "DRG_Desc",
                "Rndrng_Prvdr_Org_Name",
                "Avg_Tot_Pymt_Amt",
                "Avg_Mdcr_Pymt_Amt",
                "Tot_Dschrgs",
                "DRG_Cd",
                "Avg_Submtd_Cvrd_Chrg",
                "Rndrng_Prvdr_CCN",
                "Rndrng_Prvdr_City",
                "Rndrng_Prvdr_RUCA",
                "Rndrng_Prvdr_RUCA_Desc",
                "Rndrng_Prvdr_St",
                "Rndrng_Prvdr_State_Abrvtn",
                "Rndrng_Prvdr_State_FIPS",
                "Rndrng_Prvdr_Zip5",
                "state_name"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": "This chart displays the average total payment amounts based on the rendering provider's city. It provides insights into payment discrepancies between different cities."
        },
        {
            "id": "vis75d2ec12-683f-4bcb-ba24-4006677531eb",
            "layout": {
                "w": 12,
                "h": 12,
                "x": 0,
                "y": 0,
                "i": "vis75d2ec12-683f-4bcb-ba24-4006677531eb1",
                "moved": false,
                "static": false
            },
            "title": "Raw dataset: Medicare Inpatient Hospitals - by Service and Provider",
            "visualization": "Raw Data Table",
            "source": {
                "name": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "const { formatNumericValue, } = cf.getDependency(\"utils\");",
                "let f1 = { type: \"MONEY\", currency: \"$\", displayFormat: \"$ (0,0)\" };",
                "let f2 = { type: \"INTEGER\" };",
                "let formatter = {",
                "    fields: [\"Avg_Mdcr_Pymt_Amt\", \"Avg_Submtd_Cvrd_Chrg\", \"Avg_Tot_Pymt_Amt\", \"Tot_Dschrgs\"],",
                "    format: function (field, value) {",
                "        var format = f1;",
                "        var color = {};",
                "        if (field === \"Avg_Tot_Pymt_Amt\") {",
                "            color = getColorForTotPymt(value);",
                "        }",
                "        else if (field == \"Avg_Submtd_Cvrd_Chrg\") {",
                "            color = getColorForCoveredChrges(value);",
                "        }",
                "        else if (field == \"Avg_Mdcr_Pymt_Amt\") {",
                "            color = getColorForMedicarePmts(value);",
                "        }",
                "        else if (field === \"Tot_Dschrgs\") {",
                "            format = f2;",
                "            color = getColorForTotDschrg(value);",
                "        }",
                "        return {",
                "            value: value !== null ? formatNumericValue(value, format) : null,",
                "            style: {",
                "                \"color\": color.bgcolor,",
                "                \"font-weight\": \"bold\"",
                "                // \"background-color\": color.bgcolor",
                "            },",
                "        };",
                "    },",
                "};",
                "function getColorForTotPymt(amount) {",
                "    if (amount >= 0 && amount <= 13480) {",
                "        return { color: \"black\", bgcolor: \"#37CFF2\" }; // Color 1",
                "    }",
                "    else if (amount > 13480 && amount <= 19120) {",
                "        return { color: \"black\", bgcolor: \"#19B1D4\" }; // Color 2",
                "    }",
                "    else if (amount > 19120 && amount <= 27580) {",
                "        return { color: \"white\", bgcolor: \"#0093B6\" }; // Color 3",
                "    }",
                "    else if (amount > 27580 && amount <= 42470) {",
                "        return { color: \"white\", bgcolor: \"#007598\" }; // Color 4",
                "    }",
                "    else if (amount > 42470) {",
                "        return { color: \"white\", bgcolor: \"#00577A\" }; // Color 5",
                "    }",
                "}",
                "function getColorForCoveredChrges(amount) {",
                "    if (amount >= 0 && amount <= 41530) {",
                "        return { color: \"black\", bgcolor: \"#37CFF2\" }; // Color 1",
                "    }",
                "    else if (amount > 41530 && amount <= 70240) {",
                "        return { color: \"black\", bgcolor: \"#19B1D4\" }; // Color 2",
                "    }",
                "    else if (amount > 70240 && amount <= 105930) {",
                "        return { color: \"white\", bgcolor: \"#0093B6\" }; // Color 3",
                "    }",
                "    else if (amount > 105930 && amount <= 154380) {",
                "        return { color: \"white\", bgcolor: \"#007598\" }; // Color 4",
                "    }",
                "    else if (amount > 154380) {",
                "        return { color: \"white\", bgcolor: \"#00577A\" }; // Color 5",
                "    }",
                "}",
                "function getColorForMedicarePmts(amount) {",
                "    if (amount >= 0 && amount <= 11320) {",
                "        return { color: \"black\", bgcolor: \"#37CFF2\" }; // Color 1",
                "    }",
                "    else if (amount > 11320 && amount <= 16010) {",
                "        return { color: \"black\", bgcolor: \"#19B1D4\" }; // Color 2",
                "    }",
                "    else if (amount > 16010 && amount <= 23270) {",
                "        return { color: \"white\", bgcolor: \"#0093B6\" }; // Color 3",
                "    }",
                "    else if (amount > 23270 && amount <= 38810) {",
                "        return { color: \"white\", bgcolor: \"#007598\" }; // Color 4",
                "    }",
                "    else if (amount > 38810) {",
                "        return { color: \"white\", bgcolor: \"#00577A\" }; // Color 5",
                "    }",
                "}",
                "function getColorForTotDschrg(amount) {",
                "    if (amount >= 0 && amount <= 26) {",
                "        return { color: \"black\", bgcolor: \"#37CFF2\" }; // Color 1",
                "    }",
                "    else if (amount > 26 && amount <= 37) {",
                "        return { color: \"black\", bgcolor: \"#19B1D4\" }; // Color 2",
                "    }",
                "    else if (amount > 37 && amount <= 69) {",
                "        return { color: \"white\", bgcolor: \"#0093B6\" }; // Color 3",
                "    }",
                "    else if (amount > 69 && amount <= 167) {",
                "        return { color: \"white\", bgcolor: \"#007598\" }; // Color 4",
                "    }",
                "    else if (amount > 167) {",
                "        return { color: \"white\", bgcolor: \"#00577A\" }; // Color 5",
                "    }",
                "}",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\");",
                "// Declare your fields (do not remove this comment line)",
                "const fields = [",
                "    cf.Field(\"DRG_Desc\", \"Procedure\"),",
                "    cf.Field(\"Avg_Submtd_Cvrd_Chrg\", \"Average Covered Charges\"),",
                "    cf.Field(\"Avg_Tot_Pymt_Amt\", \"Average Total Payments\"),",
                "    cf.Field(\"Rndrng_Prvdr_Org_Name\", \"Provider Name\"),",
                "    cf.Field(\"Avg_Mdcr_Pymt_Amt\", \"Average Medicare Payments\"),",
                "    cf.Field(\"Tot_Dschrgs\", \"Total Discharges\"),",
                "    cf.Field(\"state_name\", \"State\"),",
                "    cf.Field(\"Rndrng_Prvdr_City\", \"City\"),",
                "    cf.Field(\"Rndrng_Prvdr_Zip5\", \"Zip Code\"),",
                "    cf.Field(\"DRG_Cd\", \"DRG\"),",
                "    cf.Field(\"Rndrng_Prvdr_CCN\", \"Provider CCN\"),",
                "    cf.Field(\"Rndrng_Prvdr_RUCA\", \"RUCA\"),",
                "    cf.Field(\"Rndrng_Prvdr_RUCA_Desc\", \"RUCA Desc\"),",
                "    cf.Field(\"Rndrng_Prvdr_State_FIPS\", \"State FIPS Code\"),",
                "    cf.Field(\"Rndrng_Prvdr_St\", \"Street Address\")",
                "];",
                "let myData = source.fields(fields);",
                "let color = cf.Color();",
                "color.theme({",
                "    \"headerStyle\": \"background: #525252; color: #e5f5f9; font-weight: bold;\",",
                "    \"headerLabelStyle\": \"font-size: 13px;\",",
                "    \"headerIconStyle\": \"color: #fff; font-size: 13px;\",",
                "    \"headerNumericStyle\": \"color: #f7fcb9\",",
                "    \"rowOddStyle\": \"background: #d3d3d3\",",
                "    \"rowEvenStyle\": \"background: #e6e6e6\",",
                "    \"rowNumericEvenStyle\": \"background: #f9f8f8\",",
                "    \"rowNumericOddStyle\": \"background: #e6e6e6\",",
                "    \"headerResizeLineStyle\": \"border-right-color: #fff; border-right-width: 1px;\",",
                "    \"headerHorizontalLineStyle\": \"border-bottom-color: #fff; border-bottom-width: 1px;\",",
                "    \"tpButtonActive\": \"color: #fff; background: #607d8b;\",",
                "    \"cellMoving\": \"color: black; background: #b0bec5;\",",
                "});",
                "let histogramColor = cf.Color();",
                "histogramColor.theme({ background: \"#eceff1\" });",
                "// --- Define chart options and static filters ---",
                "let myChart = myData.graph(\"Raw Data Table\")",
                "    .set(\"color\", color)",
                "    .set(\"columnFilters\", [",
                "    { field: \"Rndrng_Prvdr_Org_Name\", component: \"slicer\" },",
                "    {",
                "        field: \"DRG_Desc\",",
                "        component: \"slicer\",",
                "        props: {",
                "            selectMode: \"single\",",
                "            limit: 15000,",
                "            width: 600",
                "        }",
                "    },",
                "    { field: \"Avg_Mdcr_Pymt_Amt\", component: \"range\" },",
                "    { field: \"Avg_Submtd_Cvrd_Chrg\", component: \"range\" },",
                "    { field: \"Avg_Tot_Pymt_Amt\", component: \"range\" },",
                "    { field: \"Tot_Dschrgs\", component: \"range\" },",
                "    { field: \"DRG_Cd\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_CCN\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_City\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_RUCA\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_RUCA_Desc\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_St\", component: \"slicer\" },",
                "    { field: \"state_name\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_State_FIPS\", component: \"slicer\" },",
                "    { field: \"Rndrng_Prvdr_Zip5\", component: \"slicer\" },",
                "])",
                "    .limit(100)",
                "    .set(\"columnStats\", {",
                "    enabled: true,",
                "    height: 70,",
                "    widgetProps: [",
                "        { field: \"Rndrng_Prvdr_Org_Name\", props: { color: histogramColor } },",
                "        { field: \"DRG_Desc\", props: { color: histogramColor } },",
                "        { field: \"Avg_Mdcr_Pymt_Amt\", component: \"range\" },",
                "        { field: \"Avg_Submtd_Cvrd_Chrg\", component: \"range\" },",
                "        { field: \"Avg_Tot_Pymt_Amt\", component: \"range\" },",
                "        { field: \"Tot_Dschrgs\" },",
                "        { field: \"DRG_Cd\", component: \"slicer\" },",
                "        { field: \"Rndrng_Prvdr_CCN\", component: \"slicer\" },",
                "        { field: \"Rndrng_Prvdr_City\", props: { color: histogramColor } },",
                "        { field: \"Rndrng_Prvdr_RUCA\", props: { color: histogramColor } },",
                "        { field: \"Rndrng_Prvdr_RUCA_Desc\", props: { color: histogramColor } },",
                "        { field: \"Rndrng_Prvdr_St\", props: { color: histogramColor } },",
                "        { field: \"state_name\", props: { color: histogramColor } },",
                "        { field: \"Rndrng_Prvdr_State_FIPS\", props: { color: histogramColor } },",
                "        { field: \"Rndrng_Prvdr_Zip5\", component: \"slicer\" }",
                "    ]",
                "})",
                "    .set(\"columnsWidth\", [",
                "    { \"Avg_Submtd_Cvrd_Chrg\": 226 },",
                "    { \"Avg_Tot_Pymt_Amt\": 224 },",
                "    { \"Rndrng_Prvdr_Org_Name\": 240 },",
                "    { \"DRG_Desc\": 559 },",
                "    { \"Avg_Mdcr_Pymt_Amt\": 238 },",
                "    { \"Tot_Dschrgs\": 182 },",
                "    { \"DRG_Cd\": 100 },",
                "    { \"Rndrng_Prvdr_CCN\": 213 },",
                "    { \"Rndrng_Prvdr_City\": 82 },",
                "    { \"state_name\": 134 },",
                "    { \"Rndrng_Prvdr_Zip5\": 204 },",
                "    { \"Rndrng_Prvdr_RUCA\": 248 },",
                "    { \"Rndrng_Prvdr_RUCA_Desc\": 367 },",
                "    { \"Rndrng_Prvdr_State_FIPS\": 279 },",
                "    { \"Rndrng_Prvdr_St\": 215 }",
                "])",
                "    .set(\"cellFormat\", formatter)",
                "    .set(\"columnPinning\", [",
                "    {",
                "        \"field\": \"Rndrng_Prvdr_Org_Name\",",
                "        \"position\": \"left\"",
                "    },",
                "    {",
                "        \"field\": \"DRG_Desc\",",
                "        \"position\": \"left\"",
                "    }",
                "])",
                "    .set(\"sort\", [{ \"DRG_Desc\": \"asc\" }, { \"Rndrng_Prvdr_Org_Name\": \"asc\" }])",
                "    .execute();",
                ""
            ],
            "showUI": false,
            "syncedFields": [
                "Rndrng_Prvdr_CCN",
                "Rndrng_Prvdr_RUCA",
                "Rndrng_Prvdr_RUCA_Desc",
                "state_name",
                "Rndrng_Prvdr_State_Abrvtn",
                "Rndrng_Prvdr_State_FIPS",
                "Rndrng_Prvdr_Zip5"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": "This chart displays the average total payment amounts based on the rendering provider's city. It provides insights into payment discrepancies between different cities."
        },
        {
            "id": "vis52e7d31f-8ae8-447a-bf34-bb3959def27a",
            "layout": {
                "w": 6,
                "h": 1,
                "x": 6,
                "y": 12,
                "i": "vis52e7d31f-8ae8-447a-bf34-bb3959def27a1",
                "moved": false,
                "static": false
            },
            "title": "Select your cost metric for the heatmap",
            "visualization": "Field Selector",
            "source": {
                "name": "mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon",
                "provider": {
                    "name": "Elasticsearch",
                    "type": "elasticsearch"
                }
            },
            "code": [
                "// Interaction Manager uses filter(), filters(), clientFilter(),",
                "// and clientFilters() to manage filters. To apply additional",
                "// filters, use staticFilters() or your code could be overwritten.",
                "//",
                "/* Configuration code for this widget */",
                "let provider = cf.provider(\"Elasticsearch\");",
                "let source = provider.source(\"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\");",
                "let myChart = source.graph(\"Field Selector\")",
                "    .set(\"fields\", [\"Avg_Mdcr_Pymt_Amt\", \"Avg_Submtd_Cvrd_Chrg\", \"Avg_Tot_Pymt_Amt\", \"Tot_Dschrgs\"])",
                "    .set(\"field\", \"Avg_Tot_Pymt_Amt\")",
                "    .set(\"metric\", 1)",
                "    .set(\"charts\", [",
                "    getId(\"#### Top 50 DRGs and Top 50 Rendering providers\"),",
                "    getId(\"Bars\")",
                "])",
                "    .execute();",
                ""
            ],
            "showUI": true,
            "syncedFields": [
                "DRG_Desc",
                "Rndrng_Prvdr_Org_Name",
                "Avg_Tot_Pymt_Amt",
                "Avg_Mdcr_Pymt_Amt",
                "Tot_Dschrgs",
                "DRG_Cd",
                "Avg_Submtd_Cvrd_Chrg",
                "Rndrng_Prvdr_CCN",
                "Rndrng_Prvdr_City",
                "Rndrng_Prvdr_RUCA",
                "Rndrng_Prvdr_RUCA_Desc",
                "Rndrng_Prvdr_St",
                "Rndrng_Prvdr_State_Abrvtn",
                "Rndrng_Prvdr_State_FIPS",
                "Rndrng_Prvdr_Zip5",
                "state_name"
            ],
            "showTitle": true,
            "enableClientFilters": false,
            "enableAutoDrill": false,
            "staticFilters": 0,
            "description": "This chart displays the average total payment amounts based on the rendering provider's city. It provides insights into payment discrepancies between different cities."
        }
    ],
    "filters": [],
    "savedFilters": [],
    "folderPath": "/",
    "deletedWidgets": [],
    "IM": {
        "id": "cfs-interaction-manager",
        "isIManager": true,
        "layout": null,
        "title": "Filters",
        "visualization": "Interaction Manager",
        "source": {},
        "code": [
            "",
            "let viz2 = getId(\"#### Top 50 DRGs and Top 50 Rendering providers\");",
            "let viz1 = getId(\"Medicare provider charges\", \"States\");",
            "let rules1 = { [viz2]: { clientFilters: false }, [viz1]: { clientFilters: true }, };",
            "const state_source = \"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\";",
            "const zip_source = \"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\";",
            "/* Configuration code for the Interaction Manager*/",
            "let drill = {",
            "    [viz1]: {",
            "        rows: {",
            "            1: [",
            "                {",
            "                    field: \"state_name\",",
            "                    onceOnDrill: {",
            "                        fitBounds: true,",
            "                        \"color\": {",
            "                            dynamic: true",
            "                        }",
            "                    },",
            "                    default: {",
            "                        source: state_source,",
            "                        shape: \"https://chartfactor.com/resources/us-states.json\",",
            "                        zoom: 3.5,",
            "                        shapeOpacity: 0.8,",
            "                        center: [-102.04101571177736, 40.59713185510612],",
            "                        legend: \"right\"",
            "                    }",
            "                },",
            "                {",
            "                    field: \"Rndrng_Prvdr_Zip5\",",
            "                    default: {",
            "                        source: zip_source,",
            "                        shape: \"https://aktiun-resources.s3.amazonaws.com/geojsons/USA/ZipCodes/{name}.json\",",
            "                        prevShape: {",
            "                            shapeOpacity: 0.01",
            "                        },",
            "                        featureProperty: \"ZCTA5CE10\",",
            "                        legend: \"right\"",
            "                    },",
            "                    prevFilterValue: {",
            "                        Alaska: {",
            "                            shape: \"https://aktiun-resources.s3.amazonaws.com/geojsons/USA/ZipCodes/Alaska.json\",",
            "                            zoom: 4,",
            "                            center: [-145.144157409668, 63.536009259064535],",
            "                            legend: \"top-right\"",
            "                        }",
            "                    }",
            "                }",
            "            ]",
            "        }",
            "    }",
            "};",
            "// let rules = { [viz2]: { receive: false }}",
            "// NOTE: Drill hierarchy will change your code!",
            "// Define options",
            "let aktive = cf.create();",
            "let myChart = aktive.graph(\"Interaction Manager\")",
            "    .set(\"drill\", drill)",
            "    .set(\"rules\", rules1)",
            "    .set(\"skin\", \"modern\")",
            "    .execute();",
            ""
        ],
        "showUI": false,
        "syncedFields": [],
        "showTitle": true,
        "enableClientFilters": false,
        "enableAutoDrill": false,
        "staticFilters": 0,
        "description": null
    },
    "hideIM": false,
    "metadata": {
        "Elasticsearch": [
            "let _META_ = {\r",
            "    \"mup_ihp_ry23_p03_v10_dy21_prvsvc_lat_lon\": {\r",
            "        \"count\": {\r",
            "          \"label\": \"Provider Service records\"\r",
            "        },\r",
            "        \"fields\": {\r",
            "            \"Rndrng_Prvdr_CCN\": {\r",
            "                \"label\": \"Provider CCN\",\r",
            "                type: \"ATTRIBUTE\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_Org_Name\": {\r",
            "                \"label\": \"Provider Name\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_State_Abrvtn\": {\r",
            "                \"label\": \"State Abbreviation\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_St\": {\r",
            "                \"label\": \"Street Address\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_State_FIPS\": {\r",
            "                \"label\": \"State FIPS Code\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_City\": {\r",
            "                \"label\": \"City\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_Zip5\": {\r",
            "                \"label\": \"Zip Code\",\r",
            "                \"type\": \"ATTRIBUTE\"\r",
            "            },\r",
            "            \"Avg_Mdcr_Pymt_Amt\": {\r",
            "                \"label\": \"Average Medicare Payments\",\r",
            "                \"type\": \"MONEY\",\r",
            "                \"displayFormat\": \"$ 0,0\"\r",
            "            },\r",
            "            \"Avg_Submtd_Cvrd_Chrg\": {\r",
            "                \"label\": \"Average Covered Charges\",\r",
            "                \"type\": \"MONEY\",\r",
            "                \"displayFormat\": \"$ 0,0\"\r",
            "            },\r",
            "            \"Avg_Tot_Pymt_Amt\": {\r",
            "                \"label\": \"Average Total Payments\",\r",
            "                \"type\": \"MONEY\",\r",
            "                \"displayFormat\": \"$ 0,0\"\r",
            "            },\r",
            "            \"DRG_Cd\": {\r",
            "                \"label\": \"DRG\",\r",
            "                type: \"ATTRIBUTE\"\r",
            "            },\r",
            "            \"DRG_Desc\": {\r",
            "                \"label\": \"Procedure\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_RUCA\": {\r",
            "                \"label\": \"RUCA\"\r",
            "            },\r",
            "            \"Rndrng_Prvdr_RUCA_Desc\": {\r",
            "                \"label\": \"RUCA Desc\"\r",
            "            },\r",
            "            \"Tot_Dschrgs\": {\r",
            "                \"label\": \"Total Discharges\",\r",
            "                \"displayFormat\": \"0,0\"\r",
            "            },\r",
            "            \"state_name\": {\r",
            "                \"label\": \"State\"\r",
            "            }\r",
            "        }\r",
            "    }\r",
            "};\r",
            ""
        ]
    },
    "customQueries": {}
}||||[
    {
        "active": true,
        "id": "a94cc173-3948-418b-a251-f40decabaec0",
        "isLocal": true,
        "name": "Elasticsearch",
        "provider": "elasticsearch",
        "url": "https://chartfactor.com/elastic/"
    }
]